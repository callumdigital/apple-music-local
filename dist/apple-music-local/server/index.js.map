{
  "version": 3,
  "sources": ["../../node_modules/strtok3/lib/stream/Errors.js", "../../node_modules/strtok3/lib/stream/Deferred.js", "../../node_modules/strtok3/lib/stream/AbstractStreamReader.js", "../../node_modules/strtok3/lib/stream/StreamReader.js", "../../node_modules/strtok3/lib/stream/WebStreamReader.js", "../../node_modules/strtok3/lib/stream/WebStreamByobReader.js", "../../node_modules/strtok3/lib/stream/WebStreamDefaultReader.js", "../../node_modules/strtok3/lib/stream/WebStreamReaderFactory.js", "../../node_modules/strtok3/lib/stream/index.js", "../../node_modules/strtok3/lib/AbstractTokenizer.js", "../../node_modules/strtok3/lib/ReadStreamTokenizer.js", "../../node_modules/strtok3/lib/BufferTokenizer.js", "../../node_modules/strtok3/lib/BlobTokenizer.js", "../../node_modules/strtok3/lib/core.js", "../../node_modules/strtok3/lib/FileTokenizer.js", "../../node_modules/strtok3/lib/index.js", "../../node_modules/ms/index.js", "../../node_modules/debug/src/common.js", "../../node_modules/debug/src/browser.js", "../../node_modules/has-flag/index.js", "../../node_modules/supports-color/index.js", "../../node_modules/debug/src/node.js", "../../node_modules/debug/src/index.js", "../../node_modules/ieee754/index.js", "../../node_modules/token-types/node_modules/@borewit/text-codec/lib/index.js", "../../node_modules/token-types/lib/index.js", "../../node_modules/uint8array-extras/index.js", "../../node_modules/content-type/index.js", "../../node_modules/media-typer/index.js", "../../node_modules/music-metadata/lib/matroska/types.js", "../../node_modules/music-metadata/lib/ParseError.js", "../../node_modules/music-metadata/lib/common/Util.js", "../../node_modules/music-metadata/lib/id3v2/ID3v2Token.js", "../../node_modules/music-metadata/lib/type.js", "../../node_modules/music-metadata/lib/common/BasicParser.js", "../../node_modules/@borewit/text-codec/lib/index.js", "../../node_modules/music-metadata/lib/common/FourCC.js", "../../node_modules/music-metadata/lib/apev2/APEv2Token.js", "../../node_modules/music-metadata/lib/apev2/APEv2Parser.js", "../../node_modules/music-metadata/lib/id3v1/ID3v1Parser.js", "../../node_modules/music-metadata/lib/id3v2/FrameParser.js", "../../node_modules/music-metadata/lib/id3v2/ID3v2Parser.js", "../../node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js", "../../node_modules/music-metadata/lib/mpeg/ReplayGainDataFormat.js", "../../node_modules/music-metadata/lib/mpeg/ExtendedLameHeader.js", "../../node_modules/music-metadata/lib/mpeg/XingTag.js", "../../node_modules/music-metadata/lib/mpeg/MpegParser.js", "../../node_modules/music-metadata/lib/asf/GUID.js", "../../node_modules/music-metadata/lib/asf/AsfUtil.js", "../../node_modules/music-metadata/lib/asf/AsfObject.js", "../../node_modules/music-metadata/lib/asf/AsfParser.js", "../../node_modules/music-metadata/lib/dsdiff/DsdiffToken.js", "../../node_modules/music-metadata/lib/dsdiff/DsdiffParser.js", "../../node_modules/music-metadata/lib/aiff/AiffToken.js", "../../node_modules/music-metadata/lib/iff/index.js", "../../node_modules/music-metadata/lib/aiff/AiffParser.js", "../../node_modules/music-metadata/lib/dsf/DsfChunk.js", "../../node_modules/music-metadata/lib/dsf/DsfParser.js", "../../node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js", "../../node_modules/music-metadata/lib/ogg/vorbis/VorbisDecoder.js", "../../node_modules/music-metadata/lib/ogg/vorbis/VorbisStream.js", "../../node_modules/music-metadata/lib/flac/FlacToken.js", "../../node_modules/music-metadata/lib/flac/FlacParser.js", "../../node_modules/music-metadata/lib/ebml/types.js", "../../node_modules/music-metadata/lib/matroska/MatroskaDtd.js", "../../node_modules/music-metadata/lib/ebml/EbmlIterator.js", "../../node_modules/music-metadata/lib/matroska/MatroskaParser.js", "../../node_modules/music-metadata/lib/mp4/AtomToken.js", "../../node_modules/music-metadata/lib/mp4/Atom.js", "../../node_modules/music-metadata/lib/mp4/MP4Parser.js", "../../node_modules/music-metadata/lib/musepack/sv8/StreamVersion8.js", "../../node_modules/music-metadata/lib/musepack/MusepackConentError.js", "../../node_modules/music-metadata/lib/musepack/sv8/MpcSv8Parser.js", "../../node_modules/music-metadata/lib/musepack/sv7/BitReader.js", "../../node_modules/music-metadata/lib/musepack/sv7/StreamVersion7.js", "../../node_modules/music-metadata/lib/musepack/sv7/MpcSv7Parser.js", "../../node_modules/music-metadata/lib/musepack/MusepackParser.js", "../../node_modules/music-metadata/lib/ogg/opus/Opus.js", "../../node_modules/music-metadata/lib/ogg/opus/OpusStream.js", "../../node_modules/music-metadata/lib/ogg/speex/Speex.js", "../../node_modules/music-metadata/lib/ogg/speex/SpeexStream.js", "../../node_modules/music-metadata/lib/ogg/theora/Theora.js", "../../node_modules/music-metadata/lib/ogg/theora/TheoraStream.js", "../../node_modules/music-metadata/lib/ogg/OggToken.js", "../../node_modules/music-metadata/lib/ogg/flac/FlacStream.js", "../../node_modules/music-metadata/lib/ogg/OggParser.js", "../../node_modules/music-metadata/lib/wavpack/WavPackToken.js", "../../node_modules/music-metadata/lib/wavpack/WavPackParser.js", "../../node_modules/music-metadata/lib/riff/RiffChunk.js", "../../node_modules/music-metadata/lib/wav/WaveChunk.js", "../../node_modules/music-metadata/lib/wav/BwfChunk.js", "../../node_modules/music-metadata/lib/wav/WaveParser.js", "../../node_modules/@deskthing/server/dist/index.js", "../../server/index.ts", "../../node_modules/music-metadata/lib/index.js", "../../node_modules/music-metadata/lib/core.js", "../../node_modules/file-type/index.js", "../../node_modules/file-type/core.js", "../../node_modules/@tokenizer/inflate/lib/index.js", "../../node_modules/fflate/esm/index.mjs", "../../node_modules/@tokenizer/inflate/lib/ZipToken.js", "../../node_modules/file-type/util.js", "../../node_modules/file-type/supported.js", "../../node_modules/music-metadata/lib/ParserFactory.js", "../../node_modules/music-metadata/lib/common/MetadataCollector.js", "../../node_modules/music-metadata/lib/common/GenericTagTypes.js", "../../node_modules/music-metadata/lib/common/GenericTagMapper.js", "../../node_modules/music-metadata/lib/id3v1/ID3v1TagMap.js", "../../node_modules/music-metadata/lib/id3v2/ID3v24TagMapper.js", "../../node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js", "../../node_modules/music-metadata/lib/asf/AsfTagMapper.js", "../../node_modules/music-metadata/lib/id3v2/ID3v22TagMapper.js", "../../node_modules/music-metadata/lib/apev2/APEv2TagMapper.js", "../../node_modules/music-metadata/lib/mp4/MP4TagMapper.js", "../../node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js", "../../node_modules/music-metadata/lib/riff/RiffInfoTagMap.js", "../../node_modules/music-metadata/lib/matroska/MatroskaTagMapper.js", "../../node_modules/music-metadata/lib/aiff/AiffTagMap.js", "../../node_modules/music-metadata/lib/common/CombinedTagMapper.js", "../../node_modules/music-metadata/lib/lrc/LyricsParser.js", "../../node_modules/music-metadata/lib/mpeg/MpegLoader.js", "../../node_modules/music-metadata/lib/apev2/Apev2Loader.js", "../../node_modules/music-metadata/lib/asf/AsfLoader.js", "../../node_modules/music-metadata/lib/dsdiff/DsdiffLoader.js", "../../node_modules/music-metadata/lib/aiff/AiffLoader.js", "../../node_modules/music-metadata/lib/dsf/DsfLoader.js", "../../node_modules/music-metadata/lib/flac/FlacLoader.js", "../../node_modules/music-metadata/lib/matroska/MatroskaLoader.js", "../../node_modules/music-metadata/lib/mp4/Mp4Loader.js", "../../node_modules/music-metadata/lib/musepack/MusepackLoader.js", "../../node_modules/music-metadata/lib/ogg/OggLoader.js", "../../node_modules/music-metadata/lib/wavpack/WavPackLoader.js", "../../node_modules/music-metadata/lib/wav/WaveLoader.js", "../../node_modules/music-metadata/lib/lyrics3/Lyrics3.js"],
  "sourcesContent": ["export const defaultMessages = 'End-Of-Stream';\n/**\n * Thrown on read operation of the end of file or stream has been reached\n */\nexport class EndOfStreamError extends Error {\n    constructor() {\n        super(defaultMessages);\n        this.name = \"EndOfStreamError\";\n    }\n}\nexport class AbortError extends Error {\n    constructor(message = \"The operation was aborted\") {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n", "export class Deferred {\n    constructor() {\n        this.resolve = () => null;\n        this.reject = () => null;\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n", "import { EndOfStreamError, AbortError } from \"./Errors.js\";\nexport class AbstractStreamReader {\n    constructor() {\n        this.endOfStream = false;\n        this.interrupted = false;\n        /**\n         * Store peeked data\n         * @type {Array}\n         */\n        this.peekQueue = [];\n    }\n    async peek(uint8Array, mayBeLess = false) {\n        const bytesRead = await this.read(uint8Array, mayBeLess);\n        this.peekQueue.push(uint8Array.subarray(0, bytesRead)); // Put read data back to peek buffer\n        return bytesRead;\n    }\n    async read(buffer, mayBeLess = false) {\n        if (buffer.length === 0) {\n            return 0;\n        }\n        let bytesRead = this.readFromPeekBuffer(buffer);\n        if (!this.endOfStream) {\n            bytesRead += await this.readRemainderFromStream(buffer.subarray(bytesRead), mayBeLess);\n        }\n        if (bytesRead === 0 && !mayBeLess) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Read chunk from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @returns Number of bytes read\n     */\n    readFromPeekBuffer(buffer) {\n        let remaining = buffer.length;\n        let bytesRead = 0;\n        // consume peeked data first\n        while (this.peekQueue.length > 0 && remaining > 0) {\n            const peekData = this.peekQueue.pop(); // Front of queue\n            if (!peekData)\n                throw new Error('peekData should be defined');\n            const lenCopy = Math.min(peekData.length, remaining);\n            buffer.set(peekData.subarray(0, lenCopy), bytesRead);\n            bytesRead += lenCopy;\n            remaining -= lenCopy;\n            if (lenCopy < peekData.length) {\n                // remainder back to queue\n                this.peekQueue.push(peekData.subarray(lenCopy));\n            }\n        }\n        return bytesRead;\n    }\n    async readRemainderFromStream(buffer, mayBeLess) {\n        let bytesRead = 0;\n        // Continue reading from stream if required\n        while (bytesRead < buffer.length && !this.endOfStream) {\n            if (this.interrupted) {\n                throw new AbortError();\n            }\n            const chunkLen = await this.readFromStream(buffer.subarray(bytesRead), mayBeLess);\n            if (chunkLen === 0)\n                break;\n            bytesRead += chunkLen;\n        }\n        if (!mayBeLess && bytesRead < buffer.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n}\n", "import { AbortError, } from './Errors.js';\nimport { Deferred } from './Deferred.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\n/**\n * Node.js Readable Stream Reader\n * Ref: https://nodejs.org/api/stream.html#readable-streams\n */\nexport class StreamReader extends AbstractStreamReader {\n    constructor(s) {\n        super();\n        this.s = s;\n        /**\n         * Deferred used for postponed read request (as not data is yet available to read)\n         */\n        this.deferred = null;\n        if (!s.read || !s.once) {\n            throw new Error('Expected an instance of stream.Readable');\n        }\n        this.s.once('end', () => {\n            this.endOfStream = true;\n            if (this.deferred) {\n                this.deferred.resolve(0);\n            }\n        });\n        this.s.once('error', err => this.reject(err));\n        this.s.once('close', () => this.abort());\n    }\n    /**\n     * Read chunk from stream\n     * @param buffer Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @returns Number of bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        const readBuffer = this.s.read(buffer.length);\n        if (readBuffer) {\n            buffer.set(readBuffer);\n            return readBuffer.length;\n        }\n        const request = {\n            buffer,\n            mayBeLess,\n            deferred: new Deferred()\n        };\n        this.deferred = request.deferred;\n        this.s.once('readable', () => {\n            this.readDeferred(request);\n        });\n        return request.deferred.promise;\n    }\n    /**\n     * Process deferred read request\n     * @param request Deferred read request\n     */\n    readDeferred(request) {\n        const readBuffer = this.s.read(request.buffer.length);\n        if (readBuffer) {\n            request.buffer.set(readBuffer);\n            request.deferred.resolve(readBuffer.length);\n            this.deferred = null;\n        }\n        else {\n            this.s.once('readable', () => {\n                this.readDeferred(request);\n            });\n        }\n    }\n    reject(err) {\n        this.interrupted = true;\n        if (this.deferred) {\n            this.deferred.reject(err);\n            this.deferred = null;\n        }\n    }\n    async abort() {\n        this.reject(new AbortError());\n    }\n    async close() {\n        return this.abort();\n    }\n}\n", "import { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n    }\n    async abort() {\n        return this.close();\n    }\n    async close() {\n        this.reader.releaseLock();\n    }\n}\n", "import { WebStreamReader } from './WebStreamReader.js';\n/**\n * Read from a WebStream using a BYOB reader\n * Reference: https://nodejs.org/api/webstreams.html#class-readablestreambyobreader\n */\nexport class WebStreamByobReader extends WebStreamReader {\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        // @ts-ignore\n        const result = await this.reader.read(new Uint8Array(buffer.length), { min: mayBeLess ? undefined : buffer.length });\n        if (result.done) {\n            this.endOfStream = result.done;\n        }\n        if (result.value) {\n            buffer.set(result.value);\n            return result.value.length;\n        }\n        return 0;\n    }\n}\n", "import { EndOfStreamError } from './Errors.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamDefaultReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n        this.buffer = null; // Internal buffer to store excess data\n    }\n    /**\n     * Copy chunk to target, and store the remainder in this.buffer\n     */\n    writeChunk(target, chunk) {\n        const written = Math.min(chunk.length, target.length);\n        target.set(chunk.subarray(0, written));\n        // Adjust the remainder of the buffer\n        if (written < chunk.length) {\n            this.buffer = chunk.subarray(written);\n        }\n        else {\n            this.buffer = null;\n        }\n        return written;\n    }\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        let totalBytesRead = 0;\n        // Serve from the internal buffer first\n        if (this.buffer) {\n            totalBytesRead += this.writeChunk(buffer, this.buffer);\n        }\n        // Continue reading from the stream if more data is needed\n        while (totalBytesRead < buffer.length && !this.endOfStream) {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.endOfStream = true;\n                break;\n            }\n            if (result.value) {\n                totalBytesRead += this.writeChunk(buffer.subarray(totalBytesRead), result.value);\n            }\n        }\n        if (!mayBeLess && totalBytesRead === 0 && this.endOfStream) {\n            throw new EndOfStreamError();\n        }\n        return totalBytesRead;\n    }\n    abort() {\n        this.interrupted = true;\n        return this.reader.cancel();\n    }\n    async close() {\n        await this.abort();\n        this.reader.releaseLock();\n    }\n}\n", "import { WebStreamByobReader } from './WebStreamByobReader.js';\nimport { WebStreamDefaultReader } from './WebStreamDefaultReader.js';\nexport function makeWebStreamReader(stream) {\n    try {\n        const reader = stream.getReader({ mode: \"byob\" });\n        if (reader instanceof ReadableStreamDefaultReader) {\n            // Fallback to default reader in case `mode: byob` is ignored\n            return new WebStreamDefaultReader(reader);\n        }\n        return new WebStreamByobReader(reader);\n    }\n    catch (error) {\n        if (error instanceof TypeError) {\n            // Fallback to default reader in case `mode: byob` rejected by a `TypeError`\n            return new WebStreamDefaultReader(stream.getReader());\n        }\n        throw error;\n    }\n}\n", "export { AbortError, EndOfStreamError } from './Errors.js';\nexport { StreamReader } from './StreamReader.js';\nexport { WebStreamByobReader } from './WebStreamByobReader.js';\nexport { WebStreamDefaultReader } from './WebStreamDefaultReader.js';\nexport { makeWebStreamReader } from './WebStreamReaderFactory.js';\n", "import { EndOfStreamError } from './stream/index.js';\n/**\n * Core tokenizer\n */\nexport class AbstractTokenizer {\n    /**\n     * Constructor\n     * @param options Tokenizer options\n     * @protected\n     */\n    constructor(options) {\n        this.numBuffer = new Uint8Array(8);\n        /**\n         * Tokenizer-stream position\n         */\n        this.position = 0;\n        this.onClose = options?.onClose;\n        if (options?.abortSignal) {\n            options.abortSignal.addEventListener('abort', () => {\n                this.abort();\n            });\n        }\n    }\n    /**\n     * Read a token from the tokenizer-stream\n     * @param token - The token to read\n     * @param position - If provided, the desired position in the tokenizer-stream\n     * @returns Promise with token data\n     */\n    async readToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.readBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Peek a token from the tokenizer-stream.\n     * @param token - Token to peek from the tokenizer-stream.\n     * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\n     * @returns Promise with token data\n     */\n    async peekToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.peekBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async readNumber(token) {\n        const len = await this.readBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async peekNumber(token) {\n        const len = await this.peekBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Ignore number of bytes, advances the pointer in under tokenizer-stream.\n     * @param length - Number of bytes to ignore\n     * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\n     */\n    async ignore(length) {\n        if (this.fileInfo.size !== undefined) {\n            const bytesLeft = this.fileInfo.size - this.position;\n            if (length > bytesLeft) {\n                this.position += bytesLeft;\n                return bytesLeft;\n            }\n        }\n        this.position += length;\n        return length;\n    }\n    async close() {\n        await this.abort();\n        await this.onClose?.();\n    }\n    normalizeOptions(uint8Array, options) {\n        if (!this.supportsRandomAccess() && options && options.position !== undefined && options.position < this.position) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        return {\n            ...{\n                mayBeLess: false,\n                offset: 0,\n                length: uint8Array.length,\n                position: this.position\n            }, ...options\n        };\n    }\n    abort() {\n        return Promise.resolve(); // Ignore abort signal\n    }\n}\n", "import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from './stream/index.js';\nconst maxBufferSize = 256000;\nexport class ReadStreamTokenizer extends AbstractTokenizer {\n    /**\n     * Constructor\n     * @param streamReader stream-reader to read from\n     * @param options Tokenizer options\n     */\n    constructor(streamReader, options) {\n        super(options);\n        this.streamReader = streamReader;\n        this.fileInfo = options?.fileInfo ?? {};\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Target Uint8Array to fill with data read from the tokenizer-stream\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes read\n     */\n    async readBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const skipBytes = normOptions.position - this.position;\n        if (skipBytes > 0) {\n            await this.ignore(skipBytes);\n            return this.readBuffer(uint8Array, options);\n        }\n        if (skipBytes < 0) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        if (normOptions.length === 0) {\n            return 0;\n        }\n        const bytesRead = await this.streamReader.read(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n        this.position += bytesRead;\n        if ((!options || !options.mayBeLess) && bytesRead < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array - Uint8Array (or Buffer) to write data to\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes peeked\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        let bytesRead = 0;\n        if (normOptions.position) {\n            const skipBytes = normOptions.position - this.position;\n            if (skipBytes > 0) {\n                const skipBuffer = new Uint8Array(normOptions.length + skipBytes);\n                bytesRead = await this.peekBuffer(skipBuffer, { mayBeLess: normOptions.mayBeLess });\n                uint8Array.set(skipBuffer.subarray(skipBytes));\n                return bytesRead - skipBytes;\n            }\n            if (skipBytes < 0) {\n                throw new Error('Cannot peek from a negative offset in a stream');\n            }\n        }\n        if (normOptions.length > 0) {\n            try {\n                bytesRead = await this.streamReader.peek(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n            }\n            catch (err) {\n                if (options?.mayBeLess && err instanceof EndOfStreamError) {\n                    return 0;\n                }\n                throw err;\n            }\n            if ((!normOptions.mayBeLess) && bytesRead < normOptions.length) {\n                throw new EndOfStreamError();\n            }\n        }\n        return bytesRead;\n    }\n    async ignore(length) {\n        // debug(`ignore ${this.position}...${this.position + length - 1}`);\n        const bufSize = Math.min(maxBufferSize, length);\n        const buf = new Uint8Array(bufSize);\n        let totBytesRead = 0;\n        while (totBytesRead < length) {\n            const remaining = length - totBytesRead;\n            const bytesRead = await this.readBuffer(buf, { length: Math.min(bufSize, remaining) });\n            if (bytesRead < 0) {\n                return bytesRead;\n            }\n            totBytesRead += bytesRead;\n        }\n        return totBytesRead;\n    }\n    abort() {\n        return this.streamReader.abort();\n    }\n    async close() {\n        return this.streamReader.close();\n    }\n    supportsRandomAccess() {\n        return false;\n    }\n}\n", "import { EndOfStreamError } from './stream/index.js';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BufferTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(uint8Array, options) {\n        super(options);\n        this.uint8Array = uint8Array;\n        this.fileInfo = { ...options?.fileInfo ?? {}, ...{ size: uint8Array.length } };\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read));\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n}\n", "import { EndOfStreamError } from './stream/index.js';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BlobTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param blob - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(blob, options) {\n        super(options);\n        this.blob = blob;\n        this.fileInfo = { ...options?.fileInfo ?? {}, ...{ size: blob.size, mimeType: blob.type } };\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param buffer\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(buffer, options) {\n        const normOptions = this.normalizeOptions(buffer, options);\n        const bytes2read = Math.min(this.blob.size - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        const arrayBuffer = await this.blob.slice(normOptions.position, normOptions.position + bytes2read).arrayBuffer();\n        buffer.set(new Uint8Array(arrayBuffer));\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n}\n", "import { StreamReader, makeWebStreamReader } from './stream/index.js';\nimport { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nimport { BlobTokenizer } from './BlobTokenizer.js';\nexport { EndOfStreamError, AbortError } from './stream/index.js';\nexport { AbstractTokenizer } from './AbstractTokenizer.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, options) {\n    const streamReader = new StreamReader(stream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await streamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(streamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given ReadableStream (WebStream API).\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param webStream - Read from Node.js Stream.Readable (must be a byte stream)\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromWebStream(webStream, options) {\n    const webStreamReader = makeWebStreamReader(webStream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await webStreamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(webStreamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, options) {\n    return new BufferTokenizer(uint8Array, options);\n}\n/**\n * Construct ReadStreamTokenizer from given Blob.\n * @param blob - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBlob(blob, options) {\n    return new BlobTokenizer(blob, options);\n}\n", "import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from './stream/index.js';\nimport { open as fsOpen } from 'node:fs/promises';\nexport class FileTokenizer extends AbstractTokenizer {\n    /**\n     * Create tokenizer from provided file path\n     * @param sourceFilePath File path\n     */\n    static async fromFile(sourceFilePath) {\n        const fileHandle = await fsOpen(sourceFilePath, 'r');\n        const stat = await fileHandle.stat();\n        return new FileTokenizer(fileHandle, { fileInfo: { path: sourceFilePath, size: stat.size } });\n    }\n    constructor(fileHandle, options) {\n        super(options);\n        this.fileHandle = fileHandle;\n        this.fileInfo = options.fileInfo;\n    }\n    /**\n     * Read buffer from file\n     * @param uint8Array - Uint8Array to write result to\n     * @param options - Read behaviour options\n     * @returns Promise number of bytes read\n     */\n    async readBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        this.position = normOptions.position;\n        if (normOptions.length === 0)\n            return 0;\n        const res = await this.fileHandle.read(uint8Array, 0, normOptions.length, normOptions.position);\n        this.position += res.bytesRead;\n        if (res.bytesRead < normOptions.length && (!options || !options.mayBeLess)) {\n            throw new EndOfStreamError();\n        }\n        return res.bytesRead;\n    }\n    /**\n     * Peek buffer from file\n     * @param uint8Array - Uint8Array (or Buffer) to write data to\n     * @param options - Read behaviour options\n     * @returns Promise number of bytes read\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const res = await this.fileHandle.read(uint8Array, 0, normOptions.length, normOptions.position);\n        if ((!normOptions.mayBeLess) && res.bytesRead < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        return res.bytesRead;\n    }\n    async close() {\n        await this.fileHandle.close();\n        return super.close();\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n}\n", "import { stat as fsStat } from 'node:fs/promises';\nimport { fromStream as coreFromStream } from './core.js';\nimport { FileTokenizer } from \"./FileTokenizer.js\";\nexport { FileTokenizer } from './FileTokenizer.js';\nexport * from './core.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property.\n * @param stream - Node.js Stream.Readable\n * @param options - Pass additional file information to the tokenizer\n * @returns Tokenizer\n */\nexport async function fromStream(stream, options) {\n    const rst = coreFromStream(stream, options);\n    if (stream.path) {\n        const stat = await fsStat(stream.path);\n        rst.fileInfo.path = stream.path;\n        rst.fileInfo.size = stat.size;\n    }\n    return rst;\n}\nexport const fromFile = FileTokenizer.fromFile;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "// text-polyfill.ts\n// Minimal encode/decode for utf-8, utf-16le, ascii, latin1, windows-1252\nconst WINDOWS_1252_EXTRA = {\n    0x80: \"\u20AC\", 0x82: \"\u201A\", 0x83: \"\u0192\", 0x84: \"\u201E\", 0x85: \"\u2026\", 0x86: \"\u2020\",\n    0x87: \"\u2021\", 0x88: \"\u02C6\", 0x89: \"\u2030\", 0x8a: \"\u0160\", 0x8b: \"\u2039\", 0x8c: \"\u0152\",\n    0x8e: \"\u017D\", 0x91: \"\u2018\", 0x92: \"\u2019\", 0x93: \"\u201C\", 0x94: \"\u201D\", 0x95: \"\u2022\",\n    0x96: \"\u2013\", 0x97: \"\u2014\", 0x98: \"\u02DC\", 0x99: \"\u2122\", 0x9a: \"\u0161\", 0x9b: \"\u203A\",\n    0x9c: \"\u0153\", 0x9e: \"\u017E\", 0x9f: \"\u0178\",\n};\nconst WINDOWS_1252_REVERSE = {};\nfor (const [code, char] of Object.entries(WINDOWS_1252_EXTRA)) {\n    WINDOWS_1252_REVERSE[char] = Number.parseInt(code);\n}\n/**\n * Decode text from binary data\n * @param bytes Binary data\n * @param encoding Encoding\n */\nexport function textDecode(bytes, encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextDecoder !== \"undefined\") {\n                return new globalThis.TextDecoder(\"utf-8\").decode(bytes);\n            }\n            return decodeUTF8(bytes);\n        case \"utf-16le\":\n            return decodeUTF16LE(bytes);\n        case \"ascii\":\n            return decodeASCII(bytes);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return decodeLatin1(bytes);\n        case \"windows-1252\":\n            return decodeWindows1252(bytes);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\nexport function textEncode(input = \"\", encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextEncoder !== \"undefined\") {\n                return new globalThis.TextEncoder().encode(input);\n            }\n            return encodeUTF8(input);\n        case \"utf-16le\":\n            return encodeUTF16LE(input);\n        case \"ascii\":\n            return encodeASCII(input);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return encodeLatin1(input);\n        case \"windows-1252\":\n            return encodeWindows1252(input);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\n// --- Internal helpers ---\nfunction decodeUTF8(bytes) {\n    let out = \"\";\n    let i = 0;\n    while (i < bytes.length) {\n        const b1 = bytes[i++];\n        if (b1 < 0x80) {\n            out += String.fromCharCode(b1);\n        }\n        else if (b1 < 0xe0) {\n            const b2 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x1f) << 6) | b2);\n        }\n        else if (b1 < 0xf0) {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x0f) << 12) | (b2 << 6) | b3);\n        }\n        else {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            const b4 = bytes[i++] & 0x3f;\n            let cp = ((b1 & 0x07) << 18) |\n                (b2 << 12) |\n                (b3 << 6) |\n                b4;\n            cp -= 0x10000;\n            out += String.fromCharCode(0xd800 + ((cp >> 10) & 0x3ff), 0xdc00 + (cp & 0x3ff));\n        }\n    }\n    return out;\n}\nfunction decodeUTF16LE(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.length; i += 2) {\n        out += String.fromCharCode(bytes[i] | (bytes[i + 1] << 8));\n    }\n    return out;\n}\nfunction decodeASCII(bytes) {\n    return String.fromCharCode(...bytes.map((b) => b & 0x7f));\n}\nfunction decodeLatin1(bytes) {\n    return String.fromCharCode(...bytes);\n}\nfunction decodeWindows1252(bytes) {\n    let out = \"\";\n    for (const b of bytes) {\n        if (b >= 0x80 && b <= 0x9f && WINDOWS_1252_EXTRA[b]) {\n            out += WINDOWS_1252_EXTRA[b];\n        }\n        else {\n            out += String.fromCharCode(b);\n        }\n    }\n    return out;\n}\nfunction encodeUTF8(str) {\n    const out = [];\n    for (let i = 0; i < str.length; i++) {\n        const cp = str.charCodeAt(i);\n        if (cp < 0x80) {\n            out.push(cp);\n        }\n        else if (cp < 0x800) {\n            out.push(0xc0 | (cp >> 6), 0x80 | (cp & 0x3f));\n        }\n        else if (cp < 0x10000) {\n            out.push(0xe0 | (cp >> 12), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n        else {\n            out.push(0xf0 | (cp >> 18), 0x80 | ((cp >> 12) & 0x3f), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n    }\n    return new Uint8Array(out);\n}\nfunction encodeUTF16LE(str) {\n    const out = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        out[i * 2] = code & 0xff;\n        out[i * 2 + 1] = code >> 8;\n    }\n    return out;\n}\nfunction encodeASCII(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0x7f));\n}\nfunction encodeLatin1(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0xff));\n}\nfunction encodeWindows1252(str) {\n    return new Uint8Array([...str].map((ch) => {\n        const code = ch.charCodeAt(0);\n        if (code <= 0xff)\n            return code;\n        if (WINDOWS_1252_REVERSE[ch] !== undefined)\n            return WINDOWS_1252_REVERSE[ch];\n        return 0x3f; // '?'\n    }));\n}\n", "import * as ieee754 from 'ieee754';\nimport { textDecode } from \"@borewit/text-codec\";\n// Primitive types\nfunction dv(array) {\n    return new DataView(array.buffer, array.byteOffset);\n}\n/*\n * 8-bit unsigned integer\n */\nexport const UINT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getUint8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit unsigned integer, Little Endian byte order\n */\nexport const UINT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit unsigned integer, Big Endian byte order\n */\nexport const UINT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit unsigned integer, Little Endian byte order\n */\nexport const UINT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return dataView.getUint8(offset) + (dataView.getUint16(offset + 1, true) << 8);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit unsigned integer, Big Endian byte order\n */\nexport const UINT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return (dataView.getUint16(offset) << 8) + dataView.getUint8(offset + 2);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit unsigned integer, Little Endian byte order\n */\nexport const UINT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit unsigned integer, Big Endian byte order\n */\nexport const UINT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 8-bit signed integer\n */\nexport const INT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getInt8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit signed integer, Big Endian byte order\n */\nexport const INT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit signed integer, Little Endian byte order\n */\nexport const INT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit signed integer, Little Endian byte order\n */\nexport const INT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_LE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit signed integer, Big Endian byte order\n */\nexport const INT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_BE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 64-bit unsigned integer, Little Endian byte order\n */\nexport const UINT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Little Endian byte order\n */\nexport const INT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit unsigned integer, Big Endian byte order\n */\nexport const UINT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Big Endian byte order\n */\nexport const INT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, big endian\n */\nexport const Float16_BE = {\n    len: 2,\n    get(dataView, offset) {\n        return ieee754.read(dataView, offset, false, 10, this.len);\n    },\n    put(dataView, offset, value) {\n        ieee754.write(dataView, value, offset, false, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, little endian\n */\nexport const Float16_LE = {\n    len: 2,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 10, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, big endian\n */\nexport const Float32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, little endian\n */\nexport const Float32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, big endian\n */\nexport const Float64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, little endian\n */\nexport const Float64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, big endian\n */\nexport const Float80_BE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, false, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, false, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, little endian\n */\nexport const Float80_LE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * Ignore a given number of bytes\n */\nexport class IgnoreType {\n    /**\n     * @param len number of bytes to ignore\n     */\n    constructor(len) {\n        this.len = len;\n    }\n    // ToDo: don't read, but skip data\n    get(_array, _off) {\n    }\n}\nexport class Uint8ArrayType {\n    constructor(len) {\n        this.len = len;\n    }\n    get(array, offset) {\n        return array.subarray(offset, offset + this.len);\n    }\n}\n/**\n * Consume a fixed number of bytes from the stream and return a string with a specified encoding.\n * Supports all encodings supported by TextDecoder, plus 'windows-1252'.\n */\nexport class StringType {\n    constructor(len, encoding) {\n        this.len = len;\n        this.encoding = encoding;\n    }\n    get(data, offset = 0) {\n        const bytes = data.subarray(offset, offset + this.len);\n        return textDecode(bytes, this.encoding);\n    }\n}\n/**\n * ANSI Latin 1 String using Windows-1252 (Code Page 1252)\n * Windows-1252 is a superset of ISO 8859-1 / Latin-1.\n */\nexport class AnsiStringType extends StringType {\n    constructor(len) {\n        super(len, 'windows-1252');\n    }\n}\n", "const objectToString = Object.prototype.toString;\nconst uint8ArrayStringified = '[object Uint8Array]';\nconst arrayBufferStringified = '[object ArrayBuffer]';\n\nfunction isType(value, typeConstructor, typeStringified) {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\tif (value.constructor === typeConstructor) {\n\t\treturn true;\n\t}\n\n\treturn objectToString.call(value) === typeStringified;\n}\n\nexport function isUint8Array(value) {\n\treturn isType(value, Uint8Array, uint8ArrayStringified);\n}\n\nfunction isArrayBuffer(value) {\n\treturn isType(value, ArrayBuffer, arrayBufferStringified);\n}\n\nfunction isUint8ArrayOrArrayBuffer(value) {\n\treturn isUint8Array(value) || isArrayBuffer(value);\n}\n\nexport function assertUint8Array(value) {\n\tif (!isUint8Array(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function assertUint8ArrayOrArrayBuffer(value) {\n\tif (!isUint8ArrayOrArrayBuffer(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function toUint8Array(value) {\n\tif (value instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(value);\n\t}\n\n\tif (ArrayBuffer.isView(value)) {\n\t\treturn new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t}\n\n\tthrow new TypeError(`Unsupported value, got \\`${typeof value}\\`.`);\n}\n\nexport function concatUint8Arrays(arrays, totalLength) {\n\tif (arrays.length === 0) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\ttotalLength ??= arrays.reduce((accumulator, currentValue) => accumulator + currentValue.length, 0);\n\n\tconst returnValue = new Uint8Array(totalLength);\n\n\tlet offset = 0;\n\tfor (const array of arrays) {\n\t\tassertUint8Array(array);\n\t\treturnValue.set(array, offset);\n\t\toffset += array.length;\n\t}\n\n\treturn returnValue;\n}\n\nexport function areUint8ArraysEqual(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line unicorn/no-for-loop\n\tfor (let index = 0; index < a.length; index++) {\n\t\tif (a[index] !== b[index]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function compareUint8Arrays(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tconst length = Math.min(a.length, b.length);\n\n\tfor (let index = 0; index < length; index++) {\n\t\tconst diff = a[index] - b[index];\n\t\tif (diff !== 0) {\n\t\t\treturn Math.sign(diff);\n\t\t}\n\t}\n\n\t// At this point, all the compared elements are equal.\n\t// The shorter array should come first if the arrays are of different lengths.\n\treturn Math.sign(a.length - b.length);\n}\n\nconst cachedDecoders = {\n\tutf8: new globalThis.TextDecoder('utf8'),\n};\n\nexport function uint8ArrayToString(array, encoding = 'utf8') {\n\tassertUint8ArrayOrArrayBuffer(array);\n\tcachedDecoders[encoding] ??= new globalThis.TextDecoder(encoding);\n\treturn cachedDecoders[encoding].decode(array);\n}\n\nfunction assertString(value) {\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError(`Expected \\`string\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nconst cachedEncoder = new globalThis.TextEncoder();\n\nexport function stringToUint8Array(string) {\n\tassertString(string);\n\treturn cachedEncoder.encode(string);\n}\n\nfunction base64ToBase64Url(base64) {\n\treturn base64.replaceAll('+', '-').replaceAll('/', '_').replace(/=+$/, '');\n}\n\nfunction base64UrlToBase64(base64url) {\n\tconst base64 = base64url.replaceAll('-', '+').replaceAll('_', '/');\n\tconst padding = (4 - (base64.length % 4)) % 4;\n\treturn base64 + '='.repeat(padding);\n}\n\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\n// Important: Keep this value divisible by 3 so intermediate chunks produce no Base64 padding.\nconst MAX_BLOCK_SIZE = 65_535;\n\nexport function uint8ArrayToBase64(array, {urlSafe = false} = {}) {\n\tassertUint8Array(array);\n\n\tlet base64 = '';\n\n\tfor (let index = 0; index < array.length; index += MAX_BLOCK_SIZE) {\n\t\tconst chunk = array.subarray(index, index + MAX_BLOCK_SIZE);\n\t\t// Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n\t\tbase64 += globalThis.btoa(String.fromCodePoint.apply(undefined, chunk));\n\t}\n\n\treturn urlSafe ? base64ToBase64Url(base64) : base64;\n}\n\nexport function base64ToUint8Array(base64String) {\n\tassertString(base64String);\n\treturn Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), x => x.codePointAt(0));\n}\n\nexport function stringToBase64(string, {urlSafe = false} = {}) {\n\tassertString(string);\n\treturn uint8ArrayToBase64(stringToUint8Array(string), {urlSafe});\n}\n\nexport function base64ToString(base64String) {\n\tassertString(base64String);\n\treturn uint8ArrayToString(base64ToUint8Array(base64String));\n}\n\nconst byteToHexLookupTable = Array.from({length: 256}, (_, index) => index.toString(16).padStart(2, '0'));\n\nexport function uint8ArrayToHex(array) {\n\tassertUint8Array(array);\n\n\t// Concatenating a string is faster than using an array.\n\tlet hexString = '';\n\n\t// eslint-disable-next-line unicorn/no-for-loop -- Max performance is critical.\n\tfor (let index = 0; index < array.length; index++) {\n\t\thexString += byteToHexLookupTable[array[index]];\n\t}\n\n\treturn hexString;\n}\n\nconst hexToDecimalLookupTable = {\n\t0: 0,\n\t1: 1,\n\t2: 2,\n\t3: 3,\n\t4: 4,\n\t5: 5,\n\t6: 6,\n\t7: 7,\n\t8: 8,\n\t9: 9,\n\ta: 10,\n\tb: 11,\n\tc: 12,\n\td: 13,\n\te: 14,\n\tf: 15,\n\tA: 10,\n\tB: 11,\n\tC: 12,\n\tD: 13,\n\tE: 14,\n\tF: 15,\n};\n\nexport function hexToUint8Array(hexString) {\n\tassertString(hexString);\n\n\tif (hexString.length % 2 !== 0) {\n\t\tthrow new Error('Invalid Hex string length.');\n\t}\n\n\tconst resultLength = hexString.length / 2;\n\tconst bytes = new Uint8Array(resultLength);\n\n\tfor (let index = 0; index < resultLength; index++) {\n\t\tconst highNibble = hexToDecimalLookupTable[hexString[index * 2]];\n\t\tconst lowNibble = hexToDecimalLookupTable[hexString[(index * 2) + 1]];\n\n\t\tif (highNibble === undefined || lowNibble === undefined) {\n\t\t\tthrow new Error(`Invalid Hex character encountered at position ${index * 2}`);\n\t\t}\n\n\t\tbytes[index] = (highNibble << 4) | lowNibble; // eslint-disable-line no-bitwise\n\t}\n\n\treturn bytes;\n}\n\n/**\n@param {DataView} view\n@returns {number}\n*/\nexport function getUintBE(view) {\n\tconst {byteLength} = view;\n\n\tif (byteLength === 6) {\n\t\treturn (view.getUint16(0) * (2 ** 32)) + view.getUint32(2);\n\t}\n\n\tif (byteLength === 5) {\n\t\treturn (view.getUint8(0) * (2 ** 32)) + view.getUint32(1);\n\t}\n\n\tif (byteLength === 4) {\n\t\treturn view.getUint32(0);\n\t}\n\n\tif (byteLength === 3) {\n\t\treturn (view.getUint8(0) * (2 ** 16)) + view.getUint16(1);\n\t}\n\n\tif (byteLength === 2) {\n\t\treturn view.getUint16(0);\n\t}\n\n\tif (byteLength === 1) {\n\t\treturn view.getUint8(0);\n\t}\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {number}\n*/\nexport function indexOf(array, value) {\n\tconst arrayLength = array.length;\n\tconst valueLength = value.length;\n\n\tif (valueLength === 0) {\n\t\treturn -1;\n\t}\n\n\tif (valueLength > arrayLength) {\n\t\treturn -1;\n\t}\n\n\tconst validOffsetLength = arrayLength - valueLength;\n\n\tfor (let index = 0; index <= validOffsetLength; index++) {\n\t\tlet isMatch = true;\n\t\tfor (let index2 = 0; index2 < valueLength; index2++) {\n\t\t\tif (array[index + index2] !== value[index2]) {\n\t\t\t\tisMatch = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isMatch) {\n\t\t\treturn index;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {boolean}\n*/\nexport function includes(array, value) {\n\treturn indexOf(array, value) !== -1;\n}\n", "/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* \" */) {\n        // remove quotes\n        value = value.slice(1, -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP, '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n", "/*!\n * media-typer\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar SUBTYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar TYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar TYPE_REGEXP = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\nexports.test = test\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !TYPE_NAME_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !SUBTYPE_NAME_REGEXP.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!TYPE_NAME_REGEXP.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  return string\n}\n\n/**\n * Test media type.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction test (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  return TYPE_REGEXP.test(string.toLowerCase())\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var match = TYPE_REGEXP.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  return new MediaType(type, subtype, suffix)\n}\n\n/**\n * Class for MediaType object.\n * @public\n */\n\nfunction MediaType (type, subtype, suffix) {\n  this.type = type\n  this.subtype = subtype\n  this.suffix = suffix\n}\n", "export const TargetType = {\n    10: 'shot',\n    20: 'scene',\n    30: 'track',\n    40: 'part',\n    50: 'album',\n    60: 'edition',\n    70: 'collection'\n};\nexport const TrackType = {\n    video: 0x01,\n    audio: 0x02,\n    complex: 0x03,\n    logo: 0x04,\n    subtitle: 0x11,\n    button: 0x12,\n    control: 0x20\n};\nexport const TrackTypeValueToKeyMap = {\n    [TrackType.video]: 'video',\n    [TrackType.audio]: 'audio',\n    [TrackType.complex]: 'complex',\n    [TrackType.logo]: 'logo',\n    [TrackType.subtitle]: 'subtitle',\n    [TrackType.button]: 'button',\n    [TrackType.control]: 'control'\n};\n", "export const makeParseError = (name) => {\n    return class ParseError extends Error {\n        constructor(message) {\n            super(message);\n            this.name = name;\n        }\n    };\n};\n// Concrete error class representing a file type determination failure.\nexport class CouldNotDetermineFileTypeError extends makeParseError('CouldNotDetermineFileTypeError') {\n}\n// Concrete error class representing an unsupported file type.\nexport class UnsupportedFileTypeError extends makeParseError('UnsupportedFileTypeError') {\n}\n// Concrete error class representing unexpected file content.\nclass UnexpectedFileContentError extends makeParseError('UnexpectedFileContentError') {\n    constructor(fileType, message) {\n        super(message);\n        this.fileType = fileType;\n    }\n    // Override toString to include file type information.\n    toString() {\n        return `${this.name} (FileType: ${this.fileType}): ${this.message}`;\n    }\n}\n// Concrete error class representing a field decoding error.\nexport class FieldDecodingError extends makeParseError('FieldDecodingError') {\n}\nexport class InternalParserError extends makeParseError('InternalParserError') {\n}\n// Factory function to create a specific type of UnexpectedFileContentError.\nexport const makeUnexpectedFileContentError = (fileType) => {\n    return class extends UnexpectedFileContentError {\n        constructor(message) {\n            super(fileType, message);\n        }\n    };\n};\n", "import { StringType } from 'token-types';\nimport { FieldDecodingError } from '../ParseError.js';\nimport { getUintBE } from 'uint8array-extras';\nexport function getBit(buf, off, bit) {\n    return (buf[off] & (1 << bit)) !== 0;\n}\n/**\n * Found delimiting zero in uint8Array\n * @param uint8Array Uint8Array to find the zero delimiter in\n * @param start Offset in uint8Array\n * @param end Last position to parse in uint8Array\n * @param encoding The string encoding used\n * @return Absolute position on uint8Array where zero found\n */\nexport function findZero(uint8Array, start, end, encoding) {\n    let i = start;\n    if (encoding === 'utf-16le') {\n        while (uint8Array[i] !== 0 || uint8Array[i + 1] !== 0) {\n            if (i >= end)\n                return end;\n            i += 2;\n        }\n        return i;\n    }\n    while (uint8Array[i] !== 0) {\n        if (i >= end)\n            return end;\n        i++;\n    }\n    return i;\n}\nexport function trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\nfunction swapBytes(uint8Array) {\n    const l = uint8Array.length;\n    if ((l & 1) !== 0)\n        throw new FieldDecodingError('Buffer length must be even');\n    for (let i = 0; i < l; i += 2) {\n        const a = uint8Array[i];\n        uint8Array[i] = uint8Array[i + 1];\n        uint8Array[i + 1] = a;\n    }\n    return uint8Array;\n}\n/**\n * Decode string\n */\nexport function decodeString(uint8Array, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (uint8Array[0] === 0xFF && uint8Array[1] === 0xFE) { // little endian\n        return decodeString(uint8Array.subarray(2), encoding);\n    }\n    if (encoding === 'utf-16le' && uint8Array[0] === 0xFE && uint8Array[1] === 0xFF) {\n        // BOM, indicating big endian decoding\n        if ((uint8Array.length & 1) !== 0)\n            throw new FieldDecodingError('Expected even number of octets for 16-bit unicode string');\n        return decodeString(swapBytes(uint8Array), encoding);\n    }\n    return new StringType(uint8Array.length, encoding).get(uint8Array, 0);\n}\nexport function stripNulls(str) {\n    str = str.replace(/^\\x00+/g, '');\n    str = str.replace(/\\x00+$/g, '');\n    return str;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return Decoded bit aligned number\n */\nexport function getBitAllignedNumber(source, byteOffset, bitOffset, len) {\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = source[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    }\n    else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(source, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte Uint8Array\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is the least significant bit\n * @return True if bit is set\n */\nexport function isBitSet(source, byteOffset, bitOffset) {\n    return getBitAllignedNumber(source, byteOffset, bitOffset, 1) === 1;\n}\nexport function a2hex(str) {\n    const arr = [];\n    for (let i = 0, l = str.length; i < l; i++) {\n        const hex = Number(str.charCodeAt(i)).toString(16);\n        arr.push(hex.length === 1 ? `0${hex}` : hex);\n    }\n    return arr.join(' ');\n}\n/**\n * Convert power ratio to DB\n * ratio: [0..1]\n */\nexport function ratioToDb(ratio) {\n    return 10 * Math.log10(ratio);\n}\n/**\n * Convert dB to ratio\n * db Decibels\n */\nexport function dbToRatio(dB) {\n    return 10 ** (dB / 10);\n}\n/**\n * Convert replay gain to ratio and Decibel\n * @param value string holding a ratio like '0.034' or '-7.54 dB'\n */\nexport function toRatio(value) {\n    const ps = value.split(' ').map(p => p.trim().toLowerCase());\n    if (ps.length >= 1) {\n        const v = Number.parseFloat(ps[0]);\n        return ps.length === 2 && ps[1] === 'db' ? {\n            dB: v,\n            ratio: dbToRatio(v)\n        } : {\n            dB: ratioToDb(v),\n            ratio: v\n        };\n    }\n}\n/**\n * Decode a big-endian unsigned integer from a Uint8Array.\n * Supports dynamic length (1\u20138 bytes).\n */\nexport function decodeUintBE(uint8Array) {\n    if (uint8Array.length === 0) {\n        throw new Error(\"decodeUintBE: empty Uint8Array\");\n    }\n    const view = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n    return getUintBE(view);\n}\n", "import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\n/**\n * The picture type according to the ID3v2 APIC frame\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\n */\nexport const AttachedPictureType = {\n    0: 'Other',\n    1: \"32x32 pixels 'file icon' (PNG only)\",\n    2: 'Other file icon',\n    3: 'Cover (front)',\n    4: 'Cover (back)',\n    5: 'Leaflet page',\n    6: 'Media (e.g. label side of CD)',\n    7: 'Lead artist/lead performer/soloist',\n    8: 'Artist/performer',\n    9: 'Conductor',\n    10: 'Band/Orchestra',\n    11: 'Composer',\n    12: 'Lyricist/text writer',\n    13: 'Recording Location',\n    14: 'During recording',\n    15: 'During performance',\n    16: 'Movie/video screen capture',\n    17: 'A bright coloured fish',\n    18: 'Illustration',\n    19: 'Band/artist logotype',\n    20: 'Publisher/Studio logotype'\n};\n/**\n * https://id3.org/id3v2.3.0#Synchronised_lyrics.2Ftext\n */\nexport const LyricsContentType = {\n    other: 0,\n    lyrics: 1,\n    text: 2,\n    movement_part: 3,\n    events: 4,\n    chord: 5,\n    trivia_pop: 6,\n};\nexport const TimestampFormat = {\n    notSynchronized0: 0,\n    mpegFrameNumber: 1,\n    milliseconds: 2\n};\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexport const UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | ((buf[off + 2]) << 7) |\n            ((buf[off + 1]) << 14) | ((buf[off]) << 21);\n    },\n    len: 4\n};\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n * ToDo\n */\nexport const ID3v2Header = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // ID3v2/file identifier   \"ID3\"\n            fileIdentifier: new Token.StringType(3, 'ascii').get(buf, off),\n            // ID3v2 versionIndex\n            version: {\n                major: Token.INT8.get(buf, off + 3),\n                revision: Token.INT8.get(buf, off + 4)\n            },\n            // ID3v2 flags\n            flags: {\n                // Unsynchronisation\n                unsynchronisation: util.getBit(buf, off + 5, 7),\n                // Extended header\n                isExtendedHeader: util.getBit(buf, off + 5, 6),\n                // Experimental indicator\n                expIndicator: util.getBit(buf, off + 5, 5),\n                footer: util.getBit(buf, off + 5, 4)\n            },\n            size: UINT32SYNCSAFE.get(buf, off + 6)\n        };\n    }\n};\nexport const ExtendedHeader = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // Extended header size\n            size: Token.UINT32_BE.get(buf, off),\n            // Extended Flags\n            extendedFlags: Token.UINT16_BE.get(buf, off + 4),\n            // Size of padding\n            sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\n            // CRC data present\n            crcDataPresent: util.getBit(buf, off + 4, 31)\n        };\n    }\n};\nexport const TextEncodingToken = {\n    len: 1,\n    get: (uint8Array, off) => {\n        switch (uint8Array[off]) {\n            case 0x00:\n                return { encoding: 'latin1' }; // binary\n            case 0x01:\n                return { encoding: 'utf-16le', bom: true };\n            case 0x02:\n                return { encoding: 'utf-16le', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n        }\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nexport const TextHeader = {\n    len: 4,\n    get: (uint8Array, off) => {\n        return {\n            encoding: TextEncodingToken.get(uint8Array, off),\n            language: new Token.StringType(3, 'latin1').get(uint8Array, off + 1)\n        };\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nexport const SyncTextHeader = {\n    len: 6,\n    get: (uint8Array, off) => {\n        const text = TextHeader.get(uint8Array, off);\n        return {\n            encoding: text.encoding,\n            language: text.language,\n            timeStampFormat: Token.UINT8.get(uint8Array, off + 4),\n            contentType: Token.UINT8.get(uint8Array, off + 5)\n        };\n    }\n};\n", "export { TrackType, TrackTypeValueToKeyMap } from './matroska/types.js';\nexport { LyricsContentType, TimestampFormat } from './id3v2/ID3v2Token.js';\n", "export class BasicParser {\n    /**\n     * Initialize parser with output (metadata), input (tokenizer) & parsing options (options).\n     * @param {INativeMetadataCollector} metadata Output\n     * @param {ITokenizer} tokenizer Input\n     * @param {IOptions} options Parsing options\n     */\n    constructor(metadata, tokenizer, options) {\n        this.metadata = metadata;\n        this.tokenizer = tokenizer;\n        this.options = options;\n    }\n}\n", "const WINDOWS_1252_EXTRA = {\n    0x80: \"\u20AC\", 0x82: \"\u201A\", 0x83: \"\u0192\", 0x84: \"\u201E\", 0x85: \"\u2026\", 0x86: \"\u2020\",\n    0x87: \"\u2021\", 0x88: \"\u02C6\", 0x89: \"\u2030\", 0x8a: \"\u0160\", 0x8b: \"\u2039\", 0x8c: \"\u0152\",\n    0x8e: \"\u017D\", 0x91: \"\u2018\", 0x92: \"\u2019\", 0x93: \"\u201C\", 0x94: \"\u201D\", 0x95: \"\u2022\",\n    0x96: \"\u2013\", 0x97: \"\u2014\", 0x98: \"\u02DC\", 0x99: \"\u2122\", 0x9a: \"\u0161\", 0x9b: \"\u203A\",\n    0x9c: \"\u0153\", 0x9e: \"\u017E\", 0x9f: \"\u0178\",\n};\nconst WINDOWS_1252_REVERSE = {};\nfor (const [code, char] of Object.entries(WINDOWS_1252_EXTRA)) {\n    WINDOWS_1252_REVERSE[char] = Number.parseInt(code);\n}\n/**\n * Decode text from binary data\n * @param bytes Binary data\n * @param encoding Encoding\n */\nexport function textDecode(bytes, encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextDecoder !== \"undefined\") {\n                return new globalThis.TextDecoder(\"utf-8\").decode(bytes);\n            }\n            return decodeUTF8(bytes);\n        case \"utf-16le\":\n            return decodeUTF16LE(bytes);\n        case \"ascii\":\n            return decodeASCII(bytes);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return decodeLatin1(bytes);\n        case \"windows-1252\":\n            return decodeWindows1252(bytes);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\nexport function textEncode(input = \"\", encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextEncoder !== \"undefined\") {\n                return new globalThis.TextEncoder().encode(input);\n            }\n            return encodeUTF8(input);\n        case \"utf-16le\":\n            return encodeUTF16LE(input);\n        case \"ascii\":\n            return encodeASCII(input);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return encodeLatin1(input);\n        case \"windows-1252\":\n            return encodeWindows1252(input);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\n// --- Internal helpers ---\nfunction decodeUTF8(bytes) {\n    let out = \"\";\n    let i = 0;\n    while (i < bytes.length) {\n        const b1 = bytes[i++];\n        if (b1 < 0x80) {\n            out += String.fromCharCode(b1);\n        }\n        else if (b1 < 0xe0) {\n            const b2 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x1f) << 6) | b2);\n        }\n        else if (b1 < 0xf0) {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x0f) << 12) | (b2 << 6) | b3);\n        }\n        else {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            const b4 = bytes[i++] & 0x3f;\n            let cp = ((b1 & 0x07) << 18) |\n                (b2 << 12) |\n                (b3 << 6) |\n                b4;\n            cp -= 0x10000;\n            out += String.fromCharCode(0xd800 + ((cp >> 10) & 0x3ff), 0xdc00 + (cp & 0x3ff));\n        }\n    }\n    return out;\n}\nfunction decodeUTF16LE(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.length; i += 2) {\n        out += String.fromCharCode(bytes[i] | (bytes[i + 1] << 8));\n    }\n    return out;\n}\nfunction decodeASCII(bytes) {\n    return String.fromCharCode(...bytes.map((b) => b & 0x7f));\n}\nfunction decodeLatin1(bytes) {\n    return String.fromCharCode(...bytes);\n}\nfunction decodeWindows1252(bytes) {\n    let out = \"\";\n    for (const b of bytes) {\n        if (b >= 0x80 && b <= 0x9f && WINDOWS_1252_EXTRA[b]) {\n            out += WINDOWS_1252_EXTRA[b];\n        }\n        else {\n            out += String.fromCharCode(b);\n        }\n    }\n    return out;\n}\nfunction encodeUTF8(str) {\n    const out = [];\n    for (let i = 0; i < str.length; i++) {\n        const cp = str.charCodeAt(i);\n        if (cp < 0x80) {\n            out.push(cp);\n        }\n        else if (cp < 0x800) {\n            out.push(0xc0 | (cp >> 6), 0x80 | (cp & 0x3f));\n        }\n        else if (cp < 0x10000) {\n            out.push(0xe0 | (cp >> 12), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n        else {\n            out.push(0xf0 | (cp >> 18), 0x80 | ((cp >> 12) & 0x3f), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n    }\n    return new Uint8Array(out);\n}\nfunction encodeUTF16LE(str) {\n    const out = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        out[i * 2] = code & 0xff;\n        out[i * 2 + 1] = code >> 8;\n    }\n    return out;\n}\nfunction encodeASCII(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0x7f));\n}\nfunction encodeLatin1(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0xff));\n}\nfunction encodeWindows1252(str) {\n    return new Uint8Array([...str].map((ch) => {\n        const code = ch.charCodeAt(0);\n        if (code <= 0xff)\n            return code;\n        if (WINDOWS_1252_REVERSE[ch] !== undefined)\n            return WINDOWS_1252_REVERSE[ch];\n        return 0x3f; // '?'\n    }));\n}\n", "import { textDecode, textEncode } from '@borewit/text-codec';\nimport * as util from './Util.js';\nimport { InternalParserError, FieldDecodingError } from '../ParseError.js';\nconst validFourCC = /^[\\x21-\\x7e\u00A9][\\x20-\\x7e\\x00()]{3}/;\n/**\n * Token for read FourCC\n * Ref: https://en.wikipedia.org/wiki/FourCC\n */\nexport const FourCcToken = {\n    len: 4,\n    get: (buf, off) => {\n        const id = textDecode(buf.subarray(off, off + FourCcToken.len), 'latin1');\n        if (!id.match(validFourCC)) {\n            throw new FieldDecodingError(`FourCC contains invalid characters: ${util.a2hex(id)} \"${id}\"`);\n        }\n        return id;\n    },\n    put: (buffer, offset, id) => {\n        const str = textEncode(id, 'latin1');\n        if (str.length !== 4)\n            throw new InternalParserError('Invalid length');\n        buffer.set(str, offset);\n        return offset + 4;\n    }\n};\n", "import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\nexport const DataType = {\n    text_utf8: 0,\n    binary: 1,\n    external_info: 2,\n    reserved: 3\n};\n/**\n * APE_DESCRIPTOR: defines the sizes (and offsets) of all the pieces, as well as the MD5 checksum\n */\nexport const DescriptorParser = {\n    len: 52,\n    get: (buf, off) => {\n        return {\n            // should equal 'MAC '\n            ID: FourCcToken.get(buf, off),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            version: Token.UINT32_LE.get(buf, off + 4) / 1000,\n            // the number of descriptor bytes (allows later expansion of this header)\n            descriptorBytes: Token.UINT32_LE.get(buf, off + 8),\n            // the number of header APE_HEADER bytes\n            headerBytes: Token.UINT32_LE.get(buf, off + 12),\n            // the number of header APE_HEADER bytes\n            seekTableBytes: Token.UINT32_LE.get(buf, off + 16),\n            // the number of header data bytes (from original file)\n            headerDataBytes: Token.UINT32_LE.get(buf, off + 20),\n            // the number of bytes of APE frame data\n            apeFrameDataBytes: Token.UINT32_LE.get(buf, off + 24),\n            // the high order number of APE frame data bytes\n            apeFrameDataBytesHigh: Token.UINT32_LE.get(buf, off + 28),\n            // the terminating data of the file (not including tag data)\n            terminatingDataBytes: Token.UINT32_LE.get(buf, off + 32),\n            // the MD5 hash of the file (see notes for usage... it's a little tricky)\n            fileMD5: new Token.Uint8ArrayType(16).get(buf, off + 36)\n        };\n    }\n};\n/**\n * APE_HEADER: describes all of the necessary information about the APE file\n */\nexport const Header = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            // the compression level (see defines I.E. COMPRESSION_LEVEL_FAST)\n            compressionLevel: Token.UINT16_LE.get(buf, off),\n            // any format flags (for future use)\n            formatFlags: Token.UINT16_LE.get(buf, off + 2),\n            // the number of audio blocks in one frame\n            blocksPerFrame: Token.UINT32_LE.get(buf, off + 4),\n            // the number of audio blocks in the final frame\n            finalFrameBlocks: Token.UINT32_LE.get(buf, off + 8),\n            // the total number of frames\n            totalFrames: Token.UINT32_LE.get(buf, off + 12),\n            // the bits per sample (typically 16)\n            bitsPerSample: Token.UINT16_LE.get(buf, off + 16),\n            // the number of channels (1 or 2)\n            channel: Token.UINT16_LE.get(buf, off + 18),\n            // the sample rate (typically 44100)\n            sampleRate: Token.UINT32_LE.get(buf, off + 20)\n        };\n    }\n};\n/**\n * APE Tag Header/Footer Version 2.0\n * TAG: describes all the properties of the file [optional]\n */\nexport const TagFooter = {\n    len: 32,\n    get: (buf, off) => {\n        return {\n            // should equal 'APETAGEX'\n            ID: new Token.StringType(8, 'ascii').get(buf, off),\n            // equals CURRENT_APE_TAG_VERSION\n            version: Token.UINT32_LE.get(buf, off + 8),\n            // the complete size of the tag, including this footer (excludes header)\n            size: Token.UINT32_LE.get(buf, off + 12),\n            // the number of fields in the tag\n            fields: Token.UINT32_LE.get(buf, off + 16),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(Token.UINT32_LE.get(buf, off + 20))\n        };\n    }\n};\n/**\n * APE Tag v2.0 Item Header\n */\nexport const TagItemHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Length of assigned value in bytes\n            size: Token.UINT32_LE.get(buf, off),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(Token.UINT32_LE.get(buf, off + 4))\n        };\n    }\n};\nexport function parseTagFlags(flags) {\n    return {\n        containsHeader: isBitSet(flags, 31),\n        containsFooter: isBitSet(flags, 30),\n        isHeader: isBitSet(flags, 29),\n        readOnly: isBitSet(flags, 0),\n        dataType: (flags & 6) >> 1\n    };\n}\n/**\n * @param num {number}\n * @param bit 0 is least significant bit (LSB)\n * @return {boolean} true if bit is 1; otherwise false\n */\nexport function isBitSet(num, bit) {\n    return (num & 1 << bit) !== 0;\n}\n", "import initDebug from 'debug';\nimport * as strtok3 from 'strtok3';\nimport { StringType } from 'token-types';\nimport * as util from '../common/Util.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { DataType, DescriptorParser, Header, TagFooter, TagItemHeader } from './APEv2Token.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nimport { textDecode } from '@borewit/text-codec';\nconst debug = initDebug('music-metadata:parser:APEv2');\nconst tagFormat = 'APEv2';\nconst preamble = 'APETAGEX';\nexport class ApeContentError extends makeUnexpectedFileContentError('APEv2') {\n}\nexport function tryParseApeHeader(metadata, tokenizer, options) {\n    const apeParser = new APEv2Parser(metadata, tokenizer, options);\n    return apeParser.tryParseApeHeader();\n}\nexport class APEv2Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.ape = {};\n    }\n    /**\n     * Calculate the media file duration\n     * @param ah ApeHeader\n     * @return {number} duration in seconds\n     */\n    static calculateDuration(ah) {\n        let duration = ah.totalFrames > 1 ? ah.blocksPerFrame * (ah.totalFrames - 1) : 0;\n        duration += ah.finalFrameBlocks;\n        return duration / ah.sampleRate;\n    }\n    /**\n     * Calculates the APEv1 / APEv2 first field offset\n     * @param tokenizer\n     * @param offset\n     */\n    static async findApeFooterOffset(tokenizer, offset) {\n        // Search for APE footer header at the end of the file\n        const apeBuf = new Uint8Array(TagFooter.len);\n        const position = tokenizer.position;\n        if (offset <= TagFooter.len) {\n            debug(`Offset is too small to read APE footer: offset=${offset}`);\n            return undefined;\n        }\n        if (offset > TagFooter.len) {\n            await tokenizer.readBuffer(apeBuf, { position: offset - TagFooter.len });\n            tokenizer.setPosition(position);\n            const tagFooter = TagFooter.get(apeBuf, 0);\n            if (tagFooter.ID === 'APETAGEX') {\n                if (tagFooter.flags.isHeader) {\n                    debug(`APE Header found at offset=${offset - TagFooter.len}`);\n                }\n                else {\n                    debug(`APE Footer found at offset=${offset - TagFooter.len}`);\n                    offset -= tagFooter.size;\n                }\n                return { footer: tagFooter, offset };\n            }\n        }\n    }\n    static parseTagFooter(metadata, buffer, options) {\n        const footer = TagFooter.get(buffer, buffer.length - TagFooter.len);\n        if (footer.ID !== preamble)\n            throw new ApeContentError('Unexpected APEv2 Footer ID preamble value');\n        strtok3.fromBuffer(buffer);\n        const apeParser = new APEv2Parser(metadata, strtok3.fromBuffer(buffer), options);\n        return apeParser.parseTags(footer);\n    }\n    /**\n     * Parse APEv1 / APEv2 header if header signature found\n     */\n    async tryParseApeHeader() {\n        if (this.tokenizer.fileInfo.size && this.tokenizer.fileInfo.size - this.tokenizer.position < TagFooter.len) {\n            debug(\"No APEv2 header found, end-of-file reached\");\n            return;\n        }\n        const footer = await this.tokenizer.peekToken(TagFooter);\n        if (footer.ID === preamble) {\n            await this.tokenizer.ignore(TagFooter.len);\n            return this.parseTags(footer);\n        }\n        debug(`APEv2 header not found at offset=${this.tokenizer.position}`);\n        if (this.tokenizer.fileInfo.size) {\n            // Try to read the APEv2 header using just the footer-header\n            const remaining = this.tokenizer.fileInfo.size - this.tokenizer.position; // ToDo: take ID3v1 into account\n            const buffer = new Uint8Array(remaining);\n            await this.tokenizer.readBuffer(buffer);\n            return APEv2Parser.parseTagFooter(this.metadata, buffer, this.options);\n        }\n    }\n    async parse() {\n        const descriptor = await this.tokenizer.readToken(DescriptorParser);\n        if (descriptor.ID !== 'MAC ')\n            throw new ApeContentError('Unexpected descriptor ID');\n        this.ape.descriptor = descriptor;\n        const lenExp = descriptor.descriptorBytes - DescriptorParser.len;\n        const header = await (lenExp > 0 ? this.parseDescriptorExpansion(lenExp) : this.parseHeader());\n        this.metadata.setAudioOnly();\n        await this.tokenizer.ignore(header.forwardBytes);\n        return this.tryParseApeHeader();\n    }\n    async parseTags(footer) {\n        const keyBuffer = new Uint8Array(256); // maximum tag key length\n        let bytesRemaining = footer.size - TagFooter.len;\n        debug(`Parse APE tags at offset=${this.tokenizer.position}, size=${bytesRemaining}`);\n        for (let i = 0; i < footer.fields; i++) {\n            if (bytesRemaining < TagItemHeader.len) {\n                this.metadata.addWarning(`APEv2 Tag-header: ${footer.fields - i} items remaining, but no more tag data to read.`);\n                break;\n            }\n            // Only APEv2 tag has tag item headers\n            const tagItemHeader = await this.tokenizer.readToken(TagItemHeader);\n            bytesRemaining -= TagItemHeader.len + tagItemHeader.size;\n            await this.tokenizer.peekBuffer(keyBuffer, { length: Math.min(keyBuffer.length, bytesRemaining) });\n            let zero = util.findZero(keyBuffer, 0, keyBuffer.length);\n            const key = await this.tokenizer.readToken(new StringType(zero, 'ascii'));\n            await this.tokenizer.ignore(1);\n            bytesRemaining -= key.length + 1;\n            switch (tagItemHeader.flags.dataType) {\n                case DataType.text_utf8: { // utf-8 text-string\n                    const value = await this.tokenizer.readToken(new StringType(tagItemHeader.size, 'utf8'));\n                    const values = value.split(/\\x00/g);\n                    await Promise.all(values.map(val => this.metadata.addTag(tagFormat, key, val)));\n                    break;\n                }\n                case DataType.binary: // binary (probably artwork)\n                    if (this.options.skipCovers) {\n                        await this.tokenizer.ignore(tagItemHeader.size);\n                    }\n                    else {\n                        const picData = new Uint8Array(tagItemHeader.size);\n                        await this.tokenizer.readBuffer(picData);\n                        zero = util.findZero(picData, 0, picData.length);\n                        const description = textDecode(picData.subarray(0, zero), 'utf-8');\n                        const data = picData.subarray(zero + 1);\n                        await this.metadata.addTag(tagFormat, key, {\n                            description,\n                            data\n                        });\n                    }\n                    break;\n                case DataType.external_info:\n                    debug(`Ignore external info ${key}`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n                case DataType.reserved:\n                    debug(`Ignore external info ${key}`);\n                    this.metadata.addWarning(`APEv2 header declares a reserved datatype for \"${key}\"`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n            }\n        }\n    }\n    async parseDescriptorExpansion(lenExp) {\n        await this.tokenizer.ignore(lenExp);\n        return this.parseHeader();\n    }\n    async parseHeader() {\n        const header = await this.tokenizer.readToken(Header);\n        // ToDo before\n        this.metadata.setFormat('lossless', true);\n        this.metadata.setFormat('container', 'Monkey\\'s Audio');\n        this.metadata.setFormat('bitsPerSample', header.bitsPerSample);\n        this.metadata.setFormat('sampleRate', header.sampleRate);\n        this.metadata.setFormat('numberOfChannels', header.channel);\n        this.metadata.setFormat('duration', APEv2Parser.calculateDuration(header));\n        if (!this.ape.descriptor) {\n            throw new ApeContentError('Missing APE descriptor');\n        }\n        return {\n            forwardBytes: this.ape.descriptor.seekTableBytes + this.ape.descriptor.headerDataBytes +\n                this.ape.descriptor.apeFrameDataBytes + this.ape.descriptor.terminatingDataBytes\n        };\n    }\n}\n", "import initDebug from 'debug';\nimport { StringType, UINT8 } from 'token-types';\nimport * as util from '../common/Util.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { APEv2Parser } from '../apev2/APEv2Parser.js';\nimport { textDecode } from '@borewit/text-codec';\nconst debug = initDebug('music-metadata:parser:ID3v1');\n/**\n * ID3v1 Genre mappings\n * Ref: https://de.wikipedia.org/wiki/Liste_der_ID3v1-Genres\n */\nexport const Genres = [\n    'Blues', 'Classic Rock', 'Country', 'Dance', 'Disco', 'Funk', 'Grunge', 'Hip-Hop',\n    'Jazz', 'Metal', 'New Age', 'Oldies', 'Other', 'Pop', 'R&B', 'Rap', 'Reggae', 'Rock',\n    'Techno', 'Industrial', 'Alternative', 'Ska', 'Death Metal', 'Pranks', 'Soundtrack',\n    'Euro-Techno', 'Ambient', 'Trip-Hop', 'Vocal', 'Jazz+Funk', 'Fusion', 'Trance',\n    'Classical', 'Instrumental', 'Acid', 'House', 'Game', 'Sound Clip', 'Gospel', 'Noise',\n    'Alt. Rock', 'Bass', 'Soul', 'Punk', 'Space', 'Meditative', 'Instrumental Pop',\n    'Instrumental Rock', 'Ethnic', 'Gothic', 'Darkwave', 'Techno-Industrial',\n    'Electronic', 'Pop-Folk', 'Eurodance', 'Dream', 'Southern Rock', 'Comedy', 'Cult',\n    'Gangsta Rap', 'Top 40', 'Christian Rap', 'Pop/Funk', 'Jungle', 'Native American',\n    'Cabaret', 'New Wave', 'Psychedelic', 'Rave', 'Showtunes', 'Trailer', 'Lo-Fi', 'Tribal',\n    'Acid Punk', 'Acid Jazz', 'Polka', 'Retro', 'Musical', 'Rock & Roll', 'Hard Rock',\n    'Folk', 'Folk/Rock', 'National Folk', 'Swing', 'Fast-Fusion', 'Bebob', 'Latin', 'Revival',\n    'Celtic', 'Bluegrass', 'Avantgarde', 'Gothic Rock', 'Progressive Rock', 'Psychedelic Rock',\n    'Symphonic Rock', 'Slow Rock', 'Big Band', 'Chorus', 'Easy Listening', 'Acoustic', 'Humour',\n    'Speech', 'Chanson', 'Opera', 'Chamber Music', 'Sonata', 'Symphony', 'Booty Bass', 'Primus',\n    'Porn Groove', 'Satire', 'Slow Jam', 'Club', 'Tango', 'Samba', 'Folklore',\n    'Ballad', 'Power Ballad', 'Rhythmic Soul', 'Freestyle', 'Duet', 'Punk Rock', 'Drum Solo',\n    'A Cappella', 'Euro-House', 'Dance Hall', 'Goa', 'Drum & Bass', 'Club-House',\n    'Hardcore', 'Terror', 'Indie', 'BritPop', 'Negerpunk', 'Polsk Punk', 'Beat',\n    'Christian Gangsta Rap', 'Heavy Metal', 'Black Metal', 'Crossover', 'Contemporary Christian',\n    'Christian Rock', 'Merengue', 'Salsa', 'Thrash Metal', 'Anime', 'JPop', 'Synthpop',\n    'Abstract', 'Art Rock', 'Baroque', 'Bhangra', 'Big Beat', 'Breakbeat', 'Chillout',\n    'Downtempo', 'Dub', 'EBM', 'Eclectic', 'Electro', 'Electroclash', 'Emo', 'Experimental',\n    'Garage', 'Global', 'IDM', 'Illbient', 'Industro-Goth', 'Jam Band', 'Krautrock',\n    'Leftfield', 'Lounge', 'Math Rock', 'New Romantic', 'Nu-Breakz', 'Post-Punk', 'Post-Rock',\n    'Psytrance', 'Shoegaze', 'Space Rock', 'Trop Rock', 'World Music', 'Neoclassical', 'Audiobook',\n    'Audio Theatre', 'Neue Deutsche Welle', 'Podcast', 'Indie Rock', 'G-Funk', 'Dubstep',\n    'Garage Rock', 'Psybient'\n];\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nconst Iid3v1Token = {\n    len: 128,\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = new Id3v1StringType(3).get(buf, off);\n        return header === 'TAG' ? {\n            header,\n            title: new Id3v1StringType(30).get(buf, off + 3),\n            artist: new Id3v1StringType(30).get(buf, off + 33),\n            album: new Id3v1StringType(30).get(buf, off + 63),\n            year: new Id3v1StringType(4).get(buf, off + 93),\n            comment: new Id3v1StringType(28).get(buf, off + 97),\n            // ID3v1.1 separator for track\n            zeroByte: UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: UINT8.get(buf, off + 126),\n            genre: UINT8.get(buf, off + 127)\n        } : null;\n    }\n};\nclass Id3v1StringType {\n    constructor(len) {\n        this.len = len;\n        this.stringType = new StringType(len, 'latin1');\n    }\n    get(buf, off) {\n        let value = this.stringType.get(buf, off);\n        value = util.trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}\nexport class ID3v1Parser extends BasicParser {\n    constructor(metadata, tokenizer, options) {\n        super(metadata, tokenizer, options);\n        this.apeHeader = options.apeHeader;\n    }\n    static getGenre(genreIndex) {\n        if (genreIndex < Genres.length) {\n            return Genres[genreIndex];\n        }\n        return undefined; // ToDO: generate warning\n    }\n    async parse() {\n        if (!this.tokenizer.fileInfo.size) {\n            debug('Skip checking for ID3v1 because the file-size is unknown');\n            return;\n        }\n        if (this.apeHeader) {\n            this.tokenizer.ignore(this.apeHeader.offset - this.tokenizer.position);\n            const apeParser = new APEv2Parser(this.metadata, this.tokenizer, this.options);\n            await apeParser.parseTags(this.apeHeader.footer);\n        }\n        const offset = this.tokenizer.fileInfo.size - Iid3v1Token.len;\n        if (this.tokenizer.position > offset) {\n            debug('Already consumed the last 128 bytes');\n            return;\n        }\n        const header = await this.tokenizer.readToken(Iid3v1Token, offset);\n        if (header) {\n            debug('ID3v1 header found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n            const props = ['title', 'artist', 'album', 'comment', 'track', 'year'];\n            for (const id of props) {\n                if (header[id] && header[id] !== '')\n                    await this.addTag(id, header[id]);\n            }\n            const genre = ID3v1Parser.getGenre(header.genre);\n            if (genre)\n                await this.addTag('genre', genre);\n        }\n        else {\n            debug('ID3v1 header not found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n        }\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag('ID3v1', id, value);\n    }\n}\nexport async function hasID3v1Header(tokenizer) {\n    if (tokenizer.fileInfo.size >= 128) {\n        const tag = new Uint8Array(3);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(tag, { position: tokenizer.fileInfo.size - 128 });\n        tokenizer.setPosition(position); // Restore tokenizer position\n        return textDecode(tag, 'latin1') === 'TAG';\n    }\n    return false;\n}\n", "import initDebug from 'debug';\nimport * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport { AttachedPictureType, SyncTextHeader, TextEncodingToken, TextHeader } from './ID3v2Token.js';\nimport { Genres } from '../id3v1/ID3v1Parser.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nimport { decodeUintBE } from '../common/Util.js';\nconst debug = initDebug('music-metadata:id3v2:frame-parser');\nconst defaultEnc = 'latin1'; // latin1 == iso-8859-1;\nexport function parseGenre(origVal) {\n    // match everything inside parentheses\n    const genres = [];\n    let code;\n    let word = '';\n    for (const c of origVal) {\n        if (typeof code === 'string') {\n            if (c === '(' && code === '') {\n                word += '(';\n                code = undefined;\n            }\n            else if (c === ')') {\n                if (word !== '') {\n                    genres.push(word);\n                    word = '';\n                }\n                const genre = parseGenreCode(code);\n                if (genre) {\n                    genres.push(genre);\n                }\n                code = undefined;\n            }\n            else\n                code += c;\n        }\n        else if (c === '(') {\n            code = '';\n        }\n        else {\n            word += c;\n        }\n    }\n    if (word) {\n        if (genres.length === 0 && word.match(/^\\d*$/)) {\n            word = parseGenreCode(word);\n        }\n        if (word) {\n            genres.push(word);\n        }\n    }\n    return genres;\n}\nfunction parseGenreCode(code) {\n    if (code === 'RX')\n        return 'Remix';\n    if (code === 'CR')\n        return 'Cover';\n    if (code.match(/^\\d*$/)) {\n        return Genres[Number.parseInt(code)];\n    }\n}\nexport class FrameParser {\n    /**\n     * Create id3v2 frame parser\n     * @param major - Major version, e.g. (4) for  id3v2.4\n     * @param warningCollector - Used to collect decode issue\n     */\n    constructor(major, warningCollector) {\n        this.major = major;\n        this.warningCollector = warningCollector;\n    }\n    readData(uint8Array, type, includeCovers) {\n        if (uint8Array.length === 0) {\n            this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${type}`);\n            return;\n        }\n        const { encoding, bom } = TextEncodingToken.get(uint8Array, 0);\n        const length = uint8Array.length;\n        let offset = 0;\n        let output = []; // ToDo\n        const nullTerminatorLength = FrameParser.getNullTerminatorLength(encoding);\n        let fzero;\n        debug(`Parsing tag type=${type}, encoding=${encoding}, bom=${bom}`);\n        switch (type !== 'TXXX' && type[0] === 'T' ? 'T*' : type) {\n            case 'T*': // 4.2.1. Text information frames - details\n            case 'GRP1': // iTunes-specific ID3v2 grouping field\n            case 'IPLS': // v2.3: Involved people list\n            case 'MVIN':\n            case 'MVNM':\n            case 'PCS':\n            case 'PCST': {\n                let text;\n                try {\n                    text = util.decodeString(uint8Array.subarray(1), encoding).replace(/\\x00+$/, '');\n                }\n                catch (error) {\n                    if (error instanceof Error) {\n                        this.warningCollector.addWarning(`id3v2.${this.major} type=${type} header has invalid string value: ${error.message}`);\n                        break;\n                    }\n                    throw error;\n                }\n                switch (type) {\n                    case 'TMCL': // Musician credits list\n                    case 'TIPL': // Involved people list\n                    case 'IPLS': // Involved people list\n                        output = FrameParser.functionList(this.splitValue(type, text));\n                        break;\n                    case 'TRK':\n                    case 'TRCK':\n                    case 'TPOS':\n                        output = text;\n                        break;\n                    case 'TCOM':\n                    case 'TEXT':\n                    case 'TOLY':\n                    case 'TOPE':\n                    case 'TPE1':\n                    case 'TSRC':\n                        // id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n                        output = this.splitValue(type, text);\n                        break;\n                    case 'TCO':\n                    case 'TCON':\n                        output = this.splitValue(type, text).map(v => parseGenre(v)).reduce((acc, val) => acc.concat(val), []);\n                        break;\n                    case 'PCS':\n                    case 'PCST':\n                        // TODO: Why `default` not results `1` but `''`?\n                        output = this.major >= 4 ? this.splitValue(type, text) : [text];\n                        output = (Array.isArray(output) && output[0] === '') ? 1 : 0;\n                        break;\n                    default:\n                        output = this.major >= 4 ? this.splitValue(type, text) : [text];\n                }\n                break;\n            }\n            case 'TXXX': {\n                const idAndData = FrameParser.readIdentifierAndData(uint8Array, offset + 1, length, encoding);\n                const textTag = {\n                    description: idAndData.id,\n                    text: this.splitValue(type, util.decodeString(idAndData.data, encoding).replace(/\\x00+$/, ''))\n                };\n                output = textTag;\n                break;\n            }\n            case 'PIC':\n            case 'APIC':\n                if (includeCovers) {\n                    const pic = {};\n                    offset += 1;\n                    switch (this.major) {\n                        case 2:\n                            pic.format = util.decodeString(uint8Array.subarray(offset, offset + 3), 'latin1'); // 'latin1'; // latin1 == iso-8859-1;\n                            offset += 3;\n                            break;\n                        case 3:\n                        case 4:\n                            fzero = util.findZero(uint8Array, offset, length, defaultEnc);\n                            pic.format = util.decodeString(uint8Array.subarray(offset, fzero), defaultEnc);\n                            offset = fzero + 1;\n                            break;\n                        default:\n                            throw makeUnexpectedMajorVersionError(this.major);\n                    }\n                    pic.format = FrameParser.fixPictureMimeType(pic.format);\n                    pic.type = AttachedPictureType[uint8Array[offset]];\n                    offset += 1;\n                    fzero = util.findZero(uint8Array, offset, length, encoding);\n                    pic.description = util.decodeString(uint8Array.subarray(offset, fzero), encoding);\n                    offset = fzero + nullTerminatorLength;\n                    pic.data = uint8Array.subarray(offset, length);\n                    output = pic;\n                }\n                break;\n            case 'CNT':\n            case 'PCNT':\n                output = decodeUintBE(uint8Array);\n                break;\n            case 'SYLT': {\n                const syltHeader = SyncTextHeader.get(uint8Array, 0);\n                offset += SyncTextHeader.len;\n                const result = {\n                    descriptor: '',\n                    language: syltHeader.language,\n                    contentType: syltHeader.contentType,\n                    timeStampFormat: syltHeader.timeStampFormat,\n                    syncText: []\n                };\n                let readSyllables = false;\n                while (offset < length) {\n                    const nullStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), syltHeader.encoding);\n                    offset += nullStr.len;\n                    if (readSyllables) {\n                        const timestamp = Token.UINT32_BE.get(uint8Array, offset);\n                        offset += Token.UINT32_BE.len;\n                        result.syncText.push({\n                            text: nullStr.text,\n                            timestamp\n                        });\n                    }\n                    else {\n                        result.descriptor = nullStr.text;\n                        readSyllables = true;\n                    }\n                }\n                output = result;\n                break;\n            }\n            case 'ULT':\n            case 'USLT':\n            case 'COM':\n            case 'COMM': {\n                const textHeader = TextHeader.get(uint8Array, offset);\n                offset += TextHeader.len;\n                const descriptorStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), textHeader.encoding);\n                offset += descriptorStr.len;\n                const textStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), textHeader.encoding);\n                const comment = {\n                    language: textHeader.language,\n                    descriptor: descriptorStr.text,\n                    text: textStr.text\n                };\n                output = comment;\n                break;\n            }\n            case 'UFID': {\n                const ufid = FrameParser.readIdentifierAndData(uint8Array, offset, length, defaultEnc);\n                output = { owner_identifier: ufid.id, identifier: ufid.data };\n                break;\n            }\n            case 'PRIV': { // private frame\n                const priv = FrameParser.readIdentifierAndData(uint8Array, offset, length, defaultEnc);\n                output = { owner_identifier: priv.id, data: priv.data };\n                break;\n            }\n            case 'POPM': { // Popularimeter\n                fzero = util.findZero(uint8Array, offset, length, defaultEnc);\n                const email = util.decodeString(uint8Array.subarray(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                const valueLen = length - offset - 1;\n                output = {\n                    email,\n                    rating: Token.UINT8.get(uint8Array, offset),\n                    counter: valueLen > 0 ? util.decodeUintBE(uint8Array.subarray(offset + 1)) : undefined\n                };\n                break;\n            }\n            case 'GEOB': { // General encapsulated object\n                fzero = util.findZero(uint8Array, offset + 1, length, encoding);\n                const mimeType = util.decodeString(uint8Array.subarray(offset + 1, fzero), defaultEnc);\n                offset = fzero + 1;\n                fzero = util.findZero(uint8Array, offset, length, encoding);\n                const filename = util.decodeString(uint8Array.subarray(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                fzero = util.findZero(uint8Array, offset, length, encoding);\n                const description = util.decodeString(uint8Array.subarray(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                const geob = {\n                    type: mimeType,\n                    filename,\n                    description,\n                    data: uint8Array.subarray(offset, length)\n                };\n                output = geob;\n                break;\n            }\n            // W-Frames:\n            case 'WCOM':\n            case 'WCOP':\n            case 'WOAF':\n            case 'WOAR':\n            case 'WOAS':\n            case 'WORS':\n            case 'WPAY':\n            case 'WPUB':\n                // Decode URL\n                fzero = util.findZero(uint8Array, offset + 1, length, encoding);\n                output = util.decodeString(uint8Array.subarray(offset, fzero), defaultEnc);\n                break;\n            case 'WXXX': {\n                // Decode URL\n                fzero = util.findZero(uint8Array, offset + 1, length, encoding);\n                const description = util.decodeString(uint8Array.subarray(offset + 1, fzero), encoding);\n                offset = fzero + (encoding === 'utf-16le' ? 2 : 1);\n                output = { description, url: util.decodeString(uint8Array.subarray(offset, length), defaultEnc) };\n                break;\n            }\n            case 'WFD':\n            case 'WFED':\n                output = util.decodeString(uint8Array.subarray(offset + 1, util.findZero(uint8Array, offset + 1, length, encoding)), encoding);\n                break;\n            case 'MCDI': {\n                // Music CD identifier\n                output = uint8Array.subarray(0, length);\n                break;\n            }\n            default:\n                debug(`Warning: unsupported id3v2-tag-type: ${type}`);\n                break;\n        }\n        return output;\n    }\n    static readNullTerminatedString(uint8Array, encoding) {\n        let offset = encoding.bom ? 2 : 0;\n        const zeroIndex = util.findZero(uint8Array, offset, uint8Array.length, encoding.encoding);\n        const txt = uint8Array.subarray(offset, zeroIndex);\n        if (encoding.encoding === 'utf-16le') {\n            offset = zeroIndex + 2;\n        }\n        else {\n            offset = zeroIndex + 1;\n        }\n        return {\n            text: util.decodeString(txt, encoding.encoding),\n            len: offset\n        };\n    }\n    static fixPictureMimeType(pictureType) {\n        pictureType = pictureType.toLocaleLowerCase();\n        switch (pictureType) {\n            case 'jpg':\n                return 'image/jpeg';\n            case 'png':\n                return 'image/png';\n        }\n        return pictureType;\n    }\n    /**\n     * Converts TMCL (Musician credits list) or TIPL (Involved people list)\n     * @param entries\n     */\n    static functionList(entries) {\n        const res = {};\n        for (let i = 0; i + 1 < entries.length; i += 2) {\n            const names = entries[i + 1].split(',');\n            res[entries[i]] = res[entries[i]] ? res[entries[i]].concat(names) : names;\n        }\n        return res;\n    }\n    /**\n     * id3v2.4 defines that multiple T* values are separated by 0x00\n     * id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n     * @param tag - Tag name\n     * @param text - Concatenated tag value\n     * @returns Split tag value\n     */\n    splitValue(tag, text) {\n        let values;\n        if (this.major < 4) {\n            values = text.split(/\\x00/g);\n            if (values.length > 1) {\n                this.warningCollector.addWarning(`ID3v2.${this.major} ${tag} uses non standard null-separator.`);\n            }\n            else {\n                values = text.split(/\\//g);\n            }\n        }\n        else {\n            values = text.split(/\\x00/g);\n        }\n        return FrameParser.trimArray(values);\n    }\n    static trimArray(values) {\n        return values.map(value => value.replace(/\\x00+$/, '').trim());\n    }\n    static readIdentifierAndData(uint8Array, offset, length, encoding) {\n        const fzero = util.findZero(uint8Array, offset, length, encoding);\n        const id = util.decodeString(uint8Array.subarray(offset, fzero), encoding);\n        offset = fzero + FrameParser.getNullTerminatorLength(encoding);\n        return { id, data: uint8Array.subarray(offset, length) };\n    }\n    static getNullTerminatorLength(enc) {\n        return enc === 'utf-16le' ? 2 : 1;\n    }\n}\nexport class Id3v2ContentError extends makeUnexpectedFileContentError('id3v2') {\n}\nfunction makeUnexpectedMajorVersionError(majorVer) {\n    throw new Id3v2ContentError(`Unexpected majorVer: ${majorVer}`);\n}\n", "import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport { FrameParser, Id3v2ContentError } from './FrameParser.js';\nimport { ExtendedHeader, ID3v2Header, UINT32SYNCSAFE } from './ID3v2Token.js';\nimport { textDecode } from '@borewit/text-codec';\nexport class ID3v2Parser {\n    constructor() {\n        this.tokenizer = undefined;\n        this.id3Header = undefined;\n        this.metadata = undefined;\n        this.headerType = undefined;\n        this.options = undefined;\n    }\n    static removeUnsyncBytes(buffer) {\n        let readI = 0;\n        let writeI = 0;\n        while (readI < buffer.length - 1) {\n            if (readI !== writeI) {\n                buffer[writeI] = buffer[readI];\n            }\n            readI += (buffer[readI] === 0xFF && buffer[readI + 1] === 0) ? 2 : 1;\n            writeI++;\n        }\n        if (readI < buffer.length) {\n            buffer[writeI++] = buffer[readI];\n        }\n        return buffer.subarray(0, writeI);\n    }\n    static getFrameHeaderLength(majorVer) {\n        switch (majorVer) {\n            case 2:\n                return 6;\n            case 3:\n            case 4:\n                return 10;\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n    }\n    static readFrameFlags(b) {\n        return {\n            status: {\n                tag_alter_preservation: util.getBit(b, 0, 6),\n                file_alter_preservation: util.getBit(b, 0, 5),\n                read_only: util.getBit(b, 0, 4)\n            },\n            format: {\n                grouping_identity: util.getBit(b, 1, 7),\n                compression: util.getBit(b, 1, 3),\n                encryption: util.getBit(b, 1, 2),\n                unsynchronisation: util.getBit(b, 1, 1),\n                data_length_indicator: util.getBit(b, 1, 0)\n            }\n        };\n    }\n    static readFrameData(uint8Array, frameHeader, majorVer, includeCovers, warningCollector) {\n        const frameParser = new FrameParser(majorVer, warningCollector);\n        switch (majorVer) {\n            case 2:\n                return frameParser.readData(uint8Array, frameHeader.id, includeCovers);\n            case 3:\n            case 4:\n                if (frameHeader.flags?.format.unsynchronisation) {\n                    uint8Array = ID3v2Parser.removeUnsyncBytes(uint8Array);\n                }\n                if (frameHeader.flags?.format.data_length_indicator) {\n                    uint8Array = uint8Array.subarray(4, uint8Array.length);\n                }\n                return frameParser.readData(uint8Array, frameHeader.id, includeCovers);\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n    }\n    /**\n     * Create a combined tag key, of tag & description\n     * @param tag e.g.: COM\n     * @param description e.g. iTunPGAP\n     * @returns string e.g. COM:iTunPGAP\n     */\n    static makeDescriptionTagName(tag, description) {\n        return tag + (description ? `:${description}` : '');\n    }\n    async parse(metadata, tokenizer, options) {\n        this.tokenizer = tokenizer;\n        this.metadata = metadata;\n        this.options = options;\n        const id3Header = await this.tokenizer.readToken(ID3v2Header);\n        if (id3Header.fileIdentifier !== 'ID3') {\n            throw new Id3v2ContentError('expected ID3-header file-identifier \\'ID3\\' was not found');\n        }\n        this.id3Header = id3Header;\n        this.headerType = (`ID3v2.${id3Header.version.major}`);\n        return id3Header.flags.isExtendedHeader ? this.parseExtendedHeader() : this.parseId3Data(id3Header.size);\n    }\n    async parseExtendedHeader() {\n        const extendedHeader = await this.tokenizer.readToken(ExtendedHeader);\n        const dataRemaining = extendedHeader.size - ExtendedHeader.len;\n        return dataRemaining > 0 ? this.parseExtendedHeaderData(dataRemaining, extendedHeader.size) : this.parseId3Data(this.id3Header.size - extendedHeader.size);\n    }\n    async parseExtendedHeaderData(dataRemaining, extendedHeaderSize) {\n        await this.tokenizer.ignore(dataRemaining);\n        return this.parseId3Data(this.id3Header.size - extendedHeaderSize);\n    }\n    async parseId3Data(dataLen) {\n        const uint8Array = await this.tokenizer.readToken(new Token.Uint8ArrayType(dataLen));\n        for (const tag of this.parseMetadata(uint8Array)) {\n            switch (tag.id) {\n                case 'TXXX':\n                    if (tag.value) {\n                        await this.handleTag(tag, tag.value.text, () => tag.value.description);\n                    }\n                    break;\n                default:\n                    await (Array.isArray(tag.value) ? Promise.all(tag.value.map(value => this.addTag(tag.id, value))) : this.addTag(tag.id, tag.value));\n            }\n        }\n    }\n    async handleTag(tag, values, descriptor, resolveValue = value => value) {\n        await Promise.all(values.map(value => this.addTag(ID3v2Parser.makeDescriptionTagName(tag.id, descriptor(value)), resolveValue(value))));\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag(this.headerType, id, value);\n    }\n    parseMetadata(data) {\n        let offset = 0;\n        const tags = [];\n        while (true) {\n            if (offset === data.length)\n                break;\n            const frameHeaderLength = ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);\n            if (offset + frameHeaderLength > data.length) {\n                this.metadata.addWarning('Illegal ID3v2 tag length');\n                break;\n            }\n            const frameHeaderBytes = data.subarray(offset, offset + frameHeaderLength);\n            offset += frameHeaderLength;\n            const frameHeader = this.readFrameHeader(frameHeaderBytes, this.id3Header.version.major);\n            const frameDataBytes = data.subarray(offset, offset + frameHeader.length);\n            offset += frameHeader.length;\n            const values = ID3v2Parser.readFrameData(frameDataBytes, frameHeader, this.id3Header.version.major, !this.options.skipCovers, this.metadata);\n            if (values) {\n                tags.push({ id: frameHeader.id, value: values });\n            }\n        }\n        return tags;\n    }\n    readFrameHeader(uint8Array, majorVer) {\n        let header;\n        switch (majorVer) {\n            case 2:\n                header = {\n                    id: textDecode(uint8Array.subarray(0, 3), 'ascii'),\n                    length: Token.UINT24_BE.get(uint8Array, 3)\n                };\n                if (!header.id.match(/[A-Z0-9]{3}/g)) {\n                    this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${header.id}`);\n                }\n                break;\n            case 3:\n            case 4:\n                header = {\n                    id: textDecode(uint8Array.subarray(0, 4), 'ascii'),\n                    length: (majorVer === 4 ? UINT32SYNCSAFE : Token.UINT32_BE).get(uint8Array, 4),\n                    flags: ID3v2Parser.readFrameFlags(uint8Array.subarray(8, 10))\n                };\n                if (!header.id.match(/[A-Z0-9]{4}/g)) {\n                    this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${header.id}`);\n                }\n                break;\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n        return header;\n    }\n}\nfunction makeUnexpectedMajorVersionError(majorVer) {\n    throw new Id3v2ContentError(`Unexpected majorVer: ${majorVer}`);\n}\n", "import { EndOfStreamError } from 'strtok3';\nimport initDebug from 'debug';\nimport { ID3v2Header } from './ID3v2Token.js';\nimport { ID3v2Parser } from './ID3v2Parser.js';\nimport { ID3v1Parser } from '../id3v1/ID3v1Parser.js';\nimport { BasicParser } from '../common/BasicParser.js';\nconst debug = initDebug('music-metadata:parser:ID3');\n/**\n * Abstract parser which tries take ID3v2 and ID3v1 headers.\n */\nexport class AbstractID3Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.id3parser = new ID3v2Parser();\n    }\n    static async startsWithID3v2Header(tokenizer) {\n        return (await tokenizer.peekToken(ID3v2Header)).fileIdentifier === 'ID3';\n    }\n    async parse() {\n        try {\n            await this.parseID3v2();\n        }\n        catch (err) {\n            if (err instanceof EndOfStreamError) {\n                debug(\"End-of-stream\");\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    finalize() {\n        return;\n    }\n    async parseID3v2() {\n        await this.tryReadId3v2Headers();\n        debug('End of ID3v2 header, go to MPEG-parser: pos=%s', this.tokenizer.position);\n        await this.postId3v2Parse();\n        if (this.options.skipPostHeaders && this.metadata.hasAny()) {\n            this.finalize();\n        }\n        else {\n            const id3v1parser = new ID3v1Parser(this.metadata, this.tokenizer, this.options);\n            await id3v1parser.parse();\n            this.finalize();\n        }\n    }\n    async tryReadId3v2Headers() {\n        const id3Header = await this.tokenizer.peekToken(ID3v2Header);\n        if (id3Header.fileIdentifier === 'ID3') {\n            debug('Found ID3v2 header, pos=%s', this.tokenizer.position);\n            await this.id3parser.parse(this.metadata, this.tokenizer, this.options);\n            return this.tryReadId3v2Headers();\n        }\n    }\n}\n", "import * as common from '../common/Util.js';\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#name-code\n */\nconst NameCode = {\n    /**\n     * not set\n     */\n    not_set: 0,\n    /**\n     * Radio Gain Adjustment\n     */\n    radio: 1,\n    /**\n     * Audiophile Gain Adjustment\n     */\n    audiophile: 2\n};\n/**\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format#originator-code\n */\nconst ReplayGainOriginator = {\n    /**\n     * Replay Gain unspecified\n     */\n    unspecified: 0,\n    /**\n     * Replay Gain pre-set by artist/producer/mastering engineer\n     */\n    engineer: 1,\n    /**\n     * Replay Gain set by user\n     */\n    user: 2,\n    /**\n     * Replay Gain determined automatically, as described on this site\n     */\n    automatic: 3,\n    /**\n     * Set by simple RMS average\n     */\n    rms_average: 4\n};\n/**\n * Replay Gain Data Format\n *\n * https://github.com/Borewit/music-metadata/wiki/Replay-Gain-Data-Format\n */\nexport const ReplayGain = {\n    len: 2,\n    get: (buf, off) => {\n        const gain_type = common.getBitAllignedNumber(buf, off, 0, 3);\n        const sign = common.getBitAllignedNumber(buf, off, 6, 1);\n        const gain_adj = common.getBitAllignedNumber(buf, off, 7, 9) / 10.0;\n        if (gain_type > 0) {\n            return {\n                type: common.getBitAllignedNumber(buf, off, 0, 3),\n                origin: common.getBitAllignedNumber(buf, off, 3, 3),\n                adjustment: (sign ? -gain_adj : gain_adj)\n            };\n        }\n        return undefined;\n    }\n};\n", "/**\n * Extended Lame Header\n */\nimport * as Token from 'token-types';\nimport * as common from '../common/Util.js';\nimport { ReplayGain } from './ReplayGainDataFormat.js';\n/**\n * Info Tag\n * @link http://gabriel.mp3-tech.org/mp3infotag.html\n * @link https://github.com/quodlibet/mutagen/blob/abd58ee58772224334a18817c3fb31103572f70e/mutagen/mp3/_util.py#L112\n */\nexport const ExtendedLameHeader = {\n    len: 27,\n    get: (buf, off) => {\n        const track_peak = Token.UINT32_BE.get(buf, off + 2);\n        return {\n            revision: common.getBitAllignedNumber(buf, off, 0, 4),\n            vbr_method: common.getBitAllignedNumber(buf, off, 4, 4),\n            lowpass_filter: 100 * Token.UINT8.get(buf, off + 1),\n            track_peak: track_peak === 0 ? null : track_peak / 2 ** 23,\n            track_gain: ReplayGain.get(buf, 6),\n            album_gain: ReplayGain.get(buf, 8),\n            music_length: Token.UINT32_BE.get(buf, off + 20),\n            music_crc: Token.UINT8.get(buf, off + 24),\n            header_crc: Token.UINT16_BE.get(buf, off + 24)\n        };\n    }\n};\n", "import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport { ExtendedLameHeader } from './ExtendedLameHeader.js';\n/**\n * Info Tag: Xing, LAME\n */\nexport const InfoTagHeaderTag = new Token.StringType(4, 'ascii');\n/**\n * LAME TAG value\n * Did not find any official documentation for this\n * Value e.g.: \"3.98.4\"\n */\nexport const LameEncoderVersion = new Token.StringType(6, 'ascii');\n/**\n * Info Tag\n * Ref: http://gabriel.mp3-tech.org/mp3infotag.html\n */\nexport const XingHeaderFlags = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            frames: util.isBitSet(buf, off, 31),\n            bytes: util.isBitSet(buf, off, 30),\n            toc: util.isBitSet(buf, off, 29),\n            vbrScale: util.isBitSet(buf, off, 28)\n        };\n    }\n};\n// /**\n//  * XING Header Tag\n//  * Ref: http://gabriel.mp3-tech.org/mp3infotag.html\n//  */\nexport async function readXingHeader(tokenizer) {\n    const flags = await tokenizer.readToken(XingHeaderFlags);\n    const xingInfoTag = { numFrames: null, streamSize: null, vbrScale: null };\n    if (flags.frames) {\n        xingInfoTag.numFrames = await tokenizer.readToken(Token.UINT32_BE);\n    }\n    if (flags.bytes) {\n        xingInfoTag.streamSize = await tokenizer.readToken(Token.UINT32_BE);\n    }\n    if (flags.toc) {\n        xingInfoTag.toc = new Uint8Array(100);\n        await tokenizer.readBuffer(xingInfoTag.toc);\n    }\n    if (flags.vbrScale) {\n        xingInfoTag.vbrScale = await tokenizer.readToken(Token.UINT32_BE);\n    }\n    const lameTag = await tokenizer.peekToken(new Token.StringType(4, 'ascii'));\n    if (lameTag === 'LAME') {\n        await tokenizer.ignore(4);\n        xingInfoTag.lame = {\n            version: await tokenizer.readToken(new Token.StringType(5, 'ascii'))\n        };\n        const match = xingInfoTag.lame.version.match(/\\d+.\\d+/g);\n        if (match !== null) {\n            const majorMinorVersion = match[0]; // e.g. 3.97\n            const version = majorMinorVersion.split('.').map(n => Number.parseInt(n, 10));\n            if (version[0] >= 3 && version[1] >= 90) {\n                xingInfoTag.lame.extended = await tokenizer.readToken(ExtendedLameHeader);\n            }\n        }\n    }\n    return xingInfoTag;\n}\n", "import * as Token from 'token-types';\nimport { EndOfStreamError } from 'strtok3';\nimport initDebug from 'debug';\nimport * as common from '../common/Util.js';\nimport { AbstractID3Parser } from '../id3v2/AbstractID3Parser.js';\nimport { InfoTagHeaderTag, LameEncoderVersion, readXingHeader } from './XingTag.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:mpeg');\nexport class MpegContentError extends makeUnexpectedFileContentError('MPEG') {\n}\n/**\n * Cache buffer size used for searching synchronization preabmle\n */\nconst maxPeekLen = 1024;\n/**\n * MPEG-4 Audio definitions\n * Ref:  https://wiki.multimedia.cx/index.php/MPEG-4_Audio\n */\nconst MPEG4 = {\n    /**\n     * Audio Object Types\n     */\n    AudioObjectTypes: [\n        'AAC Main',\n        'AAC LC', // Low Complexity\n        'AAC SSR', // Scalable Sample Rate\n        'AAC LTP' // Long Term Prediction\n    ],\n    /**\n     * Sampling Frequencies\n     * https://wiki.multimedia.cx/index.php/MPEG-4_Audio#Sampling_Frequencies\n     */\n    SamplingFrequencies: [\n        96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350, null, null, -1\n    ]\n    /**\n     * Channel Configurations\n     */\n};\nconst MPEG4_ChannelConfigurations = [\n    undefined,\n    ['front-center'],\n    ['front-left', 'front-right'],\n    ['front-center', 'front-left', 'front-right'],\n    ['front-center', 'front-left', 'front-right', 'back-center'],\n    ['front-center', 'front-left', 'front-right', 'back-left', 'back-right'],\n    ['front-center', 'front-left', 'front-right', 'back-left', 'back-right', 'LFE-channel'],\n    ['front-center', 'front-left', 'front-right', 'side-left', 'side-right', 'back-left', 'back-right', 'LFE-channel']\n];\n/**\n * MPEG Audio Layer I/II/III frame header\n * Ref: https://www.mp3-tech.org/programmer/frame_header.html\n * Bit layout: AAAAAAAA AAABBCCD EEEEFFGH IIJJKLMM\n * Ref: https://wiki.multimedia.cx/index.php/ADTS\n */\nclass MpegFrameHeader {\n    constructor(buf, off) {\n        // E(15,12): Bitrate index\n        this.bitrateIndex = null;\n        // F(11,10): Sampling rate frequency index\n        this.sampRateFreqIndex = null;\n        // G(9): Padding bit\n        this.padding = null;\n        // H(8): Private bit\n        this.privateBit = null;\n        // I(7,6): Channel Mode\n        this.channelModeIndex = null;\n        // J(5,4): Mode extension (Only used in Joint stereo)\n        this.modeExtension = null;\n        // L(2): Original\n        this.isOriginalMedia = null;\n        this.version = null;\n        this.bitrate = null;\n        this.samplingRate = null;\n        this.frameLength = 0;\n        // B(20,19): MPEG Audio versionIndex ID\n        this.versionIndex = common.getBitAllignedNumber(buf, off + 1, 3, 2);\n        // C(18,17): Layer description\n        this.layer = MpegFrameHeader.LayerDescription[common.getBitAllignedNumber(buf, off + 1, 5, 2)];\n        if (this.versionIndex > 1 && this.layer === 0) {\n            this.parseAdtsHeader(buf, off); // Audio Data Transport Stream (ADTS)\n        }\n        else {\n            this.parseMpegHeader(buf, off); // Conventional MPEG header\n        }\n        // D(16): Protection bit (if true 16-bit CRC follows header)\n        this.isProtectedByCRC = !common.isBitSet(buf, off + 1, 7);\n    }\n    calcDuration(numFrames) {\n        return this.samplingRate == null ? null : (numFrames * this.calcSamplesPerFrame() / this.samplingRate);\n    }\n    calcSamplesPerFrame() {\n        return MpegFrameHeader.samplesInFrameTable[this.version === 1 ? 0 : 1][this.layer];\n    }\n    calculateSideInfoLength() {\n        if (this.layer !== 3)\n            return 2;\n        if (this.channelModeIndex === 3) {\n            // mono\n            if (this.version === 1) {\n                return 17;\n            }\n            if (this.version === 2 || this.version === 2.5) {\n                return 9;\n            }\n        }\n        else {\n            if (this.version === 1) {\n                return 32;\n            }\n            if (this.version === 2 || this.version === 2.5) {\n                return 17;\n            }\n        }\n        return null;\n    }\n    calcSlotSize() {\n        return [null, 4, 1, 1][this.layer];\n    }\n    parseMpegHeader(buf, off) {\n        this.container = 'MPEG';\n        // E(15,12): Bitrate index\n        this.bitrateIndex = common.getBitAllignedNumber(buf, off + 2, 0, 4);\n        // F(11,10): Sampling rate frequency index\n        this.sampRateFreqIndex = common.getBitAllignedNumber(buf, off + 2, 4, 2);\n        // G(9): Padding bit\n        this.padding = common.isBitSet(buf, off + 2, 6);\n        // H(8): Private bit\n        this.privateBit = common.isBitSet(buf, off + 2, 7);\n        // I(7,6): Channel Mode\n        this.channelModeIndex = common.getBitAllignedNumber(buf, off + 3, 0, 2);\n        // J(5,4): Mode extension (Only used in Joint stereo)\n        this.modeExtension = common.getBitAllignedNumber(buf, off + 3, 2, 2);\n        // K(3): Copyright\n        this.isCopyrighted = common.isBitSet(buf, off + 3, 4);\n        // L(2): Original\n        this.isOriginalMedia = common.isBitSet(buf, off + 3, 5);\n        // M(3): The original bit indicates, if it is set, that the frame is located on its original media.\n        this.emphasis = common.getBitAllignedNumber(buf, off + 3, 7, 2);\n        this.version = MpegFrameHeader.VersionID[this.versionIndex];\n        this.channelMode = MpegFrameHeader.ChannelMode[this.channelModeIndex];\n        this.codec = `MPEG ${this.version} Layer ${this.layer}`;\n        // Calculate bitrate\n        const bitrateInKbps = this.calcBitrate();\n        if (!bitrateInKbps) {\n            throw new MpegContentError('Cannot determine bit-rate');\n        }\n        this.bitrate = bitrateInKbps * 1000;\n        // Calculate sampling rate\n        this.samplingRate = this.calcSamplingRate();\n        if (this.samplingRate == null) {\n            throw new MpegContentError('Cannot determine sampling-rate');\n        }\n    }\n    parseAdtsHeader(buf, off) {\n        debug(\"layer=0 => ADTS\");\n        this.version = this.versionIndex === 2 ? 4 : 2;\n        this.container = `ADTS/MPEG-${this.version}`;\n        const profileIndex = common.getBitAllignedNumber(buf, off + 2, 0, 2);\n        this.codec = 'AAC';\n        this.codecProfile = MPEG4.AudioObjectTypes[profileIndex];\n        debug(`MPEG-4 audio-codec=${this.codec}`);\n        const samplingFrequencyIndex = common.getBitAllignedNumber(buf, off + 2, 2, 4);\n        this.samplingRate = MPEG4.SamplingFrequencies[samplingFrequencyIndex];\n        debug(`sampling-rate=${this.samplingRate}`);\n        const channelIndex = common.getBitAllignedNumber(buf, off + 2, 7, 3);\n        this.mp4ChannelConfig = MPEG4_ChannelConfigurations[channelIndex];\n        debug(`channel-config=${this.mp4ChannelConfig ? this.mp4ChannelConfig.join('+') : '?'}`);\n        this.frameLength = common.getBitAllignedNumber(buf, off + 3, 6, 2) << 11;\n    }\n    calcBitrate() {\n        if (this.bitrateIndex === 0x00 || // free\n            this.bitrateIndex === 0x0F) { // reserved\n            return null;\n        }\n        if (this.version && this.bitrateIndex) {\n            const codecIndex = 10 * Math.floor(this.version) + this.layer;\n            return MpegFrameHeader.bitrate_index[this.bitrateIndex][codecIndex];\n        }\n        return null;\n    }\n    calcSamplingRate() {\n        if (this.sampRateFreqIndex === 0x03 || this.version === null || this.sampRateFreqIndex == null)\n            return null; // 'reserved'\n        return MpegFrameHeader.sampling_rate_freq_index[this.version][this.sampRateFreqIndex];\n    }\n}\nMpegFrameHeader.SyncByte1 = 0xFF;\nMpegFrameHeader.SyncByte2 = 0xE0;\nMpegFrameHeader.VersionID = [2.5, null, 2, 1];\nMpegFrameHeader.LayerDescription = [0, 3, 2, 1];\nMpegFrameHeader.ChannelMode = ['stereo', 'joint_stereo', 'dual_channel', 'mono'];\nMpegFrameHeader.bitrate_index = {\n    1: { 11: 32, 12: 32, 13: 32, 21: 32, 22: 8, 23: 8 },\n    2: { 11: 64, 12: 48, 13: 40, 21: 48, 22: 16, 23: 16 },\n    3: { 11: 96, 12: 56, 13: 48, 21: 56, 22: 24, 23: 24 },\n    4: { 11: 128, 12: 64, 13: 56, 21: 64, 22: 32, 23: 32 },\n    5: { 11: 160, 12: 80, 13: 64, 21: 80, 22: 40, 23: 40 },\n    6: { 11: 192, 12: 96, 13: 80, 21: 96, 22: 48, 23: 48 },\n    7: { 11: 224, 12: 112, 13: 96, 21: 112, 22: 56, 23: 56 },\n    8: { 11: 256, 12: 128, 13: 112, 21: 128, 22: 64, 23: 64 },\n    9: { 11: 288, 12: 160, 13: 128, 21: 144, 22: 80, 23: 80 },\n    10: { 11: 320, 12: 192, 13: 160, 21: 160, 22: 96, 23: 96 },\n    11: { 11: 352, 12: 224, 13: 192, 21: 176, 22: 112, 23: 112 },\n    12: { 11: 384, 12: 256, 13: 224, 21: 192, 22: 128, 23: 128 },\n    13: { 11: 416, 12: 320, 13: 256, 21: 224, 22: 144, 23: 144 },\n    14: { 11: 448, 12: 384, 13: 320, 21: 256, 22: 160, 23: 160 }\n};\nMpegFrameHeader.sampling_rate_freq_index = {\n    1: { 0: 44100, 1: 48000, 2: 32000 },\n    2: { 0: 22050, 1: 24000, 2: 16000 },\n    2.5: { 0: 11025, 1: 12000, 2: 8000 }\n};\nMpegFrameHeader.samplesInFrameTable = [\n    /* Layer   I    II   III */\n    [0, 384, 1152, 1152], // MPEG-1\n    [0, 384, 1152, 576] // MPEG-2(.5\n];\n/**\n * MPEG Audio Layer I/II/III\n */\nconst FrameHeader = {\n    len: 4,\n    get: (buf, off) => {\n        return new MpegFrameHeader(buf, off);\n    }\n};\nfunction getVbrCodecProfile(vbrScale) {\n    return `V${Math.floor((100 - vbrScale) / 10)}`;\n}\nexport class MpegParser extends AbstractID3Parser {\n    constructor() {\n        super(...arguments);\n        this.frameCount = 0;\n        this.syncFrameCount = -1;\n        this.countSkipFrameData = 0;\n        this.totalDataLength = 0;\n        this.bitrates = [];\n        this.offset = 0;\n        this.frame_size = 0;\n        this.crc = null;\n        this.calculateEofDuration = false;\n        this.samplesPerFrame = null;\n        this.buf_frame_header = new Uint8Array(4);\n        /**\n         * Number of bytes already parsed since beginning of stream / file\n         */\n        this.mpegOffset = null;\n        this.syncPeek = {\n            buf: new Uint8Array(maxPeekLen),\n            len: 0\n        };\n    }\n    /**\n     * Called after ID3 headers have been parsed\n     */\n    async postId3v2Parse() {\n        this.metadata.setFormat('lossless', false);\n        this.metadata.setAudioOnly();\n        try {\n            let quit = false;\n            while (!quit) {\n                await this.sync();\n                quit = await this.parseCommonMpegHeader();\n            }\n        }\n        catch (err) {\n            if (err instanceof EndOfStreamError) {\n                debug(\"End-of-stream\");\n                if (this.calculateEofDuration) {\n                    if (this.samplesPerFrame !== null) {\n                        const numberOfSamples = this.frameCount * this.samplesPerFrame;\n                        this.metadata.setFormat('numberOfSamples', numberOfSamples);\n                        if (this.metadata.format.sampleRate) {\n                            const duration = numberOfSamples / this.metadata.format.sampleRate;\n                            debug(`Calculate duration at EOF: ${duration} sec.`, duration);\n                            this.metadata.setFormat('duration', duration);\n                        }\n                    }\n                }\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Called after file has been fully parsed, this allows, if present, to exclude the ID3v1.1 header length\n     */\n    finalize() {\n        const format = this.metadata.format;\n        const hasID3v1 = !!this.metadata.native.ID3v1;\n        if (this.mpegOffset !== null) {\n            if (format.duration && this.tokenizer.fileInfo.size) {\n                const mpegSize = this.tokenizer.fileInfo.size - this.mpegOffset - (hasID3v1 ? 128 : 0);\n                if (format.codecProfile && format.codecProfile[0] === 'V') {\n                    this.metadata.setFormat('bitrate', mpegSize * 8 / format.duration);\n                }\n            }\n            if (this.tokenizer.fileInfo.size && format.codecProfile === 'CBR') {\n                const mpegSize = this.tokenizer.fileInfo.size - this.mpegOffset - (hasID3v1 ? 128 : 0);\n                if (this.frame_size !== null && this.samplesPerFrame !== null) {\n                    const numberOfSamples = Math.round(mpegSize / this.frame_size) * this.samplesPerFrame;\n                    this.metadata.setFormat('numberOfSamples', numberOfSamples);\n                    if (format.sampleRate && !format.duration) {\n                        const duration = numberOfSamples / format.sampleRate;\n                        debug(\"Calculate CBR duration based on file size: %s\", duration);\n                        this.metadata.setFormat('duration', duration);\n                    }\n                }\n            }\n        }\n    }\n    async sync() {\n        let gotFirstSync = false;\n        while (true) {\n            let bo = 0;\n            this.syncPeek.len = await this.tokenizer.peekBuffer(this.syncPeek.buf, { length: maxPeekLen, mayBeLess: true });\n            if (this.syncPeek.len <= 163) {\n                throw new EndOfStreamError();\n            }\n            while (true) {\n                if (gotFirstSync && (this.syncPeek.buf[bo] & 0xE0) === 0xE0) {\n                    this.buf_frame_header[0] = MpegFrameHeader.SyncByte1;\n                    this.buf_frame_header[1] = this.syncPeek.buf[bo];\n                    await this.tokenizer.ignore(bo);\n                    debug(`Sync at offset=${this.tokenizer.position - 1}, frameCount=${this.frameCount}`);\n                    if (this.syncFrameCount === this.frameCount) {\n                        debug(`Re-synced MPEG stream, frameCount=${this.frameCount}`);\n                        this.frameCount = 0;\n                        this.frame_size = 0;\n                    }\n                    this.syncFrameCount = this.frameCount;\n                    return; // sync\n                }\n                gotFirstSync = false;\n                bo = this.syncPeek.buf.indexOf(MpegFrameHeader.SyncByte1, bo);\n                if (bo === -1) {\n                    if (this.syncPeek.len < this.syncPeek.buf.length) {\n                        throw new EndOfStreamError();\n                    }\n                    await this.tokenizer.ignore(this.syncPeek.len);\n                    break; // continue with next buffer\n                }\n                ++bo;\n                gotFirstSync = true;\n            }\n        }\n    }\n    /**\n     * Combined ADTS & MPEG (MP2 & MP3) header handling\n     * @return {Promise<boolean>} true if parser should quit\n     */\n    async parseCommonMpegHeader() {\n        if (this.frameCount === 0) {\n            this.mpegOffset = this.tokenizer.position - 1;\n        }\n        await this.tokenizer.peekBuffer(this.buf_frame_header.subarray(1), { length: 3 });\n        let header;\n        try {\n            header = FrameHeader.get(this.buf_frame_header, 0);\n        }\n        catch (err) {\n            await this.tokenizer.ignore(1);\n            if (err instanceof Error) {\n                this.metadata.addWarning(`Parse error: ${err.message}`);\n                return false; // sync\n            }\n            throw err;\n        }\n        await this.tokenizer.ignore(3);\n        this.metadata.setFormat('container', header.container);\n        this.metadata.setFormat('codec', header.codec);\n        this.metadata.setFormat('lossless', false);\n        this.metadata.setFormat('sampleRate', header.samplingRate);\n        this.frameCount++;\n        return header.version !== null && header.version >= 2 && header.layer === 0 ? this.parseAdts(header) : this.parseAudioFrameHeader(header);\n    }\n    /**\n     * @return {Promise<boolean>} true if parser should quit\n     */\n    async parseAudioFrameHeader(header) {\n        this.metadata.setFormat('numberOfChannels', header.channelMode === 'mono' ? 1 : 2);\n        this.metadata.setFormat('bitrate', header.bitrate);\n        if (this.frameCount < 20 * 10000) {\n            debug('offset=%s MP%s bitrate=%s sample-rate=%s', this.tokenizer.position - 4, header.layer, header.bitrate, header.samplingRate);\n        }\n        const slot_size = header.calcSlotSize();\n        if (slot_size === null) {\n            throw new MpegContentError('invalid slot_size');\n        }\n        const samples_per_frame = header.calcSamplesPerFrame();\n        debug(`samples_per_frame=${samples_per_frame}`);\n        const bps = samples_per_frame / 8.0;\n        if (header.bitrate !== null && header.samplingRate != null) {\n            const fsize = (bps * header.bitrate / header.samplingRate) + ((header.padding) ? slot_size : 0);\n            this.frame_size = Math.floor(fsize);\n        }\n        this.audioFrameHeader = header;\n        if (header.bitrate !== null) {\n            this.bitrates.push(header.bitrate);\n        }\n        // xtra header only exists in first frame\n        if (this.frameCount === 1) {\n            this.offset = FrameHeader.len;\n            await this.skipSideInformation();\n            return false;\n        }\n        if (this.frameCount === 4) {\n            // the stream is CBR if the first 3 frame bitrates are the same\n            if (this.areAllSame(this.bitrates)) {\n                // Actual calculation will be done in finalize\n                this.samplesPerFrame = samples_per_frame;\n                this.metadata.setFormat('codecProfile', 'CBR');\n                if (this.tokenizer.fileInfo.size)\n                    return true; // Will calculate duration based on the file size\n            }\n            else if (this.metadata.format.duration) {\n                return true; // We already got the duration, stop processing MPEG stream any further\n            }\n            if (!this.options.duration) {\n                return true; // Enforce duration not enabled, stop processing entire stream\n            }\n        }\n        // once we know the file is VBR attach listener to end of\n        // stream so we can do the duration calculation when we\n        // have counted all the frames\n        if (this.options.duration && this.frameCount === 4) {\n            this.samplesPerFrame = samples_per_frame;\n            this.calculateEofDuration = true;\n        }\n        this.offset = 4;\n        if (header.isProtectedByCRC) {\n            await this.parseCrc();\n            return false;\n        }\n        await this.skipSideInformation();\n        return false;\n    }\n    async parseAdts(header) {\n        const buf = new Uint8Array(3);\n        await this.tokenizer.readBuffer(buf);\n        header.frameLength += common.getBitAllignedNumber(buf, 0, 0, 11);\n        this.totalDataLength += header.frameLength;\n        this.samplesPerFrame = 1024;\n        if (header.samplingRate !== null) {\n            const framesPerSec = header.samplingRate / this.samplesPerFrame;\n            const bytesPerFrame = this.frameCount === 0 ? 0 : this.totalDataLength / this.frameCount;\n            const bitrate = 8 * bytesPerFrame * framesPerSec + 0.5;\n            this.metadata.setFormat('bitrate', bitrate);\n            debug(`frame-count=${this.frameCount}, size=${header.frameLength} bytes, bit-rate=${bitrate}`);\n        }\n        await this.tokenizer.ignore(header.frameLength > 7 ? header.frameLength - 7 : 1);\n        // Consume remaining header and frame data\n        if (this.frameCount === 3) {\n            this.metadata.setFormat('codecProfile', header.codecProfile);\n            if (header.mp4ChannelConfig) {\n                this.metadata.setFormat('numberOfChannels', header.mp4ChannelConfig.length);\n            }\n            if (this.options.duration) {\n                this.calculateEofDuration = true;\n            }\n            else {\n                return true; // Stop parsing after the third frame\n            }\n        }\n        return false;\n    }\n    async parseCrc() {\n        this.crc = await this.tokenizer.readNumber(Token.INT16_BE);\n        this.offset += 2;\n        return this.skipSideInformation();\n    }\n    async skipSideInformation() {\n        if (this.audioFrameHeader) {\n            const sideinfo_length = this.audioFrameHeader.calculateSideInfoLength();\n            if (sideinfo_length !== null) {\n                await this.tokenizer.readToken(new Token.Uint8ArrayType(sideinfo_length));\n                // side information\n                this.offset += sideinfo_length;\n                await this.readXtraInfoHeader();\n                return;\n            }\n        }\n    }\n    async readXtraInfoHeader() {\n        const headerTag = await this.tokenizer.readToken(InfoTagHeaderTag);\n        this.offset += InfoTagHeaderTag.len; // 12\n        switch (headerTag) {\n            case 'Info':\n                this.metadata.setFormat('codecProfile', 'CBR');\n                return this.readXingInfoHeader();\n            case 'Xing': {\n                const infoTag = await this.readXingInfoHeader();\n                if (infoTag.vbrScale !== null) {\n                    const codecProfile = getVbrCodecProfile(infoTag.vbrScale);\n                    this.metadata.setFormat('codecProfile', codecProfile);\n                }\n                return null;\n            }\n            case 'Xtra':\n                // ToDo: ???\n                break;\n            case 'LAME': {\n                const version = await this.tokenizer.readToken(LameEncoderVersion);\n                if (this.frame_size !== null && this.frame_size >= this.offset + LameEncoderVersion.len) {\n                    this.offset += LameEncoderVersion.len;\n                    this.metadata.setFormat('tool', `LAME ${version}`);\n                    await this.skipFrameData(this.frame_size - this.offset);\n                    return null;\n                }\n                this.metadata.addWarning('Corrupt LAME header');\n                break;\n            }\n            // ToDo: ???\n        }\n        // ToDo: promise duration???\n        const frameDataLeft = this.frame_size - this.offset;\n        if (frameDataLeft < 0) {\n            this.metadata.addWarning(`Frame ${this.frameCount}corrupt: negative frameDataLeft`);\n        }\n        else {\n            await this.skipFrameData(frameDataLeft);\n        }\n        return null;\n    }\n    /**\n     * Ref: http://gabriel.mp3-tech.org/mp3infotag.html\n     * @returns {Promise<string>}\n     */\n    async readXingInfoHeader() {\n        const offset = this.tokenizer.position;\n        const infoTag = await readXingHeader(this.tokenizer);\n        this.offset += this.tokenizer.position - offset;\n        if (infoTag.lame) {\n            this.metadata.setFormat('tool', `LAME ${common.stripNulls(infoTag.lame.version)}`);\n            if (infoTag.lame.extended) {\n                // this.metadata.setFormat('trackGain', infoTag.lame.extended.track_gain);\n                this.metadata.setFormat('trackPeakLevel', infoTag.lame.extended.track_peak);\n                if (infoTag.lame.extended.track_gain) {\n                    this.metadata.setFormat('trackGain', infoTag.lame.extended.track_gain.adjustment);\n                }\n                if (infoTag.lame.extended.album_gain) {\n                    this.metadata.setFormat('albumGain', infoTag.lame.extended.album_gain.adjustment);\n                }\n                this.metadata.setFormat('duration', infoTag.lame.extended.music_length / 1000);\n            }\n        }\n        if (infoTag.streamSize && this.audioFrameHeader && infoTag.numFrames !== null) {\n            const duration = this.audioFrameHeader.calcDuration(infoTag.numFrames);\n            this.metadata.setFormat('duration', duration);\n            debug('Get duration from Xing header: %s', this.metadata.format.duration);\n            return infoTag;\n        }\n        // frames field is not present\n        const frameDataLeft = this.frame_size - this.offset;\n        await this.skipFrameData(frameDataLeft);\n        return infoTag;\n    }\n    async skipFrameData(frameDataLeft) {\n        if (frameDataLeft < 0)\n            throw new MpegContentError('frame-data-left cannot be negative');\n        await this.tokenizer.ignore(frameDataLeft);\n        this.countSkipFrameData += frameDataLeft;\n    }\n    areAllSame(array) {\n        const first = array[0];\n        return array.every(element => {\n            return element === first;\n        });\n    }\n}\n", "import { hexToUint8Array, uint8ArrayToHex } from 'uint8array-extras';\n/**\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01, Appendix A: ASF GUIDs\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n *\n * ASF File Structure:\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n *\n * ASF GUIDs:\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - https://github.com/dji-sdk/FFmpeg/blob/master/libavformat/asf.c\n */\nclass GUID {\n    static fromBin(bin, offset = 0) {\n        return new GUID(GUID.decode(bin, offset));\n    }\n    /**\n     * Decode GUID in format like \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @param objectId Binary GUID\n     * @param offset Read offset in bytes, default 0\n     * @returns GUID as dashed hexadecimal representation\n     */\n    static decode(objectId, offset = 0) {\n        const view = new DataView(objectId.buffer, offset);\n        const guid = `${view.getUint32(0, true).toString(16)}-${view.getUint16(4, true).toString(16)}-${view.getUint16(6, true).toString(16)}-${view.getUint16(8).toString(16)}-${uint8ArrayToHex(objectId.subarray(offset + 10, offset + 16))}`;\n        return guid.toUpperCase();\n    }\n    /**\n     * Decode stream type\n     * @param mediaType Media type GUID\n     * @returns Media type\n     */\n    static decodeMediaType(mediaType) {\n        switch (mediaType.str) {\n            case GUID.AudioMedia.str: return 'audio';\n            case GUID.VideoMedia.str: return 'video';\n            case GUID.CommandMedia.str: return 'command';\n            case GUID.Degradable_JPEG_Media.str: return 'degradable-jpeg';\n            case GUID.FileTransferMedia.str: return 'file-transfer';\n            case GUID.BinaryMedia.str: return 'binary';\n        }\n    }\n    /**\n     * Encode GUID\n     * @param guid GUID like: \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @returns Encoded Binary GUID\n     */\n    static encode(str) {\n        const bin = new Uint8Array(16);\n        const view = new DataView(bin.buffer);\n        view.setUint32(0, Number.parseInt(str.substring(0, 8), 16), true);\n        view.setUint16(4, Number.parseInt(str.substring(9, 13), 16), true);\n        view.setUint16(6, Number.parseInt(str.substring(14, 18), 16), true);\n        bin.set(hexToUint8Array(str.substring(19, 23)), 8);\n        bin.set(hexToUint8Array(str.substring(24)), 10);\n        return bin;\n    }\n    constructor(str) {\n        this.str = str;\n    }\n    equals(guid) {\n        return this.str === guid.str;\n    }\n    toBin() {\n        return GUID.encode(this.str);\n    }\n}\n// 10.1 Top-level ASF object GUIDs\nGUID.HeaderObject = new GUID(\"75B22630-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.DataObject = new GUID(\"75B22636-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.SimpleIndexObject = new GUID(\"33000890-E5B1-11CF-89F4-00A0C90349CB\");\nGUID.IndexObject = new GUID(\"D6E229D3-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexObject = new GUID(\"FEB103F8-12AD-4C64-840F-2A1D2F7AD48C\");\nGUID.TimecodeIndexObject = new GUID(\"3CB73FD0-0C4A-4803-953D-EDF7B6228F0C\");\n// 10.2 Header Object GUIDs\nGUID.FilePropertiesObject = new GUID(\"8CABDCA1-A947-11CF-8EE4-00C00C205365\");\nGUID.StreamPropertiesObject = new GUID(\"B7DC0791-A9B7-11CF-8EE6-00C00C205365\");\nGUID.HeaderExtensionObject = new GUID(\"5FBF03B5-A92E-11CF-8EE3-00C00C205365\");\nGUID.CodecListObject = new GUID(\"86D15240-311D-11D0-A3A4-00A0C90348F6\");\nGUID.ScriptCommandObject = new GUID(\"1EFB1A30-0B62-11D0-A39B-00A0C90348F6\");\nGUID.MarkerObject = new GUID(\"F487CD01-A951-11CF-8EE6-00C00C205365\");\nGUID.BitrateMutualExclusionObject = new GUID(\"D6E229DC-35DA-11D1-9034-00A0C90349BE\");\nGUID.ErrorCorrectionObject = new GUID(\"75B22635-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ContentDescriptionObject = new GUID(\"75B22633-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ExtendedContentDescriptionObject = new GUID(\"D2D0A440-E307-11D2-97F0-00A0C95EA850\");\nGUID.ContentBrandingObject = new GUID(\"2211B3FA-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.StreamBitratePropertiesObject = new GUID(\"7BF875CE-468D-11D1-8D82-006097C9A2B2\");\nGUID.ContentEncryptionObject = new GUID(\"2211B3FB-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.ExtendedContentEncryptionObject = new GUID(\"298AE614-2622-4C17-B935-DAE07EE9289C\");\nGUID.DigitalSignatureObject = new GUID(\"2211B3FC-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.PaddingObject = new GUID(\"1806D474-CADF-4509-A4BA-9AABCB96AAE8\");\n// 10.3 Header Extension Object GUIDs\nGUID.ExtendedStreamPropertiesObject = new GUID(\"14E6A5CB-C672-4332-8399-A96952065B5A\");\nGUID.AdvancedMutualExclusionObject = new GUID(\"A08649CF-4775-4670-8A16-6E35357566CD\");\nGUID.GroupMutualExclusionObject = new GUID(\"D1465A40-5A79-4338-B71B-E36B8FD6C249\");\nGUID.StreamPrioritizationObject = new GUID(\"D4FED15B-88D3-454F-81F0-ED5C45999E24\");\nGUID.BandwidthSharingObject = new GUID(\"A69609E6-517B-11D2-B6AF-00C04FD908E9\");\nGUID.LanguageListObject = new GUID(\"7C4346A9-EFE0-4BFC-B229-393EDE415C85\");\nGUID.MetadataObject = new GUID(\"C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA\");\nGUID.MetadataLibraryObject = new GUID(\"44231C94-9498-49D1-A141-1D134E457054\");\nGUID.IndexParametersObject = new GUID(\"D6E229DF-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexParametersObject = new GUID(\"6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7\");\nGUID.TimecodeIndexParametersObject = new GUID(\"F55E496D-9797-4B5D-8C8B-604DFE9BFB24\");\nGUID.CompatibilityObject = new GUID(\"26F18B5D-4584-47EC-9F5F-0E651F0452C9\");\nGUID.AdvancedContentEncryptionObject = new GUID(\"43058533-6981-49E6-9B74-AD12CB86D58C\");\n// 10.4 Stream Properties Object Stream Type GUIDs\nGUID.AudioMedia = new GUID(\"F8699E40-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.VideoMedia = new GUID(\"BC19EFC0-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.CommandMedia = new GUID(\"59DACFC0-59E6-11D0-A3AC-00A0C90348F6\");\nGUID.JFIF_Media = new GUID(\"B61BE100-5B4E-11CF-A8FD-00805F5C442B\");\nGUID.Degradable_JPEG_Media = new GUID(\"35907DE0-E415-11CF-A917-00805F5C442B\");\nGUID.FileTransferMedia = new GUID(\"91BD222C-F21C-497A-8B6D-5AA86BFC0185\");\nGUID.BinaryMedia = new GUID(\"3AFB65E2-47EF-40F2-AC2C-70A90D71D343\");\nGUID.ASF_Index_Placeholder_Object = new GUID(\"D9AADE20-7C17-4F9C-BC28-8555DD98E2A2\");\nexport default GUID;\n", "import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nexport function getParserForAttr(i) {\n    return attributeParsers[i];\n}\nexport function parseUnicodeAttr(uint8Array) {\n    return util.stripNulls(util.decodeString(uint8Array, 'utf-16le'));\n}\nconst attributeParsers = [\n    parseUnicodeAttr,\n    parseByteArrayAttr,\n    parseBoolAttr,\n    parseDWordAttr,\n    parseQWordAttr,\n    parseWordAttr,\n    parseByteArrayAttr\n];\nfunction parseByteArrayAttr(buf) {\n    return new Uint8Array(buf);\n}\nfunction parseBoolAttr(buf, offset = 0) {\n    return parseWordAttr(buf, offset) === 1;\n}\nfunction parseDWordAttr(buf, offset = 0) {\n    return Token.UINT32_LE.get(buf, offset);\n}\nfunction parseQWordAttr(buf, offset = 0) {\n    return Token.UINT64_LE.get(buf, offset);\n}\nfunction parseWordAttr(buf, offset = 0) {\n    return Token.UINT16_LE.get(buf, offset);\n}\n", "// ASF Objects\nimport * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport GUID from './GUID.js';\nimport { getParserForAttr, parseUnicodeAttr } from './AsfUtil.js';\nimport { AttachedPictureType } from '../id3v2/ID3v2Token.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class AsfContentParseError extends makeUnexpectedFileContentError('ASF') {\n}\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nexport const DataType = {\n    /**\n     * Unicode string. The data consists of a sequence of Unicode characters.\n     */\n    UnicodeString: 0,\n    /**\n     * BYTE array. The type of data is implementation-specific.\n     */\n    ByteArray: 1,\n    /**\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n     */\n    Bool: 2,\n    /**\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n     */\n    DWord: 3,\n    /**\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n     */\n    QWord: 4,\n    /**\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n     */\n    Word: 5\n};\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nexport const TopLevelHeaderObjectToken = {\n    len: 30,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16)),\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\n            // Reserved: 2 bytes\n        };\n    }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nexport const HeaderObjectToken = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16))\n        };\n    }\n};\nexport class State {\n    constructor(header) {\n        this.len = Number(header.objectSize) - HeaderObjectToken.len;\n    }\n    postProcessTag(tags, name, valueType, data) {\n        if (name === 'WM/Picture') {\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\n        }\n        else {\n            const parseAttr = getParserForAttr(valueType);\n            if (!parseAttr) {\n                throw new AsfContentParseError(`unexpected value headerType: ${valueType}`);\n            }\n            tags.push({ id: name, value: parseAttr(data) });\n        }\n    }\n}\n// ToDo: use ignore type\nexport class IgnoreObjectState extends State {\n    get(_buf, _off) {\n        return null;\n    }\n}\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nexport class FilePropertiesObject extends State {\n    get(buf, off) {\n        return {\n            fileId: GUID.fromBin(buf, off),\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\n            preroll: Token.UINT64_LE.get(buf, off + 56),\n            flags: {\n                broadcast: util.getBit(buf, off + 64, 24),\n                seekable: util.getBit(buf, off + 64, 25)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n        };\n    }\n}\nFilePropertiesObject.guid = GUID.FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nexport class StreamPropertiesObject extends State {\n    get(buf, off) {\n        return {\n            streamType: GUID.decodeMediaType(GUID.fromBin(buf, off)),\n            errorCorrectionType: GUID.fromBin(buf, off + 8)\n            // ToDo\n        };\n    }\n}\nStreamPropertiesObject.guid = GUID.StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nexport class HeaderExtensionObject {\n    constructor() {\n        this.len = 22;\n    }\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            reserved1: GUID.fromBin(buf, off),\n            reserved2: view.getUint16(16, true),\n            extensionDataSize: view.getUint16(18, true)\n        };\n    }\n}\nHeaderExtensionObject.guid = GUID.HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n    len: 20,\n    get: (buf, off) => {\n        const view = new DataView(buf.buffer, off);\n        return {\n            entryCount: view.getUint16(16, true)\n        };\n    }\n};\nasync function readString(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf-16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nexport async function readCodecEntries(tokenizer) {\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n    const entries = [];\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\n        entries.push(await readCodecEntry(tokenizer));\n    }\n    return entries;\n}\nasync function readInformation(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    const buf = new Uint8Array(length);\n    await tokenizer.readBuffer(buf);\n    return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\n    return {\n        type: {\n            videoCodec: (type & 0x0001) === 0x0001,\n            audioCodec: (type & 0x0002) === 0x0002\n        },\n        codecName: await readString(tokenizer),\n        description: await readString(tokenizer),\n        information: await readInformation(tokenizer)\n    };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nexport class ContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        let pos = 10;\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n            const length = view.getUint16(i * 2, true);\n            if (length > 0) {\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\n                const end = pos + length;\n                tags.push({ id: tagName, value: parseUnicodeAttr(buf.subarray(off + pos, off + end)) });\n                pos = end;\n            }\n        }\n        return tags;\n    }\n}\nContentDescriptionObjectState.guid = GUID.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nexport class ExtendedContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        const attrCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < attrCount; i += 1) {\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const name = parseUnicodeAttr(buf.subarray(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const valueType = view.getUint16(pos, true);\n            pos += 2;\n            const valueLen = view.getUint16(pos, true);\n            pos += 2;\n            const value = buf.subarray(off + pos, off + pos + valueLen);\n            pos += valueLen;\n            this.postProcessTag(tags, name, valueType, value);\n        }\n        return tags;\n    }\n}\nExtendedContentDescriptionObjectState.guid = GUID.ExtendedContentDescriptionObject;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nexport class ExtendedStreamPropertiesObjectState extends State {\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            startTime: Token.UINT64_LE.get(buf, off),\n            endTime: Token.UINT64_LE.get(buf, off + 8),\n            dataBitrate: view.getInt32(12, true),\n            bufferSize: view.getInt32(16, true),\n            initialBufferFullness: view.getInt32(20, true),\n            alternateDataBitrate: view.getInt32(24, true),\n            alternateBufferSize: view.getInt32(28, true),\n            alternateInitialBufferFullness: view.getInt32(32, true),\n            maximumObjectSize: view.getInt32(36, true),\n            flags: {\n                reliableFlag: util.getBit(buf, off + 40, 0),\n                seekableFlag: util.getBit(buf, off + 40, 1),\n                resendLiveCleanpointsFlag: util.getBit(buf, off + 40, 2)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            streamNumber: view.getInt16(42, true),\n            streamLanguageId: view.getInt16(44, true),\n            averageTimePerFrame: view.getInt32(52, true),\n            streamNameCount: view.getInt32(54, true),\n            payloadExtensionSystems: view.getInt32(56, true),\n            streamNames: [], // ToDo\n            streamPropertiesObject: null\n        };\n    }\n}\nExtendedStreamPropertiesObjectState.guid = GUID.ExtendedStreamPropertiesObject;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nexport class MetadataObjectState extends State {\n    get(uint8Array, off) {\n        const tags = [];\n        const view = new DataView(uint8Array.buffer, off);\n        const descriptionRecordsCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\n            pos += 4;\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const dataType = view.getUint16(pos, true);\n            pos += 2;\n            const dataLen = view.getUint32(pos, true);\n            pos += 4;\n            const name = parseUnicodeAttr(uint8Array.subarray(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const data = uint8Array.subarray(off + pos, off + pos + dataLen);\n            pos += dataLen;\n            this.postProcessTag(tags, name, dataType, data);\n        }\n        return tags;\n    }\n}\nMetadataObjectState.guid = GUID.MetadataObject;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nexport class MetadataLibraryObjectState extends MetadataObjectState {\n}\nMetadataLibraryObjectState.guid = GUID.MetadataLibraryObject;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nexport class WmPictureToken {\n    static fromBuffer(buffer) {\n        const pic = new WmPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const view = new DataView(buffer.buffer, offset);\n        const typeId = view.getUint8(0);\n        const size = view.getInt32(1, true);\n        let index = 5;\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const format = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const description = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        return {\n            type: AttachedPictureType[typeId],\n            format,\n            description,\n            size,\n            data: buffer.slice(index + 4)\n        };\n    }\n}\n", "import initDebug from 'debug';\nimport { TrackType } from '../type.js';\nimport GUID from './GUID.js';\nimport * as AsfObject from './AsfObject.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { AsfContentParseError } from './AsfObject.js';\nconst debug = initDebug('music-metadata:parser:ASF');\nconst headerType = 'asf';\n/**\n * Windows Media Metadata Usage Guidelines\n * - Ref: https://msdn.microsoft.com/en-us/library/ms867702.aspx\n *\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01\n * - https://hwiegman.home.xs4all.nl/fileformats/asf/ASF_Specification.pdf\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n */\nexport class AsfParser extends BasicParser {\n    async parse() {\n        const header = await this.tokenizer.readToken(AsfObject.TopLevelHeaderObjectToken);\n        if (!header.objectId.equals(GUID.HeaderObject)) {\n            throw new AsfContentParseError(`expected asf header; but was not found; got: ${header.objectId.str}`);\n        }\n        try {\n            await this.parseObjectHeader(header.numberOfHeaderObjects);\n        }\n        catch (err) {\n            debug('Error while parsing ASF: %s', err);\n        }\n    }\n    async parseObjectHeader(numberOfObjectHeaders) {\n        let tags;\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            // Parse data part of the ASF Object\n            debug('header GUID=%s', header.objectId.str);\n            switch (header.objectId.str) {\n                case AsfObject.FilePropertiesObject.guid.str: { // 3.2\n                    const fpo = await this.tokenizer.readToken(new AsfObject.FilePropertiesObject(header));\n                    this.metadata.setFormat('duration', Number(fpo.playDuration / BigInt(1000)) / 10000 - Number(fpo.preroll) / 1000);\n                    this.metadata.setFormat('bitrate', fpo.maximumBitrate);\n                    break;\n                }\n                case AsfObject.StreamPropertiesObject.guid.str: { // 3.3\n                    const spo = await this.tokenizer.readToken(new AsfObject.StreamPropertiesObject(header));\n                    this.metadata.setFormat('container', `ASF/${spo.streamType}`);\n                    break;\n                }\n                case AsfObject.HeaderExtensionObject.guid.str: { // 3.4\n                    const extHeader = await this.tokenizer.readToken(new AsfObject.HeaderExtensionObject());\n                    await this.parseExtensionObject(extHeader.extensionDataSize);\n                    break;\n                }\n                case AsfObject.ContentDescriptionObjectState.guid.str: // 3.10\n                    tags = await this.tokenizer.readToken(new AsfObject.ContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case AsfObject.ExtendedContentDescriptionObjectState.guid.str: // 3.11\n                    tags = await this.tokenizer.readToken(new AsfObject.ExtendedContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case GUID.CodecListObject.str: {\n                    const codecs = await AsfObject.readCodecEntries(this.tokenizer);\n                    codecs.forEach(codec => {\n                        this.metadata.addStreamInfo({\n                            type: codec.type.videoCodec ? TrackType.video : TrackType.audio,\n                            codecName: codec.codecName\n                        });\n                    });\n                    const audioCodecs = codecs.filter(codec => codec.type.audioCodec).map(codec => codec.codecName).join('/');\n                    this.metadata.setFormat('codec', audioCodecs);\n                    break;\n                }\n                case GUID.StreamBitratePropertiesObject.str:\n                    // ToDo?\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    debug('Padding: %s bytes', header.objectSize - AsfObject.HeaderObjectToken.len);\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    debug('Ignore ASF-Object-GUID: %s', header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n            }\n        } while (--numberOfObjectHeaders);\n        // done\n    }\n    async addTags(tags) {\n        await Promise.all(tags.map(({ id, value }) => this.metadata.addTag(headerType, id, value)));\n    }\n    async parseExtensionObject(extensionSize) {\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            const remaining = header.objectSize - AsfObject.HeaderObjectToken.len;\n            // Parse data part of the ASF Object\n            switch (header.objectId.str) {\n                case AsfObject.ExtendedStreamPropertiesObjectState.guid.str: // 4.1\n                    // ToDo: extended stream header properties are ignored\n                    await this.tokenizer.readToken(new AsfObject.ExtendedStreamPropertiesObjectState(header));\n                    break;\n                case AsfObject.MetadataObjectState.guid.str: { // 4.7\n                    const moTags = await this.tokenizer.readToken(new AsfObject.MetadataObjectState(header));\n                    await this.addTags(moTags);\n                    break;\n                }\n                case AsfObject.MetadataLibraryObjectState.guid.str: { // 4.8\n                    const mlTags = await this.tokenizer.readToken(new AsfObject.MetadataLibraryObjectState(header));\n                    await this.addTags(mlTags);\n                    break;\n                }\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.CompatibilityObject.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.ASF_Index_Placeholder_Object.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    // console.log(\"Ignore ASF-Object-GUID: %s\", header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n                    break;\n            }\n            extensionSize -= header.objectSize;\n        } while (extensionSize > 0);\n    }\n}\n", "import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\n/**\n * DSDIFF chunk header\n * The data-size encoding is deviating from EA-IFF 85\n * Ref: http://www.sonicstudio.com/pdf/dsd/DSDIFF_1.5_Spec.pdf\n */\nexport const ChunkHeader64 = {\n    len: 12,\n    get: (buf, off) => {\n        return {\n            // Group-ID\n            chunkID: FourCcToken.get(buf, off),\n            // Size\n            chunkSize: Token.INT64_BE.get(buf, off + 4)\n        };\n    }\n};\n", "import * as Token from 'token-types';\nimport initDebug from 'debug';\nimport * as strtok3 from 'strtok3';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { ID3v2Parser } from '../id3v2/ID3v2Parser.js';\nimport { ChunkHeader64 } from './DsdiffToken.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:aiff');\nexport class DsdiffContentParseError extends makeUnexpectedFileContentError('DSDIFF') {\n}\n/**\n * DSDIFF - Direct Stream Digital Interchange File Format (Phillips)\n *\n * Ref:\n * - http://www.sonicstudio.com/pdf/dsd/DSDIFF_1.5_Spec.pdf\n */\nexport class DsdiffParser extends BasicParser {\n    async parse() {\n        const header = await this.tokenizer.readToken(ChunkHeader64);\n        if (header.chunkID !== 'FRM8')\n            throw new DsdiffContentParseError('Unexpected chunk-ID');\n        this.metadata.setAudioOnly();\n        const type = (await this.tokenizer.readToken(FourCcToken)).trim();\n        switch (type) {\n            case 'DSD':\n                this.metadata.setFormat('container', `DSDIFF/${type}`);\n                this.metadata.setFormat('lossless', true);\n                return this.readFmt8Chunks(header.chunkSize - BigInt(FourCcToken.len));\n            default:\n                throw new DsdiffContentParseError(`Unsupported DSDIFF type: ${type}`);\n        }\n    }\n    async readFmt8Chunks(remainingSize) {\n        while (remainingSize >= ChunkHeader64.len) {\n            const chunkHeader = await this.tokenizer.readToken(ChunkHeader64);\n            //  If the data is an odd number of bytes in length, a pad byte must be added at the end\n            debug(`Chunk id=${chunkHeader.chunkID}`);\n            await this.readData(chunkHeader);\n            remainingSize -= (BigInt(ChunkHeader64.len) + chunkHeader.chunkSize);\n        }\n    }\n    async readData(header) {\n        debug(`Reading data of chunk[ID=${header.chunkID}, size=${header.chunkSize}]`);\n        const p0 = this.tokenizer.position;\n        switch (header.chunkID.trim()) {\n            case 'FVER': { // 3.1 FORMAT VERSION CHUNK\n                const version = await this.tokenizer.readToken(Token.UINT32_LE);\n                debug(`DSDIFF version=${version}`);\n                break;\n            }\n            case 'PROP': { // 3.2 PROPERTY CHUNK\n                const propType = await this.tokenizer.readToken(FourCcToken);\n                if (propType !== 'SND ')\n                    throw new DsdiffContentParseError('Unexpected PROP-chunk ID');\n                await this.handleSoundPropertyChunks(header.chunkSize - BigInt(FourCcToken.len));\n                break;\n            }\n            case 'ID3': { // Unofficial ID3 tag support\n                const id3_data = await this.tokenizer.readToken(new Token.Uint8ArrayType(Number(header.chunkSize)));\n                const rst = strtok3.fromBuffer(id3_data);\n                await new ID3v2Parser().parse(this.metadata, rst, this.options);\n                break;\n            }\n            case 'DSD':\n                if (this.metadata.format.numberOfChannels) {\n                    this.metadata.setFormat('numberOfSamples', Number(header.chunkSize * BigInt(8) / BigInt(this.metadata.format.numberOfChannels)));\n                }\n                if (this.metadata.format.numberOfSamples && this.metadata.format.sampleRate) {\n                    this.metadata.setFormat('duration', this.metadata.format.numberOfSamples / this.metadata.format.sampleRate);\n                }\n                break;\n            default:\n                debug(`Ignore chunk[ID=${header.chunkID}, size=${header.chunkSize}]`);\n                break;\n        }\n        const remaining = header.chunkSize - BigInt(this.tokenizer.position - p0);\n        if (remaining > 0) {\n            debug(`After Parsing chunk, remaining ${remaining} bytes`);\n            await this.tokenizer.ignore(Number(remaining));\n        }\n    }\n    async handleSoundPropertyChunks(remainingSize) {\n        debug(`Parsing sound-property-chunks, remainingSize=${remainingSize}`);\n        while (remainingSize > 0) {\n            const sndPropHeader = await this.tokenizer.readToken(ChunkHeader64);\n            debug(`Sound-property-chunk[ID=${sndPropHeader.chunkID}, size=${sndPropHeader.chunkSize}]`);\n            const p0 = this.tokenizer.position;\n            switch (sndPropHeader.chunkID.trim()) {\n                case 'FS': { // 3.2.1 Sample Rate Chunk\n                    const sampleRate = await this.tokenizer.readToken(Token.UINT32_BE);\n                    this.metadata.setFormat('sampleRate', sampleRate);\n                    break;\n                }\n                case 'CHNL': { // 3.2.2 Channels Chunk\n                    const numChannels = await this.tokenizer.readToken(Token.UINT16_BE);\n                    this.metadata.setFormat('numberOfChannels', numChannels);\n                    await this.handleChannelChunks(sndPropHeader.chunkSize - BigInt(Token.UINT16_BE.len));\n                    break;\n                }\n                case 'CMPR': { // 3.2.3 Compression Type Chunk\n                    const compressionIdCode = (await this.tokenizer.readToken(FourCcToken)).trim();\n                    const count = await this.tokenizer.readToken(Token.UINT8);\n                    const compressionName = await this.tokenizer.readToken(new Token.StringType(count, 'ascii'));\n                    if (compressionIdCode === 'DSD') {\n                        this.metadata.setFormat('lossless', true);\n                        this.metadata.setFormat('bitsPerSample', 1);\n                    }\n                    this.metadata.setFormat('codec', `${compressionIdCode} (${compressionName})`);\n                    break;\n                }\n                case 'ABSS': { // 3.2.4 Absolute Start Time Chunk\n                    const hours = await this.tokenizer.readToken(Token.UINT16_BE);\n                    const minutes = await this.tokenizer.readToken(Token.UINT8);\n                    const seconds = await this.tokenizer.readToken(Token.UINT8);\n                    const samples = await this.tokenizer.readToken(Token.UINT32_BE);\n                    debug(`ABSS ${hours}:${minutes}:${seconds}.${samples}`);\n                    break;\n                }\n                case 'LSCO': { // 3.2.5 Loudspeaker Configuration Chunk\n                    const lsConfig = await this.tokenizer.readToken(Token.UINT16_BE);\n                    debug(`LSCO lsConfig=${lsConfig}`);\n                    break;\n                }\n                default:\n                    debug(`Unknown sound-property-chunk[ID=${sndPropHeader.chunkID}, size=${sndPropHeader.chunkSize}]`);\n                    await this.tokenizer.ignore(Number(sndPropHeader.chunkSize));\n            }\n            const remaining = sndPropHeader.chunkSize - BigInt(this.tokenizer.position - p0);\n            if (remaining > 0) {\n                debug(`After Parsing sound-property-chunk ${sndPropHeader.chunkSize}, remaining ${remaining} bytes`);\n                await this.tokenizer.ignore(Number(remaining));\n            }\n            remainingSize -= BigInt(ChunkHeader64.len) + sndPropHeader.chunkSize;\n            debug(`Parsing sound-property-chunks, remainingSize=${remainingSize}`);\n        }\n        if (this.metadata.format.lossless && this.metadata.format.sampleRate && this.metadata.format.numberOfChannels && this.metadata.format.bitsPerSample) {\n            const bitrate = this.metadata.format.sampleRate * this.metadata.format.numberOfChannels * this.metadata.format.bitsPerSample;\n            this.metadata.setFormat('bitrate', bitrate);\n        }\n    }\n    async handleChannelChunks(remainingSize) {\n        debug(`Parsing channel-chunks, remainingSize=${remainingSize}`);\n        const channels = [];\n        while (remainingSize >= FourCcToken.len) {\n            const channelId = await this.tokenizer.readToken(FourCcToken);\n            debug(`Channel[ID=${channelId}]`);\n            channels.push(channelId);\n            remainingSize -= BigInt(FourCcToken.len);\n        }\n        debug(`Channels: ${channels.join(', ')}`);\n        return channels;\n    }\n}\n", "import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nexport const compressionTypes = {\n    NONE: 'not compressed\tPCM\tApple Computer',\n    sowt: 'PCM (byte swapped)',\n    fl32: '32-bit floating point IEEE 32-bit float',\n    fl64: '64-bit floating point IEEE 64-bit float\tApple Computer',\n    alaw: 'ALaw 2:1\t8-bit ITU-T G.711 A-law',\n    ulaw: '\u00B5Law 2:1\t8-bit ITU-T G.711 \u00B5-law\tApple Computer',\n    ULAW: 'CCITT G.711 u-law 8-bit ITU-T G.711 \u00B5-law',\n    ALAW: 'CCITT G.711 A-law 8-bit ITU-T G.711 A-law',\n    FL32: 'Float 32\tIEEE 32-bit float '\n};\nexport class AiffContentError extends makeUnexpectedFileContentError('AIFF') {\n}\nexport class Common {\n    constructor(header, isAifc) {\n        this.isAifc = isAifc;\n        const minimumChunkSize = isAifc ? 22 : 18;\n        if (header.chunkSize < minimumChunkSize)\n            throw new AiffContentError(`COMMON CHUNK size should always be at least ${minimumChunkSize}`);\n        this.len = header.chunkSize;\n    }\n    get(buf, off) {\n        // see: https://cycling74.com/forums/aiffs-80-bit-sample-rate-value\n        const shift = Token.UINT16_BE.get(buf, off + 8) - 16398;\n        const baseSampleRate = Token.UINT16_BE.get(buf, off + 8 + 2);\n        const res = {\n            numChannels: Token.UINT16_BE.get(buf, off),\n            numSampleFrames: Token.UINT32_BE.get(buf, off + 2),\n            sampleSize: Token.UINT16_BE.get(buf, off + 6),\n            sampleRate: shift < 0 ? baseSampleRate >> Math.abs(shift) : baseSampleRate << shift\n        };\n        if (this.isAifc) {\n            res.compressionType = FourCcToken.get(buf, off + 18);\n            if (this.len > 22) {\n                const strLen = Token.UINT8.get(buf, off + 22);\n                if (strLen > 0) {\n                    const padding = (strLen + 1) % 2;\n                    if (23 + strLen + padding === this.len) {\n                        res.compressionName = new Token.StringType(strLen, 'latin1').get(buf, off + 23);\n                    }\n                    else {\n                        throw new AiffContentError('Illegal pstring length');\n                    }\n                }\n                else {\n                    res.compressionName = undefined;\n                }\n            }\n        }\n        else {\n            res.compressionName = 'PCM';\n        }\n        return res;\n    }\n}\n", "import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\n/**\n * Common AIFF chunk header\n */\nexport const Header = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Chunk type ID\n            chunkID: FourCcToken.get(buf, off),\n            // Chunk size\n            chunkSize: Number(BigInt(Token.UINT32_BE.get(buf, off + 4)))\n        };\n    }\n};\n", "import * as Token from 'token-types';\nimport initDebug from 'debug';\nimport * as strtok3 from 'strtok3';\nimport { ID3v2Parser } from '../id3v2/ID3v2Parser.js';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport * as AiffToken from './AiffToken.js';\nimport { AiffContentError, compressionTypes } from './AiffToken.js';\nimport * as iff from '../iff/index.js';\nconst debug = initDebug('music-metadata:parser:aiff');\n/**\n * AIFF - Audio Interchange File Format\n *\n * Ref:\n * - http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/AIFF/AIFF.html\n * - http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/AIFF/Docs/AIFF-1.3.pdf\n */\nexport class AIFFParser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.isCompressed = null;\n    }\n    async parse() {\n        const header = await this.tokenizer.readToken(iff.Header);\n        if (header.chunkID !== 'FORM')\n            throw new AiffContentError('Invalid Chunk-ID, expected \\'FORM\\''); // Not AIFF format\n        const type = await this.tokenizer.readToken(FourCcToken);\n        switch (type) {\n            case 'AIFF':\n                this.metadata.setFormat('container', type);\n                this.isCompressed = false;\n                break;\n            case 'AIFC':\n                this.metadata.setFormat('container', 'AIFF-C');\n                this.isCompressed = true;\n                break;\n            default:\n                throw new AiffContentError(`Unsupported AIFF type: ${type}`);\n        }\n        this.metadata.setFormat('lossless', !this.isCompressed);\n        this.metadata.setAudioOnly();\n        try {\n            while (!this.tokenizer.fileInfo.size || this.tokenizer.fileInfo.size - this.tokenizer.position >= iff.Header.len) {\n                debug(`Reading AIFF chunk at offset=${this.tokenizer.position}`);\n                const chunkHeader = await this.tokenizer.readToken(iff.Header);\n                const nextChunk = 2 * Math.round(chunkHeader.chunkSize / 2);\n                const bytesRead = await this.readData(chunkHeader);\n                await this.tokenizer.ignore(nextChunk - bytesRead);\n            }\n        }\n        catch (err) {\n            if (err instanceof strtok3.EndOfStreamError) {\n                debug(\"End-of-stream\");\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    async readData(header) {\n        switch (header.chunkID) {\n            case 'COMM': { // The Common Chunk\n                if (this.isCompressed === null) {\n                    throw new AiffContentError('Failed to parse AIFF.COMM chunk when compression type is unknown');\n                }\n                const common = await this.tokenizer.readToken(new AiffToken.Common(header, this.isCompressed));\n                this.metadata.setFormat('bitsPerSample', common.sampleSize);\n                this.metadata.setFormat('sampleRate', common.sampleRate);\n                this.metadata.setFormat('numberOfChannels', common.numChannels);\n                this.metadata.setFormat('numberOfSamples', common.numSampleFrames);\n                this.metadata.setFormat('duration', common.numSampleFrames / common.sampleRate);\n                if (common.compressionName || common.compressionType) {\n                    this.metadata.setFormat('codec', common.compressionName ?? compressionTypes[common.compressionType]);\n                }\n                return header.chunkSize;\n            }\n            case 'ID3 ': { // ID3-meta-data\n                const id3_data = await this.tokenizer.readToken(new Token.Uint8ArrayType(header.chunkSize));\n                const rst = strtok3.fromBuffer(id3_data);\n                await new ID3v2Parser().parse(this.metadata, rst, this.options);\n                return header.chunkSize;\n            }\n            case 'SSND': // Sound Data Chunk\n                if (this.metadata.format.duration) {\n                    this.metadata.setFormat('bitrate', 8 * header.chunkSize / this.metadata.format.duration);\n                }\n                return 0;\n            case 'NAME': // Sample name chunk\n            case 'AUTH': // Author chunk\n            case '(c) ': // Copyright chunk\n            case 'ANNO': // Annotation chunk\n                return this.readTextChunk(header);\n            default:\n                debug(`Ignore chunk id=${header.chunkID}, size=${header.chunkSize}`);\n                return 0;\n        }\n    }\n    async readTextChunk(header) {\n        const value = await this.tokenizer.readToken(new Token.StringType(header.chunkSize, 'ascii'));\n        const values = value.split('\\0').map(v => v.trim()).filter(v => v?.length);\n        await Promise.all(values.map(v => this.metadata.addTag('AIFF', header.chunkID, v)));\n        return header.chunkSize;\n    }\n}\n", "import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nexport const ChunkHeader = {\n    len: 12,\n    get: (buf, off) => {\n        return { id: FourCcToken.get(buf, off), size: Token.UINT64_LE.get(buf, off + 4) };\n    }\n};\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nexport const DsdChunk = {\n    len: 16,\n    get: (buf, off) => {\n        return {\n            fileSize: Token.INT64_LE.get(buf, off),\n            metadataPointer: Token.INT64_LE.get(buf, off + 8)\n        };\n    }\n};\nexport const ChannelType = {\n    mono: 1,\n    stereo: 2,\n    channels: 3,\n    quad: 4,\n    '4 channels': 5,\n    '5 channels': 6,\n    '5.1 channels': 7\n};\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nexport const FormatChunk = {\n    len: 40,\n    get: (buf, off) => {\n        return {\n            formatVersion: Token.INT32_LE.get(buf, off),\n            formatID: Token.INT32_LE.get(buf, off + 4),\n            channelType: Token.INT32_LE.get(buf, off + 8),\n            channelNum: Token.INT32_LE.get(buf, off + 12),\n            samplingFrequency: Token.INT32_LE.get(buf, off + 16),\n            bitsPerSample: Token.INT32_LE.get(buf, off + 20),\n            sampleCount: Token.INT64_LE.get(buf, off + 24),\n            blockSizePerChannel: Token.INT32_LE.get(buf, off + 32)\n        };\n    }\n};\n", "import initDebug from 'debug';\nimport { AbstractID3Parser } from '../id3v2/AbstractID3Parser.js';\nimport { ChunkHeader, DsdChunk, FormatChunk } from './DsfChunk.js';\nimport { ID3v2Parser } from \"../id3v2/ID3v2Parser.js\";\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:DSF');\nexport class DsdContentParseError extends makeUnexpectedFileContentError('DSD') {\n}\n/**\n * DSF (dsd stream file) File Parser\n * Ref: https://dsd-guide.com/sites/default/files/white-papers/DSFFileFormatSpec_E.pdf\n */\nexport class DsfParser extends AbstractID3Parser {\n    async postId3v2Parse() {\n        const p0 = this.tokenizer.position; // mark start position, normally 0\n        const chunkHeader = await this.tokenizer.readToken(ChunkHeader);\n        if (chunkHeader.id !== 'DSD ')\n            throw new DsdContentParseError('Invalid chunk signature');\n        this.metadata.setFormat('container', 'DSF');\n        this.metadata.setFormat('lossless', true);\n        this.metadata.setAudioOnly();\n        const dsdChunk = await this.tokenizer.readToken(DsdChunk);\n        if (dsdChunk.metadataPointer === BigInt(0)) {\n            debug(\"No ID3v2 tag present\");\n        }\n        else {\n            debug(`expect ID3v2 at offset=${dsdChunk.metadataPointer}`);\n            await this.parseChunks(dsdChunk.fileSize - chunkHeader.size);\n            // Jump to ID3 header\n            await this.tokenizer.ignore(Number(dsdChunk.metadataPointer) - this.tokenizer.position - p0);\n            return new ID3v2Parser().parse(this.metadata, this.tokenizer, this.options);\n        }\n    }\n    async parseChunks(bytesRemaining) {\n        while (bytesRemaining >= ChunkHeader.len) {\n            const chunkHeader = await this.tokenizer.readToken(ChunkHeader);\n            debug(`Parsing chunk name=${chunkHeader.id} size=${chunkHeader.size}`);\n            switch (chunkHeader.id) {\n                case 'fmt ': {\n                    const formatChunk = await this.tokenizer.readToken(FormatChunk);\n                    this.metadata.setFormat('numberOfChannels', formatChunk.channelNum);\n                    this.metadata.setFormat('sampleRate', formatChunk.samplingFrequency);\n                    this.metadata.setFormat('bitsPerSample', formatChunk.bitsPerSample);\n                    this.metadata.setFormat('numberOfSamples', formatChunk.sampleCount);\n                    this.metadata.setFormat('duration', Number(formatChunk.sampleCount) / formatChunk.samplingFrequency);\n                    const bitrate = formatChunk.bitsPerSample * formatChunk.samplingFrequency * formatChunk.channelNum;\n                    this.metadata.setFormat('bitrate', bitrate);\n                    return; // We got what we want, stop further processing of chunks\n                }\n                default:\n                    this.tokenizer.ignore(Number(chunkHeader.size) - ChunkHeader.len);\n                    break;\n            }\n            bytesRemaining -= chunkHeader.size;\n        }\n    }\n}\n", "import * as Token from 'token-types';\nimport { AttachedPictureType } from '../../id3v2/ID3v2Token.js';\n/**\n * Parse the METADATA_BLOCK_PICTURE\n * Ref: https://wiki.xiph.org/VorbisComment#METADATA_BLOCK_PICTURE\n * Ref: https://xiph.org/flac/format.html#metadata_block_picture\n * // ToDo: move to ID3 / APIC?\n */\nexport class VorbisPictureToken {\n    static fromBase64(base64str) {\n        return VorbisPictureToken.fromBuffer(Uint8Array.from(atob(base64str), c => c.charCodeAt(0)));\n    }\n    static fromBuffer(buffer) {\n        const pic = new VorbisPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const type = AttachedPictureType[Token.UINT32_BE.get(buffer, offset)];\n        offset += 4;\n        const mimeLen = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const format = new Token.StringType(mimeLen, 'utf-8').get(buffer, offset);\n        offset += mimeLen;\n        const descLen = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const description = new Token.StringType(descLen, 'utf-8').get(buffer, offset);\n        offset += descLen;\n        const width = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const height = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const colour_depth = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const indexed_color = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const picDataLen = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const data = buffer.slice(offset, offset + picDataLen);\n        return {\n            type,\n            format,\n            description,\n            width,\n            height,\n            colour_depth,\n            indexed_color,\n            data\n        };\n    }\n}\n/**\n * Comment header decoder\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-620004.2.1\n */\nexport const CommonHeader = {\n    len: 7,\n    get: (buf, off) => {\n        return {\n            packetType: Token.UINT8.get(buf, off),\n            vorbis: new Token.StringType(6, 'ascii').get(buf, off + 1)\n        };\n    }\n};\n/**\n * Identification header decoder\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-630004.2.2\n */\nexport const IdentificationHeader = {\n    len: 23,\n    get: (uint8Array, off) => {\n        return {\n            version: Token.UINT32_LE.get(uint8Array, off + 0),\n            channelMode: Token.UINT8.get(uint8Array, off + 4),\n            sampleRate: Token.UINT32_LE.get(uint8Array, off + 5),\n            bitrateMax: Token.UINT32_LE.get(uint8Array, off + 9),\n            bitrateNominal: Token.UINT32_LE.get(uint8Array, off + 13),\n            bitrateMin: Token.UINT32_LE.get(uint8Array, off + 17)\n        };\n    }\n};\n", "import * as Token from 'token-types';\nimport { textDecode } from '@borewit/text-codec';\nexport class VorbisDecoder {\n    constructor(data, offset) {\n        this.data = data;\n        this.offset = offset;\n    }\n    readInt32() {\n        const value = Token.UINT32_LE.get(this.data, this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readStringUtf8() {\n        const len = this.readInt32();\n        const value = textDecode(this.data.subarray(this.offset, this.offset + len), 'utf-8');\n        this.offset += len;\n        return value;\n    }\n    parseUserComment() {\n        const offset0 = this.offset;\n        const v = this.readStringUtf8();\n        const idx = v.indexOf('=');\n        return {\n            key: v.substring(0, idx).toUpperCase(),\n            value: v.substring(idx + 1),\n            len: this.offset - offset0\n        };\n    }\n}\n", "import * as Token from 'token-types';\nimport debugInit from 'debug';\nimport { VorbisDecoder } from './VorbisDecoder.js';\nimport { CommonHeader, IdentificationHeader, VorbisPictureToken } from './Vorbis.js';\nimport { makeUnexpectedFileContentError } from '../../ParseError.js';\nconst debug = debugInit('music-metadata:parser:ogg:vorbis1');\nexport class VorbisContentError extends makeUnexpectedFileContentError('Vorbis') {\n}\n/**\n * Vorbis 1 Parser.\n * Used by OggStream\n */\nexport class VorbisStream {\n    constructor(metadata, options) {\n        this.pageSegments = [];\n        this.durationOnLastPage = true;\n        this.metadata = metadata;\n        this.options = options;\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    async parsePage(header, pageData) {\n        this.lastPageHeader = header;\n        if (header.headerType.firstPage) {\n            this.parseFirstPage(header, pageData);\n        }\n        else {\n            if (header.headerType.continued) {\n                if (this.pageSegments.length === 0) {\n                    throw new VorbisContentError('Cannot continue on previous page');\n                }\n                this.pageSegments.push(pageData);\n            }\n            if (header.headerType.lastPage || !header.headerType.continued) {\n                // Flush page segments\n                if (this.pageSegments.length > 0) {\n                    const fullPage = VorbisStream.mergeUint8Arrays(this.pageSegments);\n                    await this.parseFullPage(fullPage);\n                }\n                // Reset page segments\n                this.pageSegments = header.headerType.lastPage ? [] : [pageData];\n            }\n        }\n    }\n    static mergeUint8Arrays(arrays) {\n        const totalSize = arrays.reduce((acc, e) => acc + e.length, 0);\n        const merged = new Uint8Array(totalSize);\n        arrays.forEach((array, i, _arrays) => {\n            const offset = _arrays.slice(0, i).reduce((acc, e) => acc + e.length, 0);\n            merged.set(array, offset);\n        });\n        return merged;\n    }\n    async flush() {\n        await this.parseFullPage(VorbisStream.mergeUint8Arrays(this.pageSegments));\n    }\n    async parseUserComment(pageData, offset) {\n        const decoder = new VorbisDecoder(pageData, offset);\n        const tag = decoder.parseUserComment();\n        await this.addTag(tag.key, tag.value);\n        return tag.len;\n    }\n    async addTag(id, value) {\n        if (id === 'METADATA_BLOCK_PICTURE' && (typeof value === 'string')) {\n            if (this.options.skipCovers) {\n                debug(\"Ignore picture\");\n                return;\n            }\n            value = VorbisPictureToken.fromBase64(value);\n            debug(`Push picture: id=${id}, format=${value.format}`);\n        }\n        else {\n            debug(`Push tag: id=${id}, value=${value}`);\n        }\n        await this.metadata.addTag('vorbis', id, value);\n    }\n    calculateDuration() {\n        if (this.lastPageHeader && this.metadata.format.sampleRate && this.lastPageHeader.absoluteGranulePosition >= 0) {\n            // Calculate duration\n            this.metadata.setFormat('numberOfSamples', this.lastPageHeader.absoluteGranulePosition);\n            this.metadata.setFormat('duration', this.lastPageHeader.absoluteGranulePosition / this.metadata.format.sampleRate);\n        }\n    }\n    /**\n     * Parse first Ogg/Vorbis page\n     * @param _header\n     * @param pageData\n     */\n    parseFirstPage(_header, pageData) {\n        this.metadata.setFormat('codec', 'Vorbis I');\n        this.metadata.setFormat('hasAudio', true);\n        debug('Parse first page');\n        // Parse  Vorbis common header\n        const commonHeader = CommonHeader.get(pageData, 0);\n        if (commonHeader.vorbis !== 'vorbis')\n            throw new VorbisContentError('Metadata does not look like Vorbis');\n        if (commonHeader.packetType === 1) {\n            const idHeader = IdentificationHeader.get(pageData, CommonHeader.len);\n            this.metadata.setFormat('sampleRate', idHeader.sampleRate);\n            this.metadata.setFormat('bitrate', idHeader.bitrateNominal);\n            this.metadata.setFormat('numberOfChannels', idHeader.channelMode);\n            debug('sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s', idHeader.sampleRate, idHeader.bitrateNominal, idHeader.channelMode);\n        }\n        else\n            throw new VorbisContentError('First Ogg page should be type 1: the identification header');\n    }\n    async parseFullPage(pageData) {\n        // New page\n        const commonHeader = CommonHeader.get(pageData, 0);\n        debug('Parse full page: type=%s, byteLength=%s', commonHeader.packetType, pageData.byteLength);\n        switch (commonHeader.packetType) {\n            case 3: //  type 3: comment header\n                return this.parseUserCommentList(pageData, CommonHeader.len);\n            case 1: // type 1: the identification header\n            case 5: // type 5: setup header type\n                break; // ignore\n        }\n    }\n    /**\n     * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-840005.2\n     */\n    async parseUserCommentList(pageData, offset) {\n        const strLen = Token.UINT32_LE.get(pageData, offset);\n        offset += 4;\n        // const vendorString = new Token.StringType(strLen, 'utf-8').get(pageData, offset);\n        offset += strLen;\n        let userCommentListLength = Token.UINT32_LE.get(pageData, offset);\n        offset += 4;\n        while (userCommentListLength-- > 0) {\n            offset += (await this.parseUserComment(pageData, offset));\n        }\n    }\n}\n", "import * as util from '../common/Util.js';\nimport { UINT16_BE, UINT24_BE, Uint8ArrayType } from 'token-types';\n/**\n * FLAC supports up to 128 kinds of metadata blocks; currently the following are defined:\n * ref: https://xiph.org/flac/format.html#metadata_block\n */\nexport const BlockType = {\n    STREAMINFO: 0, // STREAMINFO\n    PADDING: 1, // PADDING\n    APPLICATION: 2, // APPLICATION\n    SEEKTABLE: 3, // SEEKTABLE\n    VORBIS_COMMENT: 4, // VORBIS_COMMENT\n    CUESHEET: 5, // CUESHEET\n    PICTURE: 6 // PICTURE\n};\nexport const BlockHeader = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            lastBlock: util.getBit(buf, off, 7),\n            type: util.getBitAllignedNumber(buf, off, 1, 7),\n            length: UINT24_BE.get(buf, off + 1)\n        };\n    }\n};\n/**\n * METADATA_BLOCK_DATA\n * Ref: https://xiph.org/flac/format.html#metadata_block_streaminfo\n */\nexport const BlockStreamInfo = {\n    len: 34,\n    get: (buf, off) => {\n        return {\n            // The minimum block size (in samples) used in the stream.\n            minimumBlockSize: UINT16_BE.get(buf, off),\n            // The maximum block size (in samples) used in the stream.\n            // (Minimum blocksize == maximum blocksize) implies a fixed-blocksize stream.\n            maximumBlockSize: UINT16_BE.get(buf, off + 2) / 1000,\n            // The minimum frame size (in bytes) used in the stream.\n            // May be 0 to imply the value is not known.\n            minimumFrameSize: UINT24_BE.get(buf, off + 4),\n            // The maximum frame size (in bytes) used in the stream.\n            // May be 0 to imply the value is not known.\n            maximumFrameSize: UINT24_BE.get(buf, off + 7),\n            // Sample rate in Hz. Though 20 bits are available,\n            // the maximum sample rate is limited by the structure of frame headers to 655350Hz.\n            // Also, a value of 0 is invalid.\n            sampleRate: UINT24_BE.get(buf, off + 10) >> 4,\n            // probably slower: sampleRate: common.getBitAllignedNumber(buf, off + 10, 0, 20),\n            // (number of channels)-1. FLAC supports from 1 to 8 channels\n            channels: util.getBitAllignedNumber(buf, off + 12, 4, 3) + 1,\n            // bits per sample)-1.\n            // FLAC supports from 4 to 32 bits per sample. Currently the reference encoder and decoders only support up to 24 bits per sample.\n            bitsPerSample: util.getBitAllignedNumber(buf, off + 12, 7, 5) + 1,\n            // Total samples in stream.\n            // 'Samples' means inter-channel sample, i.e. one second of 44.1Khz audio will have 44100 samples regardless of the number of channels.\n            // A value of zero here means the number of total samples is unknown.\n            totalSamples: util.getBitAllignedNumber(buf, off + 13, 4, 36),\n            // the MD5 hash of the file (see notes for usage... it's a littly tricky)\n            fileMD5: new Uint8ArrayType(16).get(buf, off + 18)\n        };\n    }\n};\n", "import initDebug from 'debug';\nimport { Uint8ArrayType } from 'token-types';\nimport { VorbisPictureToken } from '../ogg/vorbis/Vorbis.js';\nimport { AbstractID3Parser } from '../id3v2/AbstractID3Parser.js';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { VorbisStream } from '../ogg/vorbis/VorbisStream.js';\nimport { VorbisDecoder } from '../ogg/vorbis/VorbisDecoder.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nimport * as Flac from './FlacToken.js';\nconst debug = initDebug('music-metadata:parser:FLAC');\nclass FlacContentError extends makeUnexpectedFileContentError('FLAC') {\n}\nexport class FlacParser extends AbstractID3Parser {\n    constructor() {\n        super(...arguments);\n        this.vorbisParser = new VorbisStream(this.metadata, this.options);\n        this.padding = 0;\n    }\n    async postId3v2Parse() {\n        const fourCC = await this.tokenizer.readToken(FourCcToken);\n        if (fourCC.toString() !== 'fLaC') {\n            throw new FlacContentError('Invalid FLAC preamble');\n        }\n        let blockHeader;\n        do {\n            // Read block header\n            blockHeader = await this.tokenizer.readToken(Flac.BlockHeader);\n            // Parse block data\n            await this.parseDataBlock(blockHeader);\n        } while (!blockHeader.lastBlock);\n        if (this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n            const dataSize = this.tokenizer.fileInfo.size - this.tokenizer.position;\n            this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n        }\n    }\n    async parseDataBlock(blockHeader) {\n        debug(`blockHeader type=${blockHeader.type}, length=${blockHeader.length}`);\n        switch (blockHeader.type) {\n            case Flac.BlockType.STREAMINFO:\n                return this.readBlockStreamInfo(blockHeader.length);\n            case Flac.BlockType.PADDING:\n                this.padding += blockHeader.length;\n                break;\n            case Flac.BlockType.APPLICATION:\n                break;\n            case Flac.BlockType.SEEKTABLE:\n                break;\n            case Flac.BlockType.VORBIS_COMMENT:\n                return this.readComment(blockHeader.length);\n            case Flac.BlockType.CUESHEET:\n                break;\n            case Flac.BlockType.PICTURE:\n                await this.parsePicture(blockHeader.length);\n                return;\n            default:\n                this.metadata.addWarning(`Unknown block type: ${blockHeader.type}`);\n        }\n        // Ignore data block\n        return this.tokenizer.ignore(blockHeader.length).then();\n    }\n    /**\n     * Parse STREAMINFO\n     */\n    async readBlockStreamInfo(dataLen) {\n        if (dataLen !== Flac.BlockStreamInfo.len)\n            throw new FlacContentError('Unexpected block-stream-info length');\n        const streamInfo = await this.tokenizer.readToken(Flac.BlockStreamInfo);\n        this.metadata.setFormat('container', 'FLAC');\n        this.processsStreamInfo(streamInfo);\n    }\n    /**\n     * Parse STREAMINFO\n     */\n    processsStreamInfo(streamInfo) {\n        this.metadata.setFormat('codec', 'FLAC');\n        this.metadata.setFormat('hasAudio', true);\n        this.metadata.setFormat('lossless', true);\n        this.metadata.setFormat('numberOfChannels', streamInfo.channels);\n        this.metadata.setFormat('bitsPerSample', streamInfo.bitsPerSample);\n        this.metadata.setFormat('sampleRate', streamInfo.sampleRate);\n        if (streamInfo.totalSamples > 0) {\n            this.metadata.setFormat('duration', streamInfo.totalSamples / streamInfo.sampleRate);\n        }\n    }\n    /**\n     * Read VORBIS_COMMENT from tokenizer\n     * Ref: https://www.xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-640004.2.3\n     */\n    async readComment(dataLen) {\n        const data = await this.tokenizer.readToken(new Uint8ArrayType(dataLen));\n        return this.parseComment(data);\n    }\n    /**\n     * Parse VORBIS_COMMENT\n     * Ref: https://www.xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-640004.2.3\n     */\n    async parseComment(data) {\n        const decoder = new VorbisDecoder(data, 0);\n        const vendor = decoder.readStringUtf8();\n        if (vendor.length > 0) {\n            this.metadata.setFormat('tool', vendor);\n        }\n        const commentListLength = decoder.readInt32();\n        const tags = new Array(commentListLength);\n        for (let i = 0; i < commentListLength; i++) {\n            tags[i] = decoder.parseUserComment();\n        }\n        await Promise.all(tags.map(tag => {\n            if (tag.key === 'ENCODER') {\n                this.metadata.setFormat('tool', tag.value);\n            }\n            return this.addTag(tag.key, tag.value);\n        }));\n    }\n    async parsePicture(dataLen) {\n        if (this.options.skipCovers) {\n            return this.tokenizer.ignore(dataLen);\n        }\n        return this.addPictureTag(await this.tokenizer.readToken(new VorbisPictureToken(dataLen)));\n    }\n    addPictureTag(picture) {\n        return this.addTag('METADATA_BLOCK_PICTURE', picture);\n    }\n    addTag(id, value) {\n        return this.vorbisParser.addTag(id, value);\n    }\n}\n", "export const DataType = {\n    string: 0,\n    uint: 1,\n    uid: 2,\n    bool: 3,\n    binary: 4,\n    float: 5,\n};\n", "import { DataType } from '../ebml/types.js';\n/**\n * Elements of document type description\n * Derived from https://github.com/tungol/EBML/blob/master/doctypes/matroska.dtd\n * Extended with:\n * - https://www.matroska.org/technical/specs/index.html\n */\nexport const matroskaDtd = {\n    name: 'dtd',\n    container: {\n        0x1a45dfa3: {\n            name: 'ebml',\n            container: {\n                0x4286: { name: 'ebmlVersion', value: DataType.uint }, // 5.1.1\n                0x42f7: { name: 'ebmlReadVersion', value: DataType.uint }, // 5.1.2\n                0x42f2: { name: 'ebmlMaxIDWidth', value: DataType.uint }, // 5.1.3\n                0x42f3: { name: 'ebmlMaxSizeWidth', value: DataType.uint }, // 5.1.4\n                0x4282: { name: 'docType', value: DataType.string }, // 5.1.5\n                0x4287: { name: 'docTypeVersion', value: DataType.uint }, // 5.1.6\n                0x4285: { name: 'docTypeReadVersion', value: DataType.uint } // 5.1.7\n            }\n        },\n        // Matroska segments\n        0x18538067: {\n            name: 'segment',\n            container: {\n                // Meta Seek Information (also known as MetaSeek)\n                0x114d9b74: {\n                    name: 'seekHead',\n                    container: {\n                        0x4dbb: {\n                            name: 'seek',\n                            multiple: true,\n                            container: {\n                                0x53ab: { name: 'id', value: DataType.binary },\n                                0x53ac: { name: 'position', value: DataType.uint }\n                            }\n                        }\n                    }\n                },\n                // Segment Information\n                0x1549a966: {\n                    name: 'info',\n                    container: {\n                        0x73a4: { name: 'uid', value: DataType.uid },\n                        0x7384: { name: 'filename', value: DataType.string },\n                        0x3cb923: { name: 'prevUID', value: DataType.uid },\n                        0x3c83ab: { name: 'prevFilename', value: DataType.string },\n                        0x3eb923: { name: 'nextUID', value: DataType.uid },\n                        0x3e83bb: { name: 'nextFilename', value: DataType.string },\n                        0x2ad7b1: { name: 'timecodeScale', value: DataType.uint },\n                        0x4489: { name: 'duration', value: DataType.float },\n                        0x4461: { name: 'dateUTC', value: DataType.uint },\n                        0x7ba9: { name: 'title', value: DataType.string },\n                        0x4d80: { name: 'muxingApp', value: DataType.string },\n                        0x5741: { name: 'writingApp', value: DataType.string }\n                    }\n                },\n                // Cluster\n                0x1f43b675: {\n                    name: 'cluster',\n                    multiple: true,\n                    container: {\n                        0xe7: { name: 'timecode', value: DataType.uid },\n                        0x58d7: { name: 'silentTracks ', multiple: true },\n                        0xa7: { name: 'position', value: DataType.uid },\n                        0xab: { name: 'prevSize', value: DataType.uid },\n                        0xa0: { name: 'blockGroup' },\n                        0xa3: { name: 'simpleBlock' }\n                    }\n                },\n                // Track\n                0x1654ae6b: {\n                    name: 'tracks',\n                    container: {\n                        0xae: {\n                            name: 'entries',\n                            multiple: true,\n                            container: {\n                                0xd7: { name: 'trackNumber', value: DataType.uint },\n                                0x73c5: { name: 'uid', value: DataType.uid },\n                                0x83: { name: 'trackType', value: DataType.uint },\n                                0xb9: { name: 'flagEnabled', value: DataType.bool },\n                                0x88: { name: 'flagDefault', value: DataType.bool },\n                                0x55aa: { name: 'flagForced', value: DataType.bool }, // extended\n                                0x9c: { name: 'flagLacing', value: DataType.bool },\n                                0x6de7: { name: 'minCache', value: DataType.uint },\n                                0x6de8: { name: 'maxCache', value: DataType.uint },\n                                0x23e383: { name: 'defaultDuration', value: DataType.uint },\n                                0x23314f: { name: 'timecodeScale', value: DataType.float },\n                                0x536e: { name: 'name', value: DataType.string },\n                                0x22b59c: { name: 'language', value: DataType.string },\n                                0x86: { name: 'codecID', value: DataType.string },\n                                0x63a2: { name: 'codecPrivate', value: DataType.binary },\n                                0x258688: { name: 'codecName', value: DataType.string },\n                                0x3a9697: { name: 'codecSettings', value: DataType.string },\n                                0x3b4040: { name: 'codecInfoUrl', value: DataType.string },\n                                0x26b240: { name: 'codecDownloadUrl', value: DataType.string },\n                                0xaa: { name: 'codecDecodeAll', value: DataType.bool },\n                                0x6fab: { name: 'trackOverlay', value: DataType.uint },\n                                // Video\n                                0xe0: {\n                                    name: 'video',\n                                    container: {\n                                        0x9a: { name: 'flagInterlaced', value: DataType.bool },\n                                        0x53b8: { name: 'stereoMode', value: DataType.uint },\n                                        0xb0: { name: 'pixelWidth', value: DataType.uint },\n                                        0xba: { name: 'pixelHeight', value: DataType.uint },\n                                        0x54b0: { name: 'displayWidth', value: DataType.uint },\n                                        0x54ba: { name: 'displayHeight', value: DataType.uint },\n                                        0x54b3: { name: 'aspectRatioType', value: DataType.uint },\n                                        0x2eb524: { name: 'colourSpace', value: DataType.uint },\n                                        0x2fb523: { name: 'gammaValue', value: DataType.float }\n                                    }\n                                },\n                                // Audio\n                                0xe1: {\n                                    name: 'audio',\n                                    container: {\n                                        0xb5: { name: 'samplingFrequency', value: DataType.float },\n                                        0x78b5: { name: 'outputSamplingFrequency', value: DataType.float },\n                                        0x9f: { name: 'channels', value: DataType.uint }, // https://www.matroska.org/technical/specs/index.html\n                                        0x94: { name: 'channels', value: DataType.uint },\n                                        0x7d7b: { name: 'channelPositions', value: DataType.binary },\n                                        0x6264: { name: 'bitDepth', value: DataType.uint }\n                                    }\n                                },\n                                // Content Encoding\n                                0x6d80: {\n                                    name: 'contentEncodings',\n                                    container: {\n                                        0x6240: {\n                                            name: 'contentEncoding',\n                                            container: {\n                                                0x5031: { name: 'order', value: DataType.uint },\n                                                0x5032: { name: 'scope', value: DataType.bool },\n                                                0x5033: { name: 'type', value: DataType.uint },\n                                                0x5034: {\n                                                    name: 'contentEncoding',\n                                                    container: {\n                                                        0x4254: { name: 'contentCompAlgo', value: DataType.uint },\n                                                        0x4255: { name: 'contentCompSettings', value: DataType.binary }\n                                                    }\n                                                },\n                                                0x5035: {\n                                                    name: 'contentEncoding',\n                                                    container: {\n                                                        0x47e1: { name: 'contentEncAlgo', value: DataType.uint },\n                                                        0x47e2: { name: 'contentEncKeyID', value: DataType.binary },\n                                                        0x47e3: { name: 'contentSignature ', value: DataType.binary },\n                                                        0x47e4: { name: 'ContentSigKeyID  ', value: DataType.binary },\n                                                        0x47e5: { name: 'contentSigAlgo ', value: DataType.uint },\n                                                        0x47e6: { name: 'contentSigHashAlgo ', value: DataType.uint }\n                                                    }\n                                                },\n                                                0x6264: { name: 'bitDepth', value: DataType.uint }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Cueing Data\n                0x1c53bb6b: {\n                    name: 'cues',\n                    container: {\n                        0xbb: {\n                            name: 'cuePoint',\n                            container: {\n                                0xb3: { name: 'cueTime', value: DataType.uid },\n                                0xb7: {\n                                    name: 'positions',\n                                    container: {\n                                        0xf7: { name: 'track', value: DataType.uint },\n                                        0xf1: { name: 'clusterPosition', value: DataType.uint },\n                                        0x5378: { name: 'blockNumber', value: DataType.uint },\n                                        0xea: { name: 'codecState', value: DataType.uint },\n                                        0xdb: {\n                                            name: 'reference', container: {\n                                                0x96: { name: 'time', value: DataType.uint },\n                                                0x97: { name: 'cluster', value: DataType.uint },\n                                                0x535f: { name: 'number', value: DataType.uint },\n                                                0xeb: { name: 'codecState', value: DataType.uint }\n                                            }\n                                        },\n                                        0xf0: { name: 'relativePosition', value: DataType.uint } // extended\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Attachment\n                0x1941a469: {\n                    name: 'attachments',\n                    container: {\n                        0x61a7: {\n                            name: 'attachedFiles',\n                            multiple: true,\n                            container: {\n                                0x467e: { name: 'description', value: DataType.string },\n                                0x466e: { name: 'name', value: DataType.string },\n                                0x4660: { name: 'mimeType', value: DataType.string },\n                                0x465c: { name: 'data', value: DataType.binary },\n                                0x46ae: { name: 'uid', value: DataType.uid }\n                            }\n                        }\n                    }\n                },\n                // Chapters\n                0x1043a770: {\n                    name: 'chapters',\n                    container: {\n                        0x45b9: {\n                            name: 'editionEntry',\n                            container: {\n                                0xb6: {\n                                    name: 'chapterAtom',\n                                    container: {\n                                        0x73c4: { name: 'uid', value: DataType.uid },\n                                        0x91: { name: 'timeStart', value: DataType.uint },\n                                        0x92: { name: 'timeEnd', value: DataType.uid },\n                                        0x98: { name: 'hidden', value: DataType.bool },\n                                        0x4598: { name: 'enabled', value: DataType.uid },\n                                        0x8f: {\n                                            name: 'track', container: {\n                                                0x89: { name: 'trackNumber', value: DataType.uid },\n                                                0x80: {\n                                                    name: 'display', container: {\n                                                        0x85: { name: 'string', value: DataType.string },\n                                                        0x437c: { name: 'language ', value: DataType.string },\n                                                        0x437e: { name: 'country ', value: DataType.string }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Tagging\n                0x1254c367: {\n                    name: 'tags',\n                    container: {\n                        0x7373: {\n                            name: 'tag',\n                            multiple: true,\n                            container: {\n                                0x63c0: {\n                                    name: 'target',\n                                    container: {\n                                        0x63c5: { name: 'tagTrackUID', value: DataType.uid },\n                                        0x63c4: { name: 'tagChapterUID', value: DataType.uint },\n                                        0x63c6: { name: 'tagAttachmentUID', value: DataType.uid },\n                                        0x63ca: { name: 'targetType', value: DataType.string }, // extended\n                                        0x68ca: { name: 'targetTypeValue', value: DataType.uint }, // extended\n                                        0x63c9: { name: 'tagEditionUID', value: DataType.uid } // extended\n                                    }\n                                },\n                                0x67c8: {\n                                    name: 'simpleTags',\n                                    multiple: true,\n                                    container: {\n                                        0x45a3: { name: 'name', value: DataType.string },\n                                        0x4487: { name: 'string', value: DataType.string },\n                                        0x4485: { name: 'binary', value: DataType.binary },\n                                        0x447a: { name: 'language', value: DataType.string }, // extended\n                                        0x447b: { name: 'languageIETF', value: DataType.string }, // extended\n                                        0x4484: { name: 'default', value: DataType.bool } // extended\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n", "import { Float32_BE, Float64_BE, StringType, UINT8 } from 'token-types';\nimport initDebug from 'debug';\nimport { EndOfStreamError } from 'strtok3';\nimport { DataType } from './types.js';\nimport * as Token from 'token-types';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:ebml');\nexport class EbmlContentError extends makeUnexpectedFileContentError('EBML') {\n}\nexport const ParseAction = {\n    ReadNext: 0, // Continue reading the next elements\n    IgnoreElement: 2, // Ignore (do not read) this element\n    SkipSiblings: 3, // Skip all remaining elements at the same level\n    TerminateParsing: 4, // Terminate the parsing process\n    SkipElement: 5 // Consider the element has read, assume position is at the next element\n};\n/**\n * Extensible Binary Meta Language (EBML) iterator\n * https://en.wikipedia.org/wiki/Extensible_Binary_Meta_Language\n * http://matroska.sourceforge.net/technical/specs/rfc/index.html\n *\n * WEBM VP8 AUDIO FILE\n */\nexport class EbmlIterator {\n    /**\n     * @param {ITokenizer} tokenizer Input\n     * @param tokenizer\n     */\n    constructor(tokenizer) {\n        this.padding = 0;\n        this.parserMap = new Map();\n        this.ebmlMaxIDLength = 4;\n        this.ebmlMaxSizeLength = 8;\n        this.tokenizer = tokenizer;\n        this.parserMap.set(DataType.uint, e => this.readUint(e));\n        this.parserMap.set(DataType.string, e => this.readString(e));\n        this.parserMap.set(DataType.binary, e => this.readBuffer(e));\n        this.parserMap.set(DataType.uid, async (e) => this.readBuffer(e));\n        this.parserMap.set(DataType.bool, e => this.readFlag(e));\n        this.parserMap.set(DataType.float, e => this.readFloat(e));\n    }\n    async iterate(dtdElement, posDone, listener) {\n        return this.parseContainer(linkParents(dtdElement), posDone, listener);\n    }\n    async parseContainer(dtdElement, posDone, listener) {\n        const tree = {};\n        while (this.tokenizer.position < posDone) {\n            let element;\n            const elementPosition = this.tokenizer.position;\n            try {\n                element = await this.readElement();\n            }\n            catch (error) {\n                if (error instanceof EndOfStreamError) {\n                    break;\n                }\n                throw error;\n            }\n            const child = dtdElement.container[element.id];\n            if (child) {\n                const action = listener.startNext(child);\n                switch (action) {\n                    case ParseAction.ReadNext:\n                        {\n                            if (element.id === 0x1F43B675) {\n                                // Hack to ignore remaining segment, when cluster element received\n                                // await this.tokenizer.ignore(posDone - this.tokenizer.position);\n                                // break;\n                            }\n                            debug(`Read element: name=${getElementPath(child)}{id=0x${element.id.toString(16)}, container=${!!child.container}} at position=${elementPosition}`);\n                            if (child.container) {\n                                const res = await this.parseContainer(child, element.len >= 0 ? this.tokenizer.position + element.len : -1, listener);\n                                if (child.multiple) {\n                                    if (!tree[child.name]) {\n                                        tree[child.name] = [];\n                                    }\n                                    tree[child.name].push(res);\n                                }\n                                else {\n                                    tree[child.name] = res;\n                                }\n                                await listener.elementValue(child, res, elementPosition);\n                            }\n                            else {\n                                const parser = this.parserMap.get(child.value);\n                                if (typeof parser === 'function') {\n                                    const value = await parser(element);\n                                    tree[child.name] = value;\n                                    await listener.elementValue(child, value, elementPosition);\n                                }\n                            }\n                        }\n                        break;\n                    case ParseAction.SkipElement:\n                        debug(`Go to next element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        break;\n                    case ParseAction.IgnoreElement:\n                        debug(`Ignore element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        await this.tokenizer.ignore(element.len);\n                        break;\n                    case ParseAction.SkipSiblings:\n                        debug(`Ignore remaining container, at: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        await this.tokenizer.ignore(posDone - this.tokenizer.position);\n                        break;\n                    case ParseAction.TerminateParsing:\n                        debug(`Terminate parsing at element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        return tree;\n                }\n            }\n            else {\n                switch (element.id) {\n                    case 0xec: // void\n                        this.padding += element.len;\n                        await this.tokenizer.ignore(element.len);\n                        break;\n                    default:\n                        debug(`parseEbml: parent=${getElementPath(dtdElement)}, unknown child: id=${element.id.toString(16)} at position=${elementPosition}`);\n                        this.padding += element.len;\n                        await this.tokenizer.ignore(element.len);\n                }\n            }\n        }\n        return tree;\n    }\n    async readVintData(maxLength) {\n        const msb = await this.tokenizer.peekNumber(UINT8);\n        let mask = 0x80;\n        let oc = 1;\n        // Calculate VINT_WIDTH\n        while ((msb & mask) === 0) {\n            if (oc > maxLength) {\n                throw new EbmlContentError('VINT value exceeding maximum size');\n            }\n            ++oc;\n            mask >>= 1;\n        }\n        const id = new Uint8Array(oc);\n        await this.tokenizer.readBuffer(id);\n        return id;\n    }\n    async readElement() {\n        const id = await this.readVintData(this.ebmlMaxIDLength);\n        const lenField = await this.readVintData(this.ebmlMaxSizeLength);\n        lenField[0] ^= 0x80 >> (lenField.length - 1);\n        return {\n            id: readUIntBE(id, id.length),\n            len: readUIntBE(lenField, lenField.length)\n        };\n    }\n    async readFloat(e) {\n        switch (e.len) {\n            case 0:\n                return 0.0;\n            case 4:\n                return this.tokenizer.readNumber(Float32_BE);\n            case 8:\n                return this.tokenizer.readNumber(Float64_BE);\n            case 10:\n                return this.tokenizer.readNumber(Float64_BE);\n            default:\n                throw new EbmlContentError(`Invalid IEEE-754 float length: ${e.len}`);\n        }\n    }\n    async readFlag(e) {\n        return (await this.readUint(e)) === 1;\n    }\n    async readUint(e) {\n        const buf = await this.readBuffer(e);\n        return readUIntBE(buf, e.len);\n    }\n    async readString(e) {\n        const rawString = await this.tokenizer.readToken(new StringType(e.len, 'utf-8'));\n        return rawString.replace(/\\x00.*$/g, '');\n    }\n    async readBuffer(e) {\n        const buf = new Uint8Array(e.len);\n        await this.tokenizer.readBuffer(buf);\n        return buf;\n    }\n}\nfunction readUIntBE(buf, len) {\n    return Number(readUIntBeAsBigInt(buf, len));\n}\n/**\n * Reeds an unsigned integer from a big endian buffer of length `len`\n * @param buf Buffer to decode from\n * @param len Number of bytes\n * @private\n */\nfunction readUIntBeAsBigInt(buf, len) {\n    const normalizedNumber = new Uint8Array(8);\n    const cleanNumber = buf.subarray(0, len);\n    try {\n        normalizedNumber.set(cleanNumber, 8 - len);\n        return Token.UINT64_BE.get(normalizedNumber, 0);\n    }\n    catch (_error) {\n        return BigInt(-1);\n    }\n}\nfunction linkParents(element) {\n    if (element.container) {\n        Object.keys(element.container)\n            .map(id => {\n            const child = element.container[id];\n            child.id = Number.parseInt(id);\n            return child;\n        }).forEach(child => {\n            child.parent = element;\n            linkParents(child);\n        });\n    }\n    return element;\n}\nexport function getElementPath(element) {\n    let path = '';\n    if (element.parent && element.parent.name !== 'dtd') {\n        path += `${getElementPath(element.parent)}/`;\n    }\n    return path + element.name;\n}\n", "import initDebug from 'debug';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { matroskaDtd } from './MatroskaDtd.js';\nimport { TargetType, TrackType } from './types.js';\nimport { EbmlIterator, ParseAction } from '../ebml/EbmlIterator.js';\nconst debug = initDebug('music-metadata:parser:matroska');\n/**\n * Extensible Binary Meta Language (EBML) parser\n * https://en.wikipedia.org/wiki/Extensible_Binary_Meta_Language\n * http://matroska.sourceforge.net/technical/specs/rfc/index.html\n *\n * WEBM VP8 AUDIO FILE\n */\nexport class MatroskaParser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.seekHeadOffset = 0;\n        /**\n         * Use index to skip multiple segment/cluster elements at once.\n         * Significant performance impact\n         */\n        this.flagUseIndexToSkipClusters = this.options.mkvUseIndex ?? false;\n    }\n    async parse() {\n        const containerSize = this.tokenizer.fileInfo.size ?? Number.MAX_SAFE_INTEGER;\n        const matroskaIterator = new EbmlIterator(this.tokenizer);\n        debug('Initializing DTD end MatroskaIterator');\n        await matroskaIterator.iterate(matroskaDtd, containerSize, {\n            startNext: (element) => {\n                switch (element.id) {\n                    // case 0x1f43b675: // cluster\n                    case 0x1c53bb6b: // Cueing Data\n                        debug(`Skip element: name=${element.name}, id=0x${element.id.toString(16)}`);\n                        return ParseAction.IgnoreElement;\n                    case 0x1f43b675: // cluster\n                        if (this.flagUseIndexToSkipClusters && this.seekHead) {\n                            const index = this.seekHead.seek.find(index => index.position + this.seekHeadOffset > this.tokenizer.position);\n                            if (index) {\n                                // Go to next index position\n                                const ignoreSize = index.position + this.seekHeadOffset - this.tokenizer.position;\n                                debug(`Use index to go to next position, ignoring ${ignoreSize} bytes`);\n                                this.tokenizer.ignore(ignoreSize);\n                                return ParseAction.SkipElement;\n                            }\n                        }\n                        return ParseAction.IgnoreElement;\n                    default:\n                        return ParseAction.ReadNext;\n                }\n            },\n            elementValue: async (element, value, offset) => {\n                debug(`Received: name=${element.name}, value=${value}`);\n                switch (element.id) {\n                    case 0x4282: // docType\n                        this.metadata.setFormat('container', `EBML/${value}`);\n                        break;\n                    case 0x114d9b74:\n                        this.seekHead = value;\n                        this.seekHeadOffset = offset;\n                        break;\n                    case 0x1549a966:\n                        { // Info (Segment Information)\n                            const info = value;\n                            const timecodeScale = info.timecodeScale ? info.timecodeScale : 1000000;\n                            if (typeof info.duration === 'number') {\n                                const duration = info.duration * timecodeScale / 1000000000;\n                                await this.addTag('segment:title', info.title);\n                                this.metadata.setFormat('duration', Number(duration));\n                            }\n                        }\n                        break;\n                    case 0x1654ae6b:\n                        { // tracks\n                            const audioTracks = value;\n                            if (audioTracks?.entries) {\n                                audioTracks.entries.forEach(entry => {\n                                    const stream = {\n                                        codecName: entry.codecID.replace('A_', '').replace('V_', ''),\n                                        codecSettings: entry.codecSettings,\n                                        flagDefault: entry.flagDefault,\n                                        flagLacing: entry.flagLacing,\n                                        flagEnabled: entry.flagEnabled,\n                                        language: entry.language,\n                                        name: entry.name,\n                                        type: entry.trackType,\n                                        audio: entry.audio,\n                                        video: entry.video\n                                    };\n                                    this.metadata.addStreamInfo(stream);\n                                });\n                                const audioTrack = audioTracks.entries\n                                    .filter(entry => entry.trackType === TrackType.audio)\n                                    .reduce((acc, cur) => {\n                                    if (!acc)\n                                        return cur;\n                                    if (cur.flagDefault && !acc.flagDefault)\n                                        return cur;\n                                    if (cur.trackNumber < acc.trackNumber)\n                                        return cur;\n                                    return acc;\n                                }, null);\n                                if (audioTrack) {\n                                    this.metadata.setFormat('codec', audioTrack.codecID.replace('A_', ''));\n                                    this.metadata.setFormat('sampleRate', audioTrack.audio.samplingFrequency);\n                                    this.metadata.setFormat('numberOfChannels', audioTrack.audio.channels);\n                                }\n                            }\n                        }\n                        break;\n                    case 0x1254c367:\n                        { // tags\n                            const tags = value;\n                            await Promise.all(tags.tag.map(async (tag) => {\n                                const target = tag.target;\n                                const targetType = target?.targetTypeValue ? TargetType[target.targetTypeValue] : (target?.targetType ? target.targetType : 'track');\n                                await Promise.all(tag.simpleTags.map(async (simpleTag) => {\n                                    const value = simpleTag.string ? simpleTag.string : simpleTag.binary;\n                                    await this.addTag(`${targetType}:${simpleTag.name}`, value);\n                                }));\n                            }));\n                        }\n                        break;\n                    case 0x1941a469:\n                        { // attachments\n                            const attachments = value;\n                            await Promise.all(attachments.attachedFiles\n                                .filter(file => file.mimeType.startsWith('image/'))\n                                .map(file => this.addTag('picture', {\n                                data: file.data,\n                                format: file.mimeType,\n                                description: file.description,\n                                name: file.name\n                            })));\n                        }\n                        break;\n                }\n            }\n        });\n    }\n    async addTag(tagId, value) {\n        await this.metadata.addTag('matroska', tagId, value);\n    }\n}\n", "import * as Token from 'token-types';\nimport initDebug from 'debug';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nimport * as util from '../common/Util.js';\nconst debug = initDebug('music-metadata:parser:MP4:atom');\nexport class Mp4ContentError extends makeUnexpectedFileContentError('MP4') {\n}\nexport const Header = {\n    len: 8,\n    get: (buf, off) => {\n        const length = Token.UINT32_BE.get(buf, off);\n        if (length < 0)\n            throw new Mp4ContentError('Invalid atom header length');\n        return {\n            length: BigInt(length),\n            name: new Token.StringType(4, 'latin1').get(buf, off + 4)\n        };\n    },\n    put: (buf, off, hdr) => {\n        Token.UINT32_BE.put(buf, off, Number(hdr.length));\n        return FourCcToken.put(buf, off + 4, hdr.name);\n    }\n};\n/**\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap1/qtff1.html#//apple_ref/doc/uid/TP40000939-CH203-38190\n */\nexport const ExtendedSize = Token.UINT64_BE;\nexport const ftyp = {\n    len: 4,\n    get: (buf, off) => {\n        return {\n            type: new Token.StringType(4, 'ascii').get(buf, off)\n        };\n    }\n};\n/**\n * Token: Movie Header Atom\n */\nexport const mhdr = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            nextItemID: Token.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Base class for 'fixed' length atoms.\n * In some cases these atoms are longer then the sum of the described fields.\n * Issue: https://github.com/Borewit/music-metadata/issues/120\n */\nexport class FixedLengthAtom {\n    /**\n     *\n     * @param {number} len Length as specified in the size field\n     * @param {number} expLen Total length of sum of specified fields in the standard\n     * @param atomId Atom ID\n     */\n    constructor(len, expLen, atomId) {\n        if (len < expLen) {\n            throw new Mp4ContentError(`Atom ${atomId} expected to be ${expLen}, but specifies ${len} bytes long.`);\n        }\n        if (len > expLen) {\n            debug(`Warning: atom ${atomId} expected to be ${expLen}, but was actually ${len} bytes long.`);\n        }\n        this.len = len;\n    }\n}\n/**\n * Timestamp stored in seconds since Mac Epoch (1 January 1904)\n */\nconst SecondsSinceMacEpoch = {\n    len: 4,\n    get: (buf, off) => {\n        const secondsSinceUnixEpoch = Token.UINT32_BE.get(buf, off) - 2082844800;\n        return new Date(secondsSinceUnixEpoch * 1000);\n    }\n};\n/**\n * Token: Media Header Atom\n * Ref:\n * - https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-SW34\n * - https://wiki.multimedia.cx/index.php/QuickTime_container#mdhd\n */\nexport class MdhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 24, 'mdhd');\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off + 0),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            timeScale: Token.UINT32_BE.get(buf, off + 12),\n            duration: Token.UINT32_BE.get(buf, off + 16),\n            language: Token.UINT16_BE.get(buf, off + 20),\n            quality: Token.UINT16_BE.get(buf, off + 22)\n        };\n    }\n}\n/**\n * Token: Movie Header Atom\n */\nexport class MvhdAtom extends FixedLengthAtom {\n    constructor(len) {\n        super(len, 100, 'mvhd');\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            timeScale: Token.UINT32_BE.get(buf, off + 12),\n            duration: Token.UINT32_BE.get(buf, off + 16),\n            preferredRate: Token.UINT32_BE.get(buf, off + 20),\n            preferredVolume: Token.UINT16_BE.get(buf, off + 24),\n            // ignore reserver: 10 bytes\n            // ignore matrix structure: 36 bytes\n            previewTime: Token.UINT32_BE.get(buf, off + 72),\n            previewDuration: Token.UINT32_BE.get(buf, off + 76),\n            posterTime: Token.UINT32_BE.get(buf, off + 80),\n            selectionTime: Token.UINT32_BE.get(buf, off + 84),\n            selectionDuration: Token.UINT32_BE.get(buf, off + 88),\n            currentTime: Token.UINT32_BE.get(buf, off + 92),\n            nextTrackID: Token.UINT32_BE.get(buf, off + 96)\n        };\n    }\n}\n/**\n * Data Atom Structure\n */\nexport class DataAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            type: {\n                set: Token.UINT8.get(buf, off + 0),\n                type: Token.UINT24_BE.get(buf, off + 1)\n            },\n            locale: Token.UINT24_BE.get(buf, off + 4),\n            value: new Token.Uint8ArrayType(this.len - 8).get(buf, off + 8)\n        };\n    }\n}\n/**\n * Data Atom Structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW31\n */\nexport class NameAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            name: new Token.StringType(this.len - 4, 'utf-8').get(buf, off + 4)\n        };\n    }\n}\n/**\n * Track Header Atoms structure (`tkhd`)\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25550\n */\nexport class TrackHeaderAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            creationTime: SecondsSinceMacEpoch.get(buf, off + 4),\n            modificationTime: SecondsSinceMacEpoch.get(buf, off + 8),\n            trackId: Token.UINT32_BE.get(buf, off + 12),\n            // reserved 4 bytes\n            duration: Token.UINT32_BE.get(buf, off + 20),\n            layer: Token.UINT16_BE.get(buf, off + 24),\n            alternateGroup: Token.UINT16_BE.get(buf, off + 26),\n            volume: Token.UINT16_BE.get(buf, off + 28) // ToDo: fixed point\n            // ToDo: add remaining fields\n        };\n    }\n}\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nconst stsdHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            version: Token.UINT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            numberOfEntries: Token.UINT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Atom: Sample Description Atom ('stsd')\n * Ref: https://developer.apple.com/documentation/quicktime-file-format/sample_description_atom\n */\nclass SampleDescriptionTable {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const descrLen = this.len - 12;\n        return {\n            dataFormat: FourCcToken.get(buf, off),\n            dataReferenceIndex: Token.UINT16_BE.get(buf, off + 10),\n            description: descrLen > 0 ? new Token.Uint8ArrayType(descrLen).get(buf, off + 12) : undefined\n        };\n    }\n}\n/**\n * Atom: Sample-description Atom ('stsd')\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25691\n */\nexport class StsdAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const header = stsdHeader.get(buf, off);\n        off += stsdHeader.len;\n        const table = [];\n        for (let n = 0; n < header.numberOfEntries; ++n) {\n            const size = Token.UINT32_BE.get(buf, off); // Sample description size\n            off += Token.UINT32_BE.len;\n            table.push(new SampleDescriptionTable(size - Token.UINT32_BE.len).get(buf, off));\n            off += size;\n        }\n        return {\n            header,\n            table\n        };\n    }\n}\n/**\n * Common Sound Sample Description (version & revision)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-57317\n */\nexport const SoundSampleDescriptionVersion = {\n    len: 8,\n    get(buf, off) {\n        return {\n            version: Token.INT16_BE.get(buf, off),\n            revision: Token.INT16_BE.get(buf, off + 2),\n            vendor: Token.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Sound Sample Description (Version 0)\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-130736\n */\nexport const SoundSampleDescriptionV0 = {\n    len: 12,\n    get(buf, off) {\n        return {\n            numAudioChannels: Token.INT16_BE.get(buf, off + 0),\n            sampleSize: Token.INT16_BE.get(buf, off + 2),\n            compressionId: Token.INT16_BE.get(buf, off + 4),\n            packetSize: Token.INT16_BE.get(buf, off + 6),\n            sampleRate: Token.UINT16_BE.get(buf, off + 8) + Token.UINT16_BE.get(buf, off + 10) / 10000\n        };\n    }\n};\nclass SimpleTableAtom {\n    constructor(len, token) {\n        this.len = len;\n        this.token = token;\n    }\n    get(buf, off) {\n        const nrOfEntries = Token.INT32_BE.get(buf, off + 4);\n        return {\n            version: Token.INT8.get(buf, off + 0),\n            flags: Token.INT24_BE.get(buf, off + 1),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, this.token, off + 8, this.len - 8, nrOfEntries)\n        };\n    }\n}\nexport const TimeToSampleToken = {\n    len: 8,\n    get(buf, off) {\n        return {\n            count: Token.INT32_BE.get(buf, off + 0),\n            duration: Token.INT32_BE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Time-to-sample('stts') atom.\n * Store duration information for a media\u2019s samples.\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25696\n */\nexport class SttsAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, TimeToSampleToken);\n    }\n}\nexport const SampleToChunkToken = {\n    len: 12,\n    get(buf, off) {\n        return {\n            firstChunk: Token.INT32_BE.get(buf, off),\n            samplesPerChunk: Token.INT32_BE.get(buf, off + 4),\n            sampleDescriptionId: Token.INT32_BE.get(buf, off + 8)\n        };\n    }\n};\n/**\n * Sample-to-Chunk ('stsc') atom interface\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25706\n */\nexport class StscAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, SampleToChunkToken);\n    }\n}\n/**\n * Sample-size ('stsz') atom\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25710\n */\nexport class StszAtom {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const nrOfEntries = Token.INT32_BE.get(buf, off + 8);\n        return {\n            version: Token.INT8.get(buf, off),\n            flags: Token.INT24_BE.get(buf, off + 1),\n            sampleSize: Token.INT32_BE.get(buf, off + 4),\n            numberOfEntries: nrOfEntries,\n            entries: readTokenTable(buf, Token.INT32_BE, off + 12, this.len - 12, nrOfEntries)\n        };\n    }\n}\n/**\n * Chunk offset atom, 'stco'\n * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-25715\n */\nexport class StcoAtom extends SimpleTableAtom {\n    constructor(len) {\n        super(len, Token.INT32_BE);\n        this.len = len;\n    }\n}\n/**\n * Token used to decode text-track from 'mdat' atom (raw data stream)\n */\nexport class ChapterText {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const titleLen = Token.INT16_BE.get(buf, off + 0);\n        const str = new Token.StringType(titleLen, 'utf-8');\n        return str.get(buf, off + 2);\n    }\n}\nfunction readTokenTable(buf, token, off, remainingLen, numberOfEntries) {\n    debug(`remainingLen=${remainingLen}, numberOfEntries=${numberOfEntries} * token-len=${token.len}`);\n    if (remainingLen === 0)\n        return [];\n    if (remainingLen !== numberOfEntries * token.len)\n        throw new Mp4ContentError('mismatch number-of-entries with remaining atom-length');\n    const entries = [];\n    // parse offset-table\n    for (let n = 0; n < numberOfEntries; ++n) {\n        entries.push(token.get(buf, off));\n        off += token.len;\n    }\n    return entries;\n}\n/**\n * Sample-size ('tfhd') TrackFragmentHeaderBox\n */\nexport class TrackFragmentHeaderBox {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const flagOffset = off + 1;\n        const header = {\n            version: Token.INT8.get(buf, off),\n            flags: {\n                baseDataOffsetPresent: util.getBit(buf, flagOffset + 2, 0),\n                sampleDescriptionIndexPresent: util.getBit(buf, flagOffset + 2, 1),\n                defaultSampleDurationPresent: util.getBit(buf, flagOffset + 2, 3),\n                defaultSampleSizePresent: util.getBit(buf, flagOffset + 2, 4),\n                defaultSampleFlagsPresent: util.getBit(buf, flagOffset + 2, 5),\n                defaultDurationIsEmpty: util.getBit(buf, flagOffset, 0),\n                defaultBaseIsMoof: util.getBit(buf, flagOffset, 1)\n            },\n            trackId: Token.UINT32_BE.get(buf, 4)\n        };\n        let dynOffset = 8;\n        if (header.flags.baseDataOffsetPresent) {\n            header.baseDataOffset = Token.UINT64_BE.get(buf, dynOffset);\n            dynOffset += 8;\n        }\n        if (header.flags.sampleDescriptionIndexPresent) {\n            header.sampleDescriptionIndex = Token.UINT32_BE.get(buf, dynOffset);\n            dynOffset += 4;\n        }\n        if (header.flags.defaultSampleDurationPresent) {\n            header.defaultSampleDuration = Token.UINT32_BE.get(buf, dynOffset);\n            dynOffset += 4;\n        }\n        if (header.flags.defaultSampleSizePresent) {\n            header.defaultSampleSize = Token.UINT32_BE.get(buf, dynOffset);\n            dynOffset += 4;\n        }\n        if (header.flags.defaultSampleFlagsPresent) {\n            header.defaultSampleFlags = Token.UINT32_BE.get(buf, dynOffset);\n        }\n        return header;\n    }\n}\n/**\n * Sample-size ('trun') TrackRunBox\n */\nexport class TrackRunBox {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const flagOffset = off + 1;\n        const trun = {\n            version: Token.INT8.get(buf, off),\n            flags: {\n                dataOffsetPresent: util.getBit(buf, flagOffset + 2, 0),\n                firstSampleFlagsPresent: util.getBit(buf, flagOffset + 2, 2),\n                sampleDurationPresent: util.getBit(buf, flagOffset + 1, 0),\n                sampleSizePresent: util.getBit(buf, flagOffset + 1, 1),\n                sampleFlagsPresent: util.getBit(buf, flagOffset + 1, 2),\n                sampleCompositionTimeOffsetsPresent: util.getBit(buf, flagOffset + 1, 3)\n            },\n            sampleCount: Token.UINT32_BE.get(buf, off + 4),\n            samples: []\n        };\n        let dynOffset = off + 8;\n        if (trun.flags.dataOffsetPresent) {\n            trun.dataOffset = Token.UINT32_BE.get(buf, dynOffset);\n            dynOffset += 4;\n        }\n        if (trun.flags.firstSampleFlagsPresent) {\n            trun.firstSampleFlags = Token.UINT32_BE.get(buf, dynOffset);\n            dynOffset += 4;\n        }\n        for (let n = 0; n < trun.sampleCount; ++n) {\n            if (dynOffset >= this.len) {\n                debug(\"TrackRunBox size mismatch\");\n                break;\n            }\n            const sample = {};\n            if (trun.flags.sampleDurationPresent) {\n                sample.sampleDuration = Token.UINT32_BE.get(buf, dynOffset);\n                dynOffset += 4;\n            }\n            if (trun.flags.sampleSizePresent) {\n                sample.sampleSize = Token.UINT32_BE.get(buf, dynOffset);\n                dynOffset += 4;\n            }\n            if (trun.flags.sampleFlagsPresent) {\n                sample.sampleFlags = Token.UINT32_BE.get(buf, dynOffset);\n                dynOffset += 4;\n            }\n            if (trun.flags.sampleCompositionTimeOffsetsPresent) {\n                sample.sampleCompositionTimeOffset = Token.UINT32_BE.get(buf, dynOffset);\n                dynOffset += 4;\n            }\n            trun.samples.push(sample);\n        }\n        return trun;\n    }\n}\n/**\n * HandlerBox (`hdlr`)\n */\nexport class HandlerBox {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        const _flagOffset = off + 1;\n        const charTypeToken = new Token.StringType(4, 'utf-8');\n        return {\n            version: Token.INT8.get(buf, off),\n            flags: Token.UINT24_BE.get(buf, off + 1),\n            componentType: charTypeToken.get(buf, off + 4),\n            handlerType: charTypeToken.get(buf, off + 8),\n            componentName: new Token.StringType(this.len - 28, 'utf-8').get(buf, off + 28),\n        };\n    }\n}\n/**\n * Chapter Track Reference Box (`chap`)\n */\nexport class ChapterTrackReferenceBox {\n    constructor(len) {\n        this.len = len;\n    }\n    get(buf, off) {\n        let dynOffset = 0;\n        const trackIds = [];\n        while (dynOffset < this.len) {\n            trackIds.push(Token.UINT32_BE.get(buf, off + dynOffset));\n            dynOffset += 4;\n        }\n        return trackIds;\n    }\n}\n", "import initDebug from 'debug';\nimport * as AtomToken from './AtomToken.js';\nimport { Header } from './AtomToken.js';\nconst debug = initDebug('music-metadata:parser:MP4:Atom');\nexport class Atom {\n    static async readAtom(tokenizer, dataHandler, parent, remaining) {\n        // Parse atom header\n        const offset = tokenizer.position;\n        debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n        const header = await tokenizer.readToken(AtomToken.Header);\n        const extended = header.length === 1n;\n        if (extended) {\n            header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\n        }\n        const atomBean = new Atom(header, extended, parent);\n        const payloadLength = atomBean.getPayloadLength(remaining);\n        debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\n        await atomBean.readData(tokenizer, dataHandler, payloadLength);\n        return atomBean;\n    }\n    constructor(header, extended, parent) {\n        this.header = header;\n        this.extended = extended;\n        this.parent = parent;\n        this.children = [];\n        this.atomPath = (this.parent ? `${this.parent.atomPath}.` : '') + this.header.name;\n    }\n    getHeaderLength() {\n        return this.extended ? 16 : 8;\n    }\n    getPayloadLength(remaining) {\n        return (this.header.length === 0n ? remaining : Number(this.header.length)) - this.getHeaderLength();\n    }\n    async readAtoms(tokenizer, dataHandler, size) {\n        while (size > 0) {\n            const atomBean = await Atom.readAtom(tokenizer, dataHandler, this, size);\n            this.children.push(atomBean);\n            size -= atomBean.header.length === 0n ? size : Number(atomBean.header.length);\n        }\n    }\n    async readData(tokenizer, dataHandler, remaining) {\n        switch (this.header.name) {\n            // \"Container\" atoms, contains nested atoms\n            case 'moov': // The Movie Atom: contains other atoms\n            case 'udta': // User defined atom\n            case 'mdia': // Media atom\n            case 'minf': // Media Information Atom\n            case 'stbl': // The Sample Table Atom\n            case '<id>':\n            case 'ilst':\n            case 'tref':\n            case 'moof':\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining));\n            case 'meta': { // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n                // meta has 4 bytes of padding, ignore\n                const peekHeader = await tokenizer.peekToken(Header);\n                const paddingLength = peekHeader.name === 'hdlr' ? 0 : 4;\n                await tokenizer.ignore(paddingLength);\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - paddingLength);\n            }\n            default:\n                return dataHandler(this, remaining);\n        }\n    }\n}\n", "import initDebug from 'debug';\nimport * as Token from 'token-types';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { Genres } from '../id3v1/ID3v1Parser.js';\nimport { Atom } from './Atom.js';\nimport * as AtomToken from './AtomToken.js';\nimport { ChapterTrackReferenceBox, Mp4ContentError, } from './AtomToken.js';\nimport { TrackType } from '../type.js';\nimport { uint8ArrayToHex } from 'uint8array-extras';\nimport { textDecode } from '@borewit/text-codec';\nconst debug = initDebug('music-metadata:parser:MP4');\nconst tagFormat = 'iTunes';\nconst encoderDict = {\n    raw: {\n        lossy: false,\n        format: 'raw'\n    },\n    MAC3: {\n        lossy: true,\n        format: 'MACE 3:1'\n    },\n    MAC6: {\n        lossy: true,\n        format: 'MACE 6:1'\n    },\n    ima4: {\n        lossy: true,\n        format: 'IMA 4:1'\n    },\n    ulaw: {\n        lossy: true,\n        format: 'uLaw 2:1'\n    },\n    alaw: {\n        lossy: true,\n        format: 'uLaw 2:1'\n    },\n    Qclp: {\n        lossy: true,\n        format: 'QUALCOMM PureVoice'\n    },\n    '.mp3': {\n        lossy: true,\n        format: 'MPEG-1 layer 3'\n    },\n    alac: {\n        lossy: false,\n        format: 'ALAC'\n    },\n    'ac-3': {\n        lossy: true,\n        format: 'AC-3'\n    },\n    mp4a: {\n        lossy: true,\n        format: 'MPEG-4/AAC'\n    },\n    mp4s: {\n        lossy: true,\n        format: 'MP4S'\n    },\n    // Closed Captioning Media, https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-SW87\n    c608: {\n        lossy: true,\n        format: 'CEA-608'\n    },\n    c708: {\n        lossy: true,\n        format: 'CEA-708'\n    }\n};\nfunction distinct(value, index, self) {\n    return self.indexOf(value) === index;\n}\n/*\n * Parser for the MP4 (MPEG-4 Part 14) container format\n * Standard: ISO/IEC 14496-14\n * supporting:\n * - QuickTime container\n * - MP4 File Format\n * - 3GPP file format\n * - 3GPP2 file format\n *\n * MPEG-4 Audio / Part 3 (.m4a)& MPEG 4 Video (m4v, mp4) extension.\n * Support for Apple iTunes tags as found in a M4A/M4V files.\n * Ref:\n *   https://en.wikipedia.org/wiki/ISO_base_media_file_format\n *   https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/Metadata/Metadata.html\n *   http://atomicparsley.sourceforge.net/mpeg-4files.html\n *   https://github.com/sergiomb2/libmp4v2/wiki/iTunesMetadata\n *   https://wiki.multimedia.cx/index.php/QuickTime_container\n */\nexport class MP4Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.tracks = new Map();\n        this.hasVideoTrack = false;\n        this.hasAudioTrack = true;\n        this.atomParsers = {\n            /**\n             * Parse movie header (mvhd) atom\n             * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap2/qtff2.html#//apple_ref/doc/uid/TP40000939-CH204-56313\n             */\n            mvhd: async (len) => {\n                const mvhd = await this.tokenizer.readToken(new AtomToken.MvhdAtom(len));\n                this.metadata.setFormat('creationTime', mvhd.creationTime);\n                this.metadata.setFormat('modificationTime', mvhd.modificationTime);\n            },\n            chap: async (len) => {\n                const td = this.getTrackDescription();\n                const trackIds = [];\n                while (len >= Token.UINT32_BE.len) {\n                    trackIds.push(await this.tokenizer.readNumber(Token.UINT32_BE));\n                    len -= Token.UINT32_BE.len;\n                }\n                td.chapterList = trackIds;\n            },\n            /**\n             * Parse mdat atom.\n             * Will scan for chapters\n             */\n            mdat: async (len) => {\n                this.audioLengthInBytes = len;\n                this.calculateBitRate();\n                if (this.options.includeChapters) {\n                    const trackWithChapters = [...this.tracks.values()].filter(track => track.chapterList);\n                    if (trackWithChapters.length === 1) {\n                        const chapterTrackIds = trackWithChapters[0].chapterList;\n                        const chapterTracks = [...this.tracks.values()].filter(track => chapterTrackIds.indexOf(track.header.trackId) !== -1);\n                        if (chapterTracks.length === 1) {\n                            return this.parseChapterTrack(chapterTracks[0], trackWithChapters[0], len);\n                        }\n                    }\n                }\n                await this.tokenizer.ignore(len);\n            },\n            ftyp: async (len) => {\n                const types = [];\n                while (len > 0) {\n                    const ftype = await this.tokenizer.readToken(AtomToken.ftyp);\n                    len -= AtomToken.ftyp.len;\n                    const value = ftype.type.replace(/\\W/g, '');\n                    if (value.length > 0) {\n                        types.push(value); // unshift for backward compatibility\n                    }\n                }\n                debug(`ftyp: ${types.join('/')}`);\n                const x = types.filter(distinct).join('/');\n                this.metadata.setFormat('container', x);\n            },\n            /**\n             * Parse sample description atom\n             */\n            stsd: async (len) => {\n                const stsd = await this.tokenizer.readToken(new AtomToken.StsdAtom(len));\n                const trackDescription = this.getTrackDescription();\n                trackDescription.soundSampleDescription = stsd.table.map(dfEntry => this.parseSoundSampleDescription(dfEntry));\n            },\n            /**\n             * Parse sample-sizes atom ('stsz')\n             */\n            stsz: async (len) => {\n                const stsz = await this.tokenizer.readToken(new AtomToken.StszAtom(len));\n                const td = this.getTrackDescription();\n                td.sampleSize = stsz.sampleSize;\n                td.sampleSizeTable = stsz.entries;\n            },\n            date: async (len) => {\n                const date = await this.tokenizer.readToken(new Token.StringType(len, 'utf-8'));\n                await this.addTag('date', date);\n            }\n        };\n    }\n    static read_BE_Integer(array, signed) {\n        const integerType = (signed ? 'INT' : 'UINT') + array.length * 8 + (array.length > 1 ? '_BE' : '');\n        const token = Token[integerType];\n        if (!token) {\n            throw new Mp4ContentError(`Token for integer type not found: \"${integerType}\"`);\n        }\n        return Number(token.get(array, 0));\n    }\n    async parse() {\n        this.hasVideoTrack = false;\n        this.hasAudioTrack = true;\n        this.tracks.clear();\n        let remainingFileSize = this.tokenizer.fileInfo.size || 0;\n        while (!this.tokenizer.fileInfo.size || remainingFileSize > 0) {\n            try {\n                const token = await this.tokenizer.peekToken(AtomToken.Header);\n                if (token.name === '\\0\\0\\0\\0') {\n                    const errMsg = `Error at offset=${this.tokenizer.position}: box.id=0`;\n                    debug(errMsg);\n                    this.addWarning(errMsg);\n                    break;\n                }\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    const errMsg = `Error at offset=${this.tokenizer.position}: ${error.message}`;\n                    debug(errMsg);\n                    this.addWarning(errMsg);\n                }\n                else\n                    throw error;\n                break;\n            }\n            const rootAtom = await Atom.readAtom(this.tokenizer, (atom, remaining) => this.handleAtom(atom, remaining), null, remainingFileSize);\n            remainingFileSize -= rootAtom.header.length === BigInt(0) ? remainingFileSize : Number(rootAtom.header.length);\n        }\n        // Post process metadata\n        const formatList = [];\n        this.tracks.forEach(track => {\n            const trackFormats = [];\n            track.soundSampleDescription.forEach(ssd => {\n                const streamInfo = {};\n                const encoderInfo = encoderDict[ssd.dataFormat];\n                if (encoderInfo) {\n                    trackFormats.push(encoderInfo.format);\n                    streamInfo.codecName = encoderInfo.format;\n                }\n                else {\n                    streamInfo.codecName = `<${ssd.dataFormat}>`;\n                }\n                if (ssd.description) {\n                    const { description } = ssd;\n                    if (description.sampleRate > 0) {\n                        streamInfo.type = TrackType.audio;\n                        streamInfo.audio = {\n                            samplingFrequency: description.sampleRate,\n                            bitDepth: description.sampleSize,\n                            channels: description.numAudioChannels\n                        };\n                    }\n                }\n                this.metadata.addStreamInfo(streamInfo);\n            });\n            if (trackFormats.length >= 1) {\n                formatList.push(trackFormats.join('/'));\n            }\n        });\n        if (formatList.length > 0) {\n            this.metadata.setFormat('codec', formatList.filter(distinct).join('+'));\n        }\n        const audioTracks = [...this.tracks.values()].filter(track => {\n            return track.soundSampleDescription.length >= 1 && track.soundSampleDescription[0].description && track.soundSampleDescription[0].description.numAudioChannels > 0;\n        });\n        if (audioTracks.length >= 1) {\n            const audioTrack = audioTracks[0];\n            if (audioTrack.media.header && audioTrack.media.header.timeScale > 0) {\n                if (audioTrack.media.header.duration > 0) {\n                    debug('Using duration defined on audio track');\n                    const duration = audioTrack.media.header.duration / audioTrack.media.header.timeScale; // calculate duration in seconds\n                    this.metadata.setFormat('duration', duration);\n                }\n                else if (audioTrack.fragments.length > 0) {\n                    debug('Calculate duration defined in track fragments');\n                    let totalTimeUnits = 0;\n                    for (const fragment of audioTrack.fragments) {\n                        const defaultDuration = fragment.header.defaultSampleDuration;\n                        for (const sample of fragment.trackRun.samples) {\n                            const dur = sample.sampleDuration ?? defaultDuration;\n                            if (dur == null) {\n                                throw new Error(\"Missing sampleDuration and no default_sample_duration in tfhd\");\n                            }\n                            totalTimeUnits += dur;\n                        }\n                    }\n                    this.metadata.setFormat('duration', totalTimeUnits / audioTrack.media.header.timeScale);\n                }\n            }\n            const ssd = audioTrack.soundSampleDescription[0];\n            if (ssd.description && audioTrack.media.header) {\n                this.metadata.setFormat('sampleRate', ssd.description.sampleRate);\n                this.metadata.setFormat('bitsPerSample', ssd.description.sampleSize);\n                this.metadata.setFormat('numberOfChannels', ssd.description.numAudioChannels);\n                if (audioTrack.media.header.timeScale === 0 && audioTrack.timeToSampleTable.length > 0) {\n                    const totalSampleSize = audioTrack.timeToSampleTable\n                        .map(ttstEntry => ttstEntry.count * ttstEntry.duration)\n                        .reduce((total, sampleSize) => total + sampleSize);\n                    const duration = totalSampleSize / ssd.description.sampleRate;\n                    this.metadata.setFormat('duration', duration);\n                }\n            }\n            const encoderInfo = encoderDict[ssd.dataFormat];\n            if (encoderInfo) {\n                this.metadata.setFormat('lossless', !encoderInfo.lossy);\n            }\n            this.calculateBitRate();\n        }\n        this.metadata.setFormat('hasAudio', this.hasAudioTrack);\n        this.metadata.setFormat('hasVideo', this.hasVideoTrack);\n    }\n    async handleAtom(atom, remaining) {\n        if (atom.parent) {\n            switch (atom.parent.header.name) {\n                case 'ilst':\n                case '<id>':\n                    return this.parseMetadataItemData(atom);\n                case 'moov':\n                    switch (atom.header.name) {\n                        case 'trak':\n                            return this.parseTrackBox(atom);\n                    }\n                    break;\n                case 'moof':\n                    switch (atom.header.name) {\n                        case 'traf':\n                            return this.parseTrackFragmentBox(atom);\n                    }\n            }\n        }\n        // const payloadLength = atom.getPayloadLength(remaining);\n        if (this.atomParsers[atom.header.name]) {\n            return this.atomParsers[atom.header.name](remaining);\n        }\n        debug(`No parser for atom path=${atom.atomPath}, payload-len=${remaining}, ignoring atom`);\n        await this.tokenizer.ignore(remaining);\n    }\n    getTrackDescription() {\n        // ToDo: pick the right track, not the last track!!!!\n        const tracks = [...this.tracks.values()];\n        return tracks[tracks.length - 1];\n    }\n    calculateBitRate() {\n        if (this.audioLengthInBytes && this.metadata.format.duration) {\n            this.metadata.setFormat('bitrate', 8 * this.audioLengthInBytes / this.metadata.format.duration);\n        }\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag(tagFormat, id, value);\n    }\n    addWarning(message) {\n        debug(`Warning: ${message}`);\n        this.metadata.addWarning(message);\n    }\n    /**\n     * Parse data of Meta-item-list-atom (item of 'ilst' atom)\n     * @param metaAtom\n     * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n     */\n    parseMetadataItemData(metaAtom) {\n        let tagKey = metaAtom.header.name;\n        return metaAtom.readAtoms(this.tokenizer, async (child, remaining) => {\n            const payLoadLength = child.getPayloadLength(remaining);\n            switch (child.header.name) {\n                case 'data': // value atom\n                    return this.parseValueAtom(tagKey, child);\n                case 'name': // name atom (optional)\n                case 'mean':\n                case 'rate': {\n                    const name = await this.tokenizer.readToken(new AtomToken.NameAtom(payLoadLength));\n                    tagKey += `:${name.name}`;\n                    break;\n                }\n                default: {\n                    const uint8Array = await this.tokenizer.readToken(new Token.Uint8ArrayType(payLoadLength));\n                    this.addWarning(`Unsupported meta-item: ${tagKey}[${child.header.name}] => value=${uint8ArrayToHex(uint8Array)} ascii=${textDecode(uint8Array, 'ascii')}`);\n                }\n            }\n        }, metaAtom.getPayloadLength(0));\n    }\n    async parseValueAtom(tagKey, metaAtom) {\n        const dataAtom = await this.tokenizer.readToken(new AtomToken.DataAtom(Number(metaAtom.header.length) - AtomToken.Header.len));\n        if (dataAtom.type.set !== 0) {\n            throw new Mp4ContentError(`Unsupported type-set != 0: ${dataAtom.type.set}`);\n        }\n        // Use well-known-type table\n        // Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW35\n        switch (dataAtom.type.type) {\n            case 0: // reserved: Reserved for use where no type needs to be indicated\n                switch (tagKey) {\n                    case 'trkn':\n                    case 'disk': {\n                        const num = Token.UINT8.get(dataAtom.value, 3);\n                        const of = Token.UINT8.get(dataAtom.value, 5);\n                        // console.log(\"  %s[data] = %s/%s\", tagKey, num, of);\n                        await this.addTag(tagKey, `${num}/${of}`);\n                        break;\n                    }\n                    case 'gnre': {\n                        const genreInt = Token.UINT8.get(dataAtom.value, 1);\n                        const genreStr = Genres[genreInt - 1];\n                        // console.log(\"  %s[data] = %s\", tagKey, genreStr);\n                        await this.addTag(tagKey, genreStr);\n                        break;\n                    }\n                    case 'rate': {\n                        const rate = textDecode(dataAtom.value, 'ascii');\n                        await this.addTag(tagKey, rate);\n                        break;\n                    }\n                    default:\n                        debug(`unknown proprietary value type for: ${metaAtom.atomPath}`);\n                }\n                break;\n            case 1: // UTF-8: Without any count or NULL terminator\n            case 18: // Unknown: Found in m4b in combination with a '\u00A9gen' tag\n                await this.addTag(tagKey, textDecode(dataAtom.value));\n                break;\n            case 13: // JPEG\n                if (this.options.skipCovers)\n                    break;\n                await this.addTag(tagKey, {\n                    format: 'image/jpeg',\n                    data: Uint8Array.from(dataAtom.value)\n                });\n                break;\n            case 14: // PNG\n                if (this.options.skipCovers)\n                    break;\n                await this.addTag(tagKey, {\n                    format: 'image/png',\n                    data: Uint8Array.from(dataAtom.value)\n                });\n                break;\n            case 21: // BE Signed Integer\n                await this.addTag(tagKey, MP4Parser.read_BE_Integer(dataAtom.value, true));\n                break;\n            case 22: // BE Unsigned Integer\n                await this.addTag(tagKey, MP4Parser.read_BE_Integer(dataAtom.value, false));\n                break;\n            case 65: // An 8-bit signed integer\n                await this.addTag(tagKey, Token.UINT8.get(dataAtom.value, 0));\n                break;\n            case 66: // A big-endian 16-bit signed integer\n                await this.addTag(tagKey, Token.UINT16_BE.get(dataAtom.value, 0));\n                break;\n            case 67: // A big-endian 32-bit signed integer\n                await this.addTag(tagKey, Token.UINT32_BE.get(dataAtom.value, 0));\n                break;\n            default:\n                this.addWarning(`atom key=${tagKey}, has unknown well-known-type (data-type): ${dataAtom.type.type}`);\n        }\n    }\n    async parseTrackBox(trakBox) {\n        // @ts-expect-error\n        const track = {\n            media: {},\n            fragments: []\n        };\n        await trakBox.readAtoms(this.tokenizer, async (child, remaining) => {\n            const payLoadLength = child.getPayloadLength(remaining);\n            switch (child.header.name) {\n                case 'chap': {\n                    const chap = await this.tokenizer.readToken(new ChapterTrackReferenceBox(remaining));\n                    track.chapterList = chap;\n                    break;\n                }\n                case 'tkhd': // TrackHeaderBox\n                    track.header = await this.tokenizer.readToken(new AtomToken.TrackHeaderAtom(payLoadLength));\n                    break;\n                case 'hdlr': // TrackHeaderBox\n                    track.handler = await this.tokenizer.readToken(new AtomToken.HandlerBox(payLoadLength));\n                    switch (track.handler.handlerType) {\n                        case 'audi':\n                            debug('Contains audio track');\n                            this.hasAudioTrack = true;\n                            break;\n                        case 'vide':\n                            debug('Contains video track');\n                            this.hasVideoTrack = true;\n                            break;\n                    }\n                    break;\n                case 'mdhd': { // Parse media header (mdhd) box\n                    const mdhd_data = await this.tokenizer.readToken(new AtomToken.MdhdAtom(payLoadLength));\n                    track.media.header = mdhd_data;\n                    break;\n                }\n                case 'stco': {\n                    const stco = await this.tokenizer.readToken(new AtomToken.StcoAtom(payLoadLength));\n                    track.chunkOffsetTable = stco.entries; // remember chunk offsets\n                    break;\n                }\n                case 'stsc': { // sample-to-Chunk box\n                    const stsc = await this.tokenizer.readToken(new AtomToken.StscAtom(payLoadLength));\n                    track.sampleToChunkTable = stsc.entries;\n                    break;\n                }\n                case 'stsd': { // sample description box\n                    const stsd = await this.tokenizer.readToken(new AtomToken.StsdAtom(payLoadLength));\n                    track.soundSampleDescription = stsd.table.map(dfEntry => this.parseSoundSampleDescription(dfEntry));\n                    break;\n                }\n                case 'stts': { // time-to-sample table\n                    const stts = await this.tokenizer.readToken(new AtomToken.SttsAtom(payLoadLength));\n                    track.timeToSampleTable = stts.entries;\n                    break;\n                }\n                case 'stsz': {\n                    const stsz = await this.tokenizer.readToken(new AtomToken.StszAtom(payLoadLength));\n                    track.sampleSize = stsz.sampleSize;\n                    track.sampleSizeTable = stsz.entries;\n                    break;\n                }\n                case 'dinf':\n                case 'vmhd':\n                case 'smhd':\n                    debug(`Ignoring: ${child.header.name}`);\n                    await this.tokenizer.ignore(payLoadLength);\n                    break;\n                default: {\n                    debug(`Unexpected track box: ${child.header.name}`);\n                    await this.tokenizer.ignore(payLoadLength);\n                }\n            }\n        }, trakBox.getPayloadLength(0));\n        // Register track\n        this.tracks.set(track.header.trackId, track);\n    }\n    parseTrackFragmentBox(trafBox) {\n        let tfhd;\n        return trafBox.readAtoms(this.tokenizer, async (child, remaining) => {\n            const payLoadLength = child.getPayloadLength(remaining);\n            switch (child.header.name) {\n                case 'tfhd': { // TrackFragmentHeaderBox\n                    const fragmentHeaderBox = new AtomToken.TrackFragmentHeaderBox(child.getPayloadLength(remaining));\n                    tfhd = await this.tokenizer.readToken(fragmentHeaderBox);\n                    break;\n                }\n                case 'tfdt': // TrackFragmentBaseMediaDecodeTimeBo\n                    await this.tokenizer.ignore(payLoadLength);\n                    break;\n                case 'trun': { // TrackRunBox\n                    const trackRunBox = new AtomToken.TrackRunBox(payLoadLength);\n                    const trun = await this.tokenizer.readToken(trackRunBox);\n                    if (tfhd) {\n                        const track = this.tracks.get(tfhd.trackId);\n                        track?.fragments.push({ header: tfhd, trackRun: trun });\n                    }\n                    break;\n                }\n                default: {\n                    debug(`Unexpected box: ${child.header.name}`);\n                    await this.tokenizer.ignore(payLoadLength);\n                }\n            }\n        }, trafBox.getPayloadLength(0));\n    }\n    /**\n     * @param sampleDescription\n     * Ref: https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-128916\n     */\n    parseSoundSampleDescription(sampleDescription) {\n        const ssd = {\n            dataFormat: sampleDescription.dataFormat,\n            dataReferenceIndex: sampleDescription.dataReferenceIndex\n        };\n        let offset = 0;\n        if (sampleDescription.description) {\n            const version = AtomToken.SoundSampleDescriptionVersion.get(sampleDescription.description, offset);\n            offset += AtomToken.SoundSampleDescriptionVersion.len;\n            if (version.version === 0 || version.version === 1) {\n                // Sound Sample Description (Version 0)\n                ssd.description = AtomToken.SoundSampleDescriptionV0.get(sampleDescription.description, offset);\n            }\n            else {\n                debug(`Warning: sound-sample-description ${version} not implemented`);\n            }\n        }\n        return ssd;\n    }\n    async parseChapterTrack(chapterTrack, track, len) {\n        if (!chapterTrack.sampleSize) {\n            if (chapterTrack.chunkOffsetTable.length !== chapterTrack.sampleSizeTable.length)\n                throw new Error('Expected equal chunk-offset-table & sample-size-table length.');\n        }\n        const chapters = [];\n        for (let i = 0; i < chapterTrack.chunkOffsetTable.length && len > 0; ++i) {\n            const start = chapterTrack.timeToSampleTable\n                .slice(0, i)\n                .reduce((acc, cur) => acc + cur.duration, 0);\n            const chunkOffset = chapterTrack.chunkOffsetTable[i];\n            const nextChunkLen = chunkOffset - this.tokenizer.position;\n            const sampleSize = chapterTrack.sampleSize > 0 ? chapterTrack.sampleSize : chapterTrack.sampleSizeTable[i];\n            len -= nextChunkLen + sampleSize;\n            if (len < 0)\n                throw new Mp4ContentError('Chapter chunk exceeding token length');\n            await this.tokenizer.ignore(nextChunkLen);\n            const title = await this.tokenizer.readToken(new AtomToken.ChapterText(sampleSize));\n            debug(`Chapter ${i + 1}: ${title}`);\n            const chapter = {\n                title,\n                timeScale: chapterTrack.media.header ? chapterTrack.media.header.timeScale : 0,\n                start,\n                sampleOffset: this.findSampleOffset(track, this.tokenizer.position)\n            };\n            debug(`Chapter title=${chapter.title}, offset=${chapter.sampleOffset}/${track.header.duration}`); // ToDo, use media duration if required!!!\n            chapters.push(chapter);\n        }\n        this.metadata.setFormat('chapters', chapters);\n        await this.tokenizer.ignore(len);\n    }\n    findSampleOffset(track, chapterOffset) {\n        let chunkIndex = 0;\n        while (chunkIndex < track.chunkOffsetTable.length && track.chunkOffsetTable[chunkIndex] < chapterOffset) {\n            ++chunkIndex;\n        }\n        return this.getChunkDuration(chunkIndex + 1, track);\n    }\n    getChunkDuration(chunkId, track) {\n        let ttsi = 0;\n        let ttsc = track.timeToSampleTable[ttsi].count;\n        let ttsd = track.timeToSampleTable[ttsi].duration;\n        let curChunkId = 1;\n        let samplesPerChunk = this.getSamplesPerChunk(curChunkId, track.sampleToChunkTable);\n        let totalDuration = 0;\n        while (curChunkId < chunkId) {\n            const nrOfSamples = Math.min(ttsc, samplesPerChunk);\n            totalDuration += nrOfSamples * ttsd;\n            ttsc -= nrOfSamples;\n            samplesPerChunk -= nrOfSamples;\n            if (samplesPerChunk === 0) {\n                ++curChunkId;\n                samplesPerChunk = this.getSamplesPerChunk(curChunkId, track.sampleToChunkTable);\n            }\n            else {\n                ++ttsi;\n                ttsc = track.timeToSampleTable[ttsi].count;\n                ttsd = track.timeToSampleTable[ttsi].duration;\n            }\n        }\n        return totalDuration;\n    }\n    getSamplesPerChunk(chunkId, stcTable) {\n        for (let i = 0; i < stcTable.length - 1; ++i) {\n            if (chunkId >= stcTable[i].firstChunk && chunkId < stcTable[i + 1].firstChunk) {\n                return stcTable[i].samplesPerChunk;\n            }\n        }\n        return stcTable[stcTable.length - 1].samplesPerChunk;\n    }\n}\n", "import * as Token from 'token-types';\nimport initDebug from 'debug';\nimport * as util from '../../common/Util.js';\nconst debug = initDebug('music-metadata:parser:musepack:sv8');\nconst PacketKey = new Token.StringType(2, 'latin1');\n/**\n * Stream Header Packet part 1\n * Ref: http://trac.musepack.net/musepack/wiki/SV8Specification#StreamHeaderPacket\n */\nconst SH_part1 = {\n    len: 5,\n    get: (buf, off) => {\n        return {\n            crc: Token.UINT32_LE.get(buf, off),\n            streamVersion: Token.UINT8.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Stream Header Packet part 3\n * Ref: http://trac.musepack.net/musepack/wiki/SV8Specification#StreamHeaderPacket\n */\nconst SH_part3 = {\n    len: 2,\n    get: (buf, off) => {\n        return {\n            sampleFrequency: [44100, 48000, 37800, 32000][util.getBitAllignedNumber(buf, off, 0, 3)],\n            maxUsedBands: util.getBitAllignedNumber(buf, off, 3, 5),\n            channelCount: util.getBitAllignedNumber(buf, off + 1, 0, 4) + 1,\n            msUsed: util.isBitSet(buf, off + 1, 4),\n            audioBlockFrames: util.getBitAllignedNumber(buf, off + 1, 5, 3)\n        };\n    }\n};\nexport class StreamReader {\n    get tokenizer() {\n        return this._tokenizer;\n    }\n    set tokenizer(value) {\n        this._tokenizer = value;\n    }\n    constructor(_tokenizer) {\n        this._tokenizer = _tokenizer;\n    }\n    async readPacketHeader() {\n        const key = await this.tokenizer.readToken(PacketKey);\n        const size = await this.readVariableSizeField();\n        return {\n            key,\n            payloadLength: size.value - 2 - size.len\n        };\n    }\n    async readStreamHeader(size) {\n        const streamHeader = {};\n        debug(`Reading SH at offset=${this.tokenizer.position}`);\n        const part1 = await this.tokenizer.readToken(SH_part1);\n        size -= SH_part1.len;\n        Object.assign(streamHeader, part1);\n        debug(`SH.streamVersion = ${part1.streamVersion}`);\n        const sampleCount = await this.readVariableSizeField();\n        size -= sampleCount.len;\n        streamHeader.sampleCount = sampleCount.value;\n        const bs = await this.readVariableSizeField();\n        size -= bs.len;\n        streamHeader.beginningOfSilence = bs.value;\n        const part3 = await this.tokenizer.readToken(SH_part3);\n        size -= SH_part3.len;\n        Object.assign(streamHeader, part3);\n        // assert.equal(size, 0);\n        await this.tokenizer.ignore(size);\n        return streamHeader;\n    }\n    async readVariableSizeField(len = 1, hb = 0) {\n        let n = await this.tokenizer.readNumber(Token.UINT8);\n        if ((n & 0x80) === 0) {\n            return { len, value: hb + n };\n        }\n        n &= 0x7F;\n        n += hb;\n        return this.readVariableSizeField(len + 1, n << 7);\n    }\n}\n", "import { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class MusepackContentError extends makeUnexpectedFileContentError('Musepack') {\n}\n", "import initDebug from 'debug';\nimport { BasicParser } from '../../common/BasicParser.js';\nimport { tryParseApeHeader } from '../../apev2/APEv2Parser.js';\nimport { FourCcToken } from '../../common/FourCC.js';\nimport * as SV8 from './StreamVersion8.js';\nimport { MusepackContentError } from '../MusepackConentError.js';\nconst debug = initDebug('music-metadata:parser:musepack');\nexport class MpcSv8Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.audioLength = 0;\n    }\n    async parse() {\n        const signature = await this.tokenizer.readToken(FourCcToken);\n        if (signature !== 'MPCK')\n            throw new MusepackContentError('Invalid Magic number');\n        this.metadata.setFormat('container', 'Musepack, SV8');\n        return this.parsePacket();\n    }\n    async parsePacket() {\n        const sv8reader = new SV8.StreamReader(this.tokenizer);\n        do {\n            const header = await sv8reader.readPacketHeader();\n            debug(`packet-header key=${header.key}, payloadLength=${header.payloadLength}`);\n            switch (header.key) {\n                case 'SH': { // Stream Header\n                    const sh = await sv8reader.readStreamHeader(header.payloadLength);\n                    this.metadata.setFormat('numberOfSamples', sh.sampleCount);\n                    this.metadata.setFormat('sampleRate', sh.sampleFrequency);\n                    this.metadata.setFormat('duration', sh.sampleCount / sh.sampleFrequency);\n                    this.metadata.setFormat('numberOfChannels', sh.channelCount);\n                    break;\n                }\n                case 'AP': // Audio Packet\n                    this.audioLength += header.payloadLength;\n                    await this.tokenizer.ignore(header.payloadLength);\n                    break;\n                case 'RG': // Replaygain\n                case 'EI': // Encoder Info\n                case 'SO': // Seek Table Offset\n                case 'ST': // Seek Table\n                case 'CT': // Chapter-Tag\n                    await this.tokenizer.ignore(header.payloadLength);\n                    break;\n                case 'SE': // Stream End\n                    if (this.metadata.format.duration) {\n                        this.metadata.setFormat('bitrate', this.audioLength * 8 / this.metadata.format.duration);\n                    }\n                    return tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n                default:\n                    throw new MusepackContentError(`Unexpected header: ${header.key}`);\n            }\n            // biome-ignore lint/correctness/noConstantCondition: break is handled in the switch statement\n        } while (true);\n    }\n}\n", "import * as Token from 'token-types';\nexport class BitReader {\n    constructor(tokenizer) {\n        this.pos = 0;\n        this.dword = null;\n        this.tokenizer = tokenizer;\n    }\n    /**\n     *\n     * @param bits 1..30 bits\n     */\n    async read(bits) {\n        while (this.dword === null) {\n            this.dword = await this.tokenizer.readToken(Token.UINT32_LE);\n        }\n        let out = this.dword;\n        this.pos += bits;\n        if (this.pos < 32) {\n            out >>>= (32 - this.pos);\n            return out & ((1 << bits) - 1);\n        }\n        this.pos -= 32;\n        if (this.pos === 0) {\n            this.dword = null;\n            return out & ((1 << bits) - 1);\n        }\n        this.dword = await this.tokenizer.readToken(Token.UINT32_LE);\n        if (this.pos) {\n            out <<= this.pos;\n            out |= this.dword >>> (32 - this.pos);\n        }\n        return out & ((1 << bits) - 1);\n    }\n    async ignore(bits) {\n        if (this.pos > 0) {\n            const remaining = 32 - this.pos;\n            this.dword = null;\n            bits -= remaining;\n            this.pos = 0;\n        }\n        const remainder = bits % 32;\n        const numOfWords = (bits - remainder) / 32;\n        await this.tokenizer.ignore(numOfWords * 4);\n        return this.read(remainder);\n    }\n}\n", "import * as Token from 'token-types';\nimport * as util from '../../common/Util.js';\nimport { textDecode } from '@borewit/text-codec';\n/**\n * BASIC STRUCTURE\n */\nexport const Header = {\n    len: 6 * 4,\n    get: (buf, off) => {\n        const header = {\n            // word 0\n            signature: textDecode(buf.subarray(off, off + 3), 'latin1'),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            streamMinorVersion: util.getBitAllignedNumber(buf, off + 3, 0, 4),\n            streamMajorVersion: util.getBitAllignedNumber(buf, off + 3, 4, 4),\n            // word 1\n            frameCount: Token.UINT32_LE.get(buf, off + 4),\n            // word 2\n            maxLevel: Token.UINT16_LE.get(buf, off + 8),\n            sampleFrequency: [44100, 48000, 37800, 32000][util.getBitAllignedNumber(buf, off + 10, 0, 2)],\n            link: util.getBitAllignedNumber(buf, off + 10, 2, 2),\n            profile: util.getBitAllignedNumber(buf, off + 10, 4, 4),\n            maxBand: util.getBitAllignedNumber(buf, off + 11, 0, 6),\n            intensityStereo: util.isBitSet(buf, off + 11, 6),\n            midSideStereo: util.isBitSet(buf, off + 11, 7),\n            // word 3\n            titlePeak: Token.UINT16_LE.get(buf, off + 12),\n            titleGain: Token.UINT16_LE.get(buf, off + 14),\n            // word 4\n            albumPeak: Token.UINT16_LE.get(buf, off + 16),\n            albumGain: Token.UINT16_LE.get(buf, off + 18),\n            // word\n            lastFrameLength: (Token.UINT32_LE.get(buf, off + 20) >>> 20) & 0x7FF,\n            trueGapless: util.isBitSet(buf, off + 23, 0)\n        };\n        header.lastFrameLength = header.trueGapless ? (Token.UINT32_LE.get(buf, 20) >>> 20) & 0x7FF : 0;\n        return header;\n    }\n};\n", "import initDebug from 'debug';\nimport { BasicParser } from '../../common/BasicParser.js';\nimport { tryParseApeHeader } from '../../apev2/APEv2Parser.js';\nimport { BitReader } from './BitReader.js';\nimport * as SV7 from './StreamVersion7.js';\nimport { MusepackContentError } from '../MusepackConentError.js';\nconst debug = initDebug('music-metadata:parser:musepack');\nexport class MpcSv7Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.bitreader = null;\n        this.audioLength = 0;\n        this.duration = null;\n    }\n    async parse() {\n        const header = await this.tokenizer.readToken(SV7.Header);\n        if (header.signature !== 'MP+')\n            throw new MusepackContentError('Unexpected magic number');\n        debug(`stream-version=${header.streamMajorVersion}.${header.streamMinorVersion}`);\n        this.metadata.setFormat('container', 'Musepack, SV7');\n        this.metadata.setFormat('sampleRate', header.sampleFrequency);\n        const numberOfSamples = 1152 * (header.frameCount - 1) + header.lastFrameLength;\n        this.metadata.setFormat('numberOfSamples', numberOfSamples);\n        this.duration = numberOfSamples / header.sampleFrequency;\n        this.metadata.setFormat('duration', this.duration);\n        this.bitreader = new BitReader(this.tokenizer);\n        this.metadata.setFormat('numberOfChannels', header.midSideStereo || header.intensityStereo ? 2 : 1);\n        const version = await this.bitreader.read(8);\n        this.metadata.setFormat('codec', (version / 100).toFixed(2));\n        await this.skipAudioData(header.frameCount);\n        debug(`End of audio stream, switching to APEv2, offset=${this.tokenizer.position}`);\n        return tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n    }\n    async skipAudioData(frameCount) {\n        while (frameCount-- > 0) {\n            const frameLength = await this.bitreader.read(20);\n            this.audioLength += 20 + frameLength;\n            await this.bitreader.ignore(frameLength);\n        }\n        // last frame\n        const lastFrameLength = await this.bitreader.read(11);\n        this.audioLength += lastFrameLength;\n        if (this.duration !== null) {\n            this.metadata.setFormat('bitrate', this.audioLength / this.duration);\n        }\n    }\n}\n", "import initDebug from 'debug';\nimport * as Token from 'token-types';\nimport { AbstractID3Parser } from '../id3v2/AbstractID3Parser.js';\nimport { MpcSv8Parser } from './sv8/MpcSv8Parser.js';\nimport { MpcSv7Parser } from './sv7/MpcSv7Parser.js';\nimport { MusepackContentError } from './MusepackConentError.js';\nconst debug = initDebug('music-metadata:parser:musepack');\nexport class MusepackParser extends AbstractID3Parser {\n    async postId3v2Parse() {\n        const signature = await this.tokenizer.peekToken(new Token.StringType(3, 'latin1'));\n        let mpcParser;\n        switch (signature) {\n            case 'MP+': {\n                debug('Stream-version 7');\n                mpcParser = new MpcSv7Parser(this.metadata, this.tokenizer, this.options);\n                break;\n            }\n            case 'MPC': {\n                debug('Stream-version 8');\n                mpcParser = new MpcSv8Parser(this.metadata, this.tokenizer, this.options);\n                break;\n            }\n            default: {\n                throw new MusepackContentError('Invalid signature prefix');\n            }\n        }\n        this.metadata.setAudioOnly();\n        return mpcParser.parse();\n    }\n}\n", "import * as Token from 'token-types';\nimport { makeUnexpectedFileContentError } from '../../ParseError.js';\nexport class OpusContentError extends makeUnexpectedFileContentError('Opus') {\n}\n/**\n * Opus ID Header parser\n * Ref: https://wiki.xiph.org/OggOpus#ID_Header\n */\nexport class IdHeader {\n    constructor(len) {\n        if (len < 19) {\n            throw new OpusContentError('ID-header-page 0 should be at least 19 bytes long');\n        }\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            magicSignature: new Token.StringType(8, 'ascii').get(buf, off + 0),\n            version: Token.UINT8.get(buf, off + 8),\n            channelCount: Token.UINT8.get(buf, off + 9),\n            preSkip: Token.UINT16_LE.get(buf, off + 10),\n            inputSampleRate: Token.UINT32_LE.get(buf, off + 12),\n            outputGain: Token.UINT16_LE.get(buf, off + 16),\n            channelMapping: Token.UINT8.get(buf, off + 18)\n        };\n    }\n}\n", "import * as Token from 'token-types';\nimport { VorbisStream } from '../vorbis/VorbisStream.js';\nimport * as Opus from './Opus.js';\nimport { OpusContentError } from './Opus.js';\n/**\n * Opus parser\n * Internet Engineering Task Force (IETF) - RFC 6716\n * Used by OggStream\n */\nexport class OpusStream extends VorbisStream {\n    constructor(metadata, options, tokenizer) {\n        super(metadata, options);\n        this.idHeader = null;\n        this.lastPos = -1;\n        this.tokenizer = tokenizer;\n        this.durationOnLastPage = true;\n    }\n    /**\n     * Parse first Opus Ogg page\n     * @param {IPageHeader} header\n     * @param {Uint8Array} pageData\n     */\n    parseFirstPage(_header, pageData) {\n        this.metadata.setFormat('codec', 'Opus');\n        // Parse Opus ID Header\n        this.idHeader = new Opus.IdHeader(pageData.length).get(pageData, 0);\n        if (this.idHeader.magicSignature !== \"OpusHead\")\n            throw new OpusContentError(\"Illegal ogg/Opus magic-signature\");\n        this.metadata.setFormat('sampleRate', this.idHeader.inputSampleRate);\n        this.metadata.setFormat('numberOfChannels', this.idHeader.channelCount);\n        this.metadata.setAudioOnly();\n    }\n    async parseFullPage(pageData) {\n        const magicSignature = new Token.StringType(8, 'ascii').get(pageData, 0);\n        switch (magicSignature) {\n            case 'OpusTags':\n                await this.parseUserCommentList(pageData, 8);\n                this.lastPos = this.tokenizer.position - pageData.length;\n                break;\n            default:\n                break;\n        }\n    }\n    calculateDuration() {\n        if (this.lastPageHeader && this.metadata.format.sampleRate && this.lastPageHeader.absoluteGranulePosition >= 0) {\n            // Calculate duration\n            const pos_48bit = this.lastPageHeader.absoluteGranulePosition - this.idHeader.preSkip;\n            this.metadata.setFormat('numberOfSamples', pos_48bit);\n            this.metadata.setFormat('duration', pos_48bit / 48000);\n            if (this.lastPos !== -1 && this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n                const dataSize = this.tokenizer.fileInfo.size - this.lastPos;\n                this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n            }\n        }\n    }\n}\n", "import * as Token from 'token-types';\nimport * as util from '../../common/Util.js';\n/**\n * Speex Header Packet\n * Ref: https://www.speex.org/docs/manual/speex-manual/node8.html#SECTION00830000000000000000\n */\nexport const Header = {\n    len: 80,\n    get: (buf, off) => {\n        return {\n            speex: new Token.StringType(8, 'ascii').get(buf, off + 0),\n            version: util.trimRightNull(new Token.StringType(20, 'ascii').get(buf, off + 8)),\n            version_id: Token.INT32_LE.get(buf, off + 28),\n            header_size: Token.INT32_LE.get(buf, off + 32),\n            rate: Token.INT32_LE.get(buf, off + 36),\n            mode: Token.INT32_LE.get(buf, off + 40),\n            mode_bitstream_version: Token.INT32_LE.get(buf, off + 44),\n            nb_channels: Token.INT32_LE.get(buf, off + 48),\n            bitrate: Token.INT32_LE.get(buf, off + 52),\n            frame_size: Token.INT32_LE.get(buf, off + 56),\n            vbr: Token.INT32_LE.get(buf, off + 60),\n            frames_per_packet: Token.INT32_LE.get(buf, off + 64),\n            extra_headers: Token.INT32_LE.get(buf, off + 68),\n            reserved1: Token.INT32_LE.get(buf, off + 72),\n            reserved2: Token.INT32_LE.get(buf, off + 76)\n        };\n    }\n};\n", "import initDebug from 'debug';\nimport { VorbisStream } from '../vorbis/VorbisStream.js';\nimport * as Speex from './Speex.js';\nconst debug = initDebug('music-metadata:parser:ogg:speex');\n/**\n * Speex, RFC 5574\n * Ref:\n * - https://www.speex.org/docs/manual/speex-manual/\n * - https://tools.ietf.org/html/rfc5574\n */\nexport class SpeexStream extends VorbisStream {\n    constructor(metadata, options, _tokenizer) {\n        super(metadata, options);\n    }\n    /**\n     * Parse first Speex Ogg page\n     * @param {IPageHeader} header\n     * @param {Uint8Array} pageData\n     */\n    parseFirstPage(_header, pageData) {\n        debug('First Ogg/Speex page');\n        const speexHeader = Speex.Header.get(pageData, 0);\n        this.metadata.setFormat('codec', `Speex ${speexHeader.version}`);\n        this.metadata.setFormat('numberOfChannels', speexHeader.nb_channels);\n        this.metadata.setFormat('sampleRate', speexHeader.rate);\n        if (speexHeader.bitrate !== -1) {\n            this.metadata.setFormat('bitrate', speexHeader.bitrate);\n        }\n        this.metadata.setAudioOnly();\n    }\n}\n", "import * as Token from 'token-types';\n/**\n * 6.2 Identification Header\n * Ref: https://theora.org/doc/Theora.pdf: 6.2 Identification Header Decode\n */\nexport const IdentificationHeader = {\n    len: 42,\n    get: (buf, off) => {\n        return {\n            id: new Token.StringType(7, 'ascii').get(buf, off),\n            vmaj: Token.UINT8.get(buf, off + 7),\n            vmin: Token.UINT8.get(buf, off + 8),\n            vrev: Token.UINT8.get(buf, off + 9),\n            vmbw: Token.UINT16_BE.get(buf, off + 10),\n            vmbh: Token.UINT16_BE.get(buf, off + 17),\n            nombr: Token.UINT24_BE.get(buf, off + 37),\n            nqual: Token.UINT8.get(buf, off + 40)\n        };\n    }\n};\n", "import initDebug from 'debug';\nimport { IdentificationHeader } from './Theora.js';\nconst debug = initDebug('music-metadata:parser:ogg:theora');\n/**\n * Ref:\n * - https://theora.org/doc/Theora.pdf\n */\nexport class TheoraStream {\n    constructor(metadata, _options, _tokenizer) {\n        this.durationOnLastPage = false;\n        this.metadata = metadata;\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    async parsePage(header, pageData) {\n        if (header.headerType.firstPage) {\n            await this.parseFirstPage(header, pageData);\n        }\n    }\n    calculateDuration() {\n        debug('duration calculation not implemented');\n    }\n    /**\n     * Parse first Theora Ogg page. the initial identification header packet\n     */\n    async parseFirstPage(_header, pageData) {\n        debug('First Ogg/Theora page');\n        this.metadata.setFormat('codec', 'Theora');\n        const idHeader = IdentificationHeader.get(pageData, 0);\n        this.metadata.setFormat('bitrate', idHeader.nombr);\n        this.metadata.setFormat('hasVideo', true);\n    }\n    flush() {\n        return Promise.resolve();\n    }\n}\n", "import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport { StringType } from 'token-types';\nexport const PageHeader = {\n    len: 27,\n    get: (buf, off) => {\n        return {\n            capturePattern: new StringType(4, 'latin1').get(buf, off),\n            version: Token.UINT8.get(buf, off + 4),\n            headerType: {\n                continued: util.getBit(buf, off + 5, 0),\n                firstPage: util.getBit(buf, off + 5, 1),\n                lastPage: util.getBit(buf, off + 5, 2)\n            },\n            // packet_flag: Token.UINT8.get(buf, off + 5),\n            absoluteGranulePosition: Number(Token.UINT64_LE.get(buf, off + 6)),\n            streamSerialNumber: Token.UINT32_LE.get(buf, off + 14),\n            pageSequenceNo: Token.UINT32_LE.get(buf, off + 18),\n            pageChecksum: Token.UINT32_LE.get(buf, off + 22),\n            page_segments: Token.UINT8.get(buf, off + 26)\n        };\n    }\n};\nexport class SegmentTable {\n    static sum(buf, off, len) {\n        const dv = new DataView(buf.buffer, 0);\n        let s = 0;\n        for (let i = off; i < off + len; ++i) {\n            s += dv.getUint8(i);\n        }\n        return s;\n    }\n    constructor(header) {\n        this.len = header.page_segments;\n    }\n    get(buf, off) {\n        return {\n            totalPageSize: SegmentTable.sum(buf, off, this.len)\n        };\n    }\n}\n", "import initDebug from 'debug';\nimport * as Flac from '../../flac/FlacToken.js';\nimport { FlacParser } from '../../flac/FlacParser.js';\nimport { FourCcToken } from '../../common/FourCC.js';\nimport { VorbisPictureToken } from '../vorbis/Vorbis.js';\nconst debug = initDebug('music-metadata:parser:ogg:theora');\n/**\n * Ref:\n * - https://xiph.org/flac/ogg_mapping.html\n */\nexport class FlacStream {\n    constructor(metadata, options, tokenizer) {\n        this.durationOnLastPage = false;\n        this.metadata = metadata;\n        this.options = options;\n        this.tokenizer = tokenizer;\n        this.flacParser = new FlacParser(this.metadata, this.tokenizer, options);\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    async parsePage(header, pageData) {\n        if (header.headerType.firstPage) {\n            await this.parseFirstPage(header, pageData);\n        }\n    }\n    calculateDuration() {\n        debug('duration calculation not implemented');\n    }\n    /**\n     * Parse first Theora Ogg page. the initial identification header packet\n     */\n    async parseFirstPage(_header, pageData) {\n        debug('First Ogg/FLAC page');\n        const fourCC = await FourCcToken.get(pageData, 9);\n        if (fourCC.toString() !== 'fLaC') {\n            throw new Error('Invalid FLAC preamble');\n        }\n        const blockHeader = await Flac.BlockHeader.get(pageData, 13);\n        await this.parseDataBlock(blockHeader, pageData.subarray(13 + Flac.BlockHeader.len));\n    }\n    async parseDataBlock(blockHeader, pageData) {\n        debug(`blockHeader type=${blockHeader.type}, length=${blockHeader.length}`);\n        switch (blockHeader.type) {\n            case Flac.BlockType.STREAMINFO: {\n                const streamInfo = Flac.BlockStreamInfo.get(pageData, 0);\n                return this.flacParser.processsStreamInfo(streamInfo);\n            }\n            case Flac.BlockType.PADDING:\n                break;\n            case Flac.BlockType.APPLICATION:\n                break;\n            case Flac.BlockType.SEEKTABLE:\n                break;\n            case Flac.BlockType.VORBIS_COMMENT:\n                return this.flacParser.parseComment(pageData);\n            case Flac.BlockType.PICTURE:\n                if (!this.options.skipCovers) {\n                    const picture = new VorbisPictureToken(pageData.length).get(pageData, 0);\n                    return this.flacParser.addPictureTag(picture);\n                }\n                break;\n            default:\n                this.metadata.addWarning(`Unknown block type: ${blockHeader.type}`);\n        }\n        // Ignore data block\n        return this.tokenizer.ignore(blockHeader.length).then();\n    }\n    flush() {\n        return Promise.resolve();\n    }\n}\n", "import * as Token from 'token-types';\nimport { EndOfStreamError } from 'strtok3';\nimport initDebug from 'debug';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { VorbisStream } from './vorbis/VorbisStream.js';\nimport { OpusStream } from './opus/OpusStream.js';\nimport { SpeexStream } from './speex/SpeexStream.js';\nimport { TheoraStream } from './theora/TheoraStream.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nimport { PageHeader, SegmentTable } from './OggToken.js';\nimport { FlacStream } from './flac/FlacStream.js';\nexport class OggContentError extends makeUnexpectedFileContentError('Ogg') {\n}\nconst debug = initDebug('music-metadata:parser:ogg');\nclass OggStream {\n    constructor(metadata, streamSerial, options) {\n        this.pageNumber = 0;\n        this.closed = false;\n        this.metadata = metadata;\n        this.streamSerial = streamSerial;\n        this.options = options;\n    }\n    async parsePage(tokenizer, header) {\n        this.pageNumber = header.pageSequenceNo;\n        debug('serial=%s page#=%s, Ogg.id=%s', header.streamSerialNumber, header.pageSequenceNo, header.capturePattern);\n        const segmentTable = await tokenizer.readToken(new SegmentTable(header));\n        debug('totalPageSize=%s', segmentTable.totalPageSize);\n        const pageData = await tokenizer.readToken(new Token.Uint8ArrayType(segmentTable.totalPageSize));\n        debug('firstPage=%s, lastPage=%s, continued=%s', header.headerType.firstPage, header.headerType.lastPage, header.headerType.continued);\n        if (header.headerType.firstPage) {\n            this.metadata.setFormat('container', 'Ogg');\n            const idData = pageData.subarray(0, 7); // Copy this portion\n            const asciiId = Array.from(idData)\n                .filter(b => b >= 32 && b <= 126) // Keep only printable ASCII\n                .map(b => String.fromCharCode(b))\n                .join('');\n            switch (asciiId) {\n                case 'vorbis': // Ogg/Vorbis\n                    debug(`Set Ogg stream serial ${header.streamSerialNumber}, codec=Vorbis`);\n                    this.pageConsumer = new VorbisStream(this.metadata, this.options);\n                    break;\n                case 'OpusHea': // Ogg/Opus\n                    debug('Set page consumer to Ogg/Opus');\n                    this.pageConsumer = new OpusStream(this.metadata, this.options, tokenizer);\n                    break;\n                case 'Speex  ': // Ogg/Speex\n                    debug('Set page consumer to Ogg/Speex');\n                    this.pageConsumer = new SpeexStream(this.metadata, this.options, tokenizer);\n                    break;\n                case 'fishead':\n                case 'theora': // Ogg/Theora\n                    debug('Set page consumer to Ogg/Theora');\n                    this.pageConsumer = new TheoraStream(this.metadata, this.options, tokenizer);\n                    break;\n                case 'FLAC': // Ogg/Theora\n                    debug('Set page consumer to Vorbis');\n                    this.pageConsumer = new FlacStream(this.metadata, this.options, tokenizer);\n                    break;\n                default:\n                    throw new OggContentError(`Ogg codec not recognized (id=${asciiId}`);\n            }\n        }\n        if (header.headerType.lastPage) {\n            this.closed = true;\n        }\n        if (this.pageConsumer) {\n            await this.pageConsumer.parsePage(header, pageData);\n        }\n        else\n            throw new Error('pageConsumer should be initialized');\n    }\n}\n/**\n * Parser for Ogg logical bitstream framing\n */\nexport class OggParser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.streams = new Map();\n    }\n    /**\n     * Parse page\n     * @returns {Promise<void>}\n     */\n    async parse() {\n        this.streams = new Map();\n        let header;\n        try {\n            do {\n                header = await this.tokenizer.readToken(PageHeader);\n                if (header.capturePattern !== 'OggS')\n                    throw new OggContentError('Invalid Ogg capture pattern');\n                let stream = this.streams.get(header.streamSerialNumber);\n                if (!stream) {\n                    stream = new OggStream(this.metadata, header.streamSerialNumber, this.options);\n                    this.streams.set(header.streamSerialNumber, stream);\n                }\n                await stream.parsePage(this.tokenizer, header);\n                if (stream.pageNumber > 12 && !(this.options.duration && [...this.streams.values()].find(stream => stream.pageConsumer?.durationOnLastPage))) {\n                    debug(\"Stop processing Ogg stream\");\n                    break;\n                }\n            } while (![...this.streams.values()].every(item => item.closed));\n        }\n        catch (err) {\n            if (err instanceof EndOfStreamError) {\n                debug(\"Reached end-of-stream\");\n            }\n            else if (err instanceof OggContentError) {\n                this.metadata.addWarning(`Corrupt Ogg content at ${this.tokenizer.position}`);\n            }\n            else\n                throw err;\n        }\n        for (const stream of this.streams.values()) {\n            if (!stream.closed) {\n                this.metadata.addWarning(`End-of-stream reached before reaching last page in Ogg stream serial=${stream.streamSerial}`);\n                await stream.pageConsumer?.flush();\n            }\n            stream.pageConsumer?.calculateDuration();\n        }\n    }\n}\n", "import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\nconst SampleRates = [6000, 8000, 9600, 11025, 12000, 16000, 22050, 24000, 32000, 44100,\n    48000, 64000, 88200, 96000, 192000, -1];\n/**\n * WavPack Block Header\n *\n * 32-byte little-endian header at the front of every WavPack block\n *\n * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf (page 2/6: 2.0 \"Block Header\")\n */\nexport const BlockHeaderToken = {\n    len: 32,\n    get: (buf, off) => {\n        const flags = Token.UINT32_LE.get(buf, off + 24);\n        const res = {\n            // should equal 'wvpk'\n            BlockID: FourCcToken.get(buf, off),\n            //  0x402 to 0x410 are valid for decode\n            blockSize: Token.UINT32_LE.get(buf, off + 4),\n            //  0x402 (1026) to 0x410 are valid for decode\n            version: Token.UINT16_LE.get(buf, off + 8),\n            //  40-bit total samples for entire file (if block_index == 0 and a value of -1 indicates an unknown length)\n            totalSamples: /* replace with bigint? (Token.UINT8.get(buf, off + 11) << 32) + */ Token.UINT32_LE.get(buf, off + 12),\n            // 40-bit block_index\n            blockIndex: /* replace with bigint? (Token.UINT8.get(buf, off + 10) << 32) + */ Token.UINT32_LE.get(buf, off + 16),\n            // 40-bit total samples for entire file (if block_index == 0 and a value of -1 indicates an unknown length)\n            blockSamples: Token.UINT32_LE.get(buf, off + 20),\n            // various flags for id and decoding\n            flags: {\n                bitsPerSample: (1 + getBitAllignedNumber(flags, 0, 2)) * 8,\n                isMono: isBitSet(flags, 2),\n                isHybrid: isBitSet(flags, 3),\n                isJointStereo: isBitSet(flags, 4),\n                crossChannel: isBitSet(flags, 5),\n                hybridNoiseShaping: isBitSet(flags, 6),\n                floatingPoint: isBitSet(flags, 7),\n                samplingRate: SampleRates[getBitAllignedNumber(flags, 23, 4)],\n                isDSD: isBitSet(flags, 31)\n            },\n            // crc for actual decoded data\n            crc: new Token.Uint8ArrayType(4).get(buf, off + 28)\n        };\n        if (res.flags.isDSD) {\n            res.totalSamples *= 8;\n        }\n        return res;\n    }\n};\n/**\n * 3.0 Metadata Sub-Blocks\n * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf (page 4/6: 3.0 \"Metadata Sub-Block\")\n */\nexport const MetadataIdToken = {\n    len: 1,\n    get: (buf, off) => {\n        return {\n            functionId: getBitAllignedNumber(buf[off], 0, 6), // functionId overlaps with isOptional flag\n            isOptional: isBitSet(buf[off], 5),\n            isOddSize: isBitSet(buf[off], 6),\n            largeBlock: isBitSet(buf[off], 7)\n        };\n    }\n};\nfunction isBitSet(flags, bitOffset) {\n    return getBitAllignedNumber(flags, bitOffset, 1) === 1;\n}\nfunction getBitAllignedNumber(flags, bitOffset, len) {\n    return (flags >>> bitOffset) & (0xffffffff >>> (32 - len));\n}\n", "import * as Token from 'token-types';\nimport { tryParseApeHeader } from '../apev2/APEv2Parser.js';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { BlockHeaderToken, MetadataIdToken } from './WavPackToken.js';\nimport initDebug from 'debug';\nimport { uint8ArrayToHex } from 'uint8array-extras';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:WavPack');\nexport class WavPackContentError extends makeUnexpectedFileContentError('WavPack') {\n}\n/**\n * WavPack Parser\n */\nexport class WavPackParser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.audioDataSize = 0;\n    }\n    async parse() {\n        this.metadata.setAudioOnly();\n        this.audioDataSize = 0;\n        // First parse all WavPack blocks\n        await this.parseWavPackBlocks();\n        // try to parse APEv2 header\n        return tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n    }\n    async parseWavPackBlocks() {\n        do {\n            const blockId = await this.tokenizer.peekToken(FourCcToken);\n            if (blockId !== 'wvpk')\n                break;\n            const header = await this.tokenizer.readToken(BlockHeaderToken);\n            if (header.BlockID !== 'wvpk')\n                throw new WavPackContentError('Invalid WavPack Block-ID');\n            debug(`WavPack header blockIndex=${header.blockIndex}, len=${BlockHeaderToken.len}`);\n            if (header.blockIndex === 0 && !this.metadata.format.container) {\n                this.metadata.setFormat('container', 'WavPack');\n                this.metadata.setFormat('lossless', !header.flags.isHybrid);\n                // tagTypes: this.type,\n                this.metadata.setFormat('bitsPerSample', header.flags.bitsPerSample);\n                if (!header.flags.isDSD) {\n                    // In case isDSD, these values will ne set in ID_DSD_BLOCK\n                    this.metadata.setFormat('sampleRate', header.flags.samplingRate);\n                    this.metadata.setFormat('duration', header.totalSamples / header.flags.samplingRate);\n                }\n                this.metadata.setFormat('numberOfChannels', header.flags.isMono ? 1 : 2);\n                this.metadata.setFormat('numberOfSamples', header.totalSamples);\n                this.metadata.setFormat('codec', header.flags.isDSD ? 'DSD' : 'PCM');\n            }\n            const ignoreBytes = header.blockSize - (BlockHeaderToken.len - 8);\n            await (header.blockIndex === 0 ? this.parseMetadataSubBlock(header, ignoreBytes) : this.tokenizer.ignore(ignoreBytes));\n            if (header.blockSamples > 0) {\n                this.audioDataSize += header.blockSize; // Count audio data for bit-rate calculation\n            }\n        } while (!this.tokenizer.fileInfo.size || this.tokenizer.fileInfo.size - this.tokenizer.position >= BlockHeaderToken.len);\n        if (this.metadata.format.duration) {\n            this.metadata.setFormat('bitrate', this.audioDataSize * 8 / this.metadata.format.duration);\n        }\n    }\n    /**\n     * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf, 3.0 Metadata Sub-blocks\n     * @param header Header\n     * @param remainingLength Remaining length\n     */\n    async parseMetadataSubBlock(header, remainingLength) {\n        let remaining = remainingLength;\n        while (remaining > MetadataIdToken.len) {\n            const id = await this.tokenizer.readToken(MetadataIdToken);\n            const dataSizeInWords = await this.tokenizer.readNumber(id.largeBlock ? Token.UINT24_LE : Token.UINT8);\n            const data = new Uint8Array(dataSizeInWords * 2 - (id.isOddSize ? 1 : 0));\n            await this.tokenizer.readBuffer(data);\n            debug(`Metadata Sub-Blocks functionId=0x${id.functionId.toString(16)}, id.largeBlock=${id.largeBlock},data-size=${data.length}`);\n            switch (id.functionId) {\n                case 0x0: // ID_DUMMY: could be used to pad WavPack blocks\n                    break;\n                case 0xe: { // ID_DSD_BLOCK\n                    debug('ID_DSD_BLOCK');\n                    // https://github.com/dbry/WavPack/issues/71#issuecomment-483094813\n                    const mp = 1 << Token.UINT8.get(data, 0);\n                    const samplingRate = header.flags.samplingRate * mp * 8; // ToDo: second factor should be read from DSD-metadata block https://github.com/dbry/WavPack/issues/71#issuecomment-483094813\n                    if (!header.flags.isDSD)\n                        throw new WavPackContentError('Only expect DSD block if DSD-flag is set');\n                    this.metadata.setFormat('sampleRate', samplingRate);\n                    this.metadata.setFormat('duration', header.totalSamples / samplingRate);\n                    break;\n                }\n                case 0x24: // ID_ALT_TRAILER: maybe used to embed original ID3 tag header\n                    debug('ID_ALT_TRAILER: trailer for non-wav files');\n                    break;\n                case 0x26: // ID_MD5_CHECKSUM\n                    this.metadata.setFormat('audioMD5', data);\n                    break;\n                case 0x2f: // ID_BLOCK_CHECKSUM\n                    debug(`ID_BLOCK_CHECKSUM: checksum=${uint8ArrayToHex(data)}`);\n                    break;\n                default:\n                    debug(`Ignore unsupported meta-sub-block-id functionId=0x${id.functionId.toString(16)}`);\n                    break;\n            }\n            remaining -= MetadataIdToken.len + (id.largeBlock ? Token.UINT24_LE.len : Token.UINT8.len) + dataSizeInWords * 2;\n            debug(`remainingLength=${remaining}`);\n            if (id.isOddSize)\n                this.tokenizer.ignore(1);\n        }\n        if (remaining !== 0)\n            throw new WavPackContentError('metadata-sub-block should fit it remaining length');\n    }\n}\n", "import * as Token from 'token-types';\n/**\n * Common RIFF chunk header\n */\nexport const Header = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Group-ID\n            chunkID: new Token.StringType(4, 'latin1').get(buf, off),\n            // Size\n            chunkSize: Token.UINT32_LE.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Token to parse RIFF-INFO tag value\n */\nexport class ListInfoTagValue {\n    constructor(tagHeader) {\n        this.tagHeader = tagHeader;\n        this.len = tagHeader.chunkSize;\n        this.len += this.len & 1; // if it is an odd length, round up to even\n    }\n    get(buf, off) {\n        return new Token.StringType(this.tagHeader.chunkSize, 'ascii').get(buf, off);\n    }\n}\n", "import * as Token from 'token-types';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class WaveContentError extends makeUnexpectedFileContentError('Wave') {\n}\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd317599(v=vs.85).aspx\n */\nexport const WaveFormat = {\n    PCM: 0x0001,\n    // MPEG-4 and AAC Audio Types\n    ADPCM: 0x0002,\n    IEEE_FLOAT: 0x0003,\n    MPEG_ADTS_AAC: 0x1600,\n    MPEG_LOAS: 0x1602,\n    RAW_AAC1: 0x00FF,\n    // Dolby Audio Types\n    DOLBY_AC3_SPDIF: 0x0092,\n    DVM: 0x2000,\n    RAW_SPORT: 0x0240,\n    ESST_AC3: 0x0241,\n    DRM: 0x0009,\n    DTS2: 0x2001,\n    MPEG: 0x0050\n};\nexport const WaveFormatNameMap = {\n    [WaveFormat.PCM]: 'PCM',\n    [WaveFormat.ADPCM]: 'ADPCM',\n    [WaveFormat.IEEE_FLOAT]: 'IEEE_FLOAT',\n    [WaveFormat.MPEG_ADTS_AAC]: 'MPEG_ADTS_AAC',\n    [WaveFormat.MPEG_LOAS]: 'MPEG_LOAS',\n    [WaveFormat.RAW_AAC1]: 'RAW_AAC1',\n    [WaveFormat.DOLBY_AC3_SPDIF]: 'DOLBY_AC3_SPDIF',\n    [WaveFormat.DVM]: 'DVM',\n    [WaveFormat.RAW_SPORT]: 'RAW_SPORT',\n    [WaveFormat.ESST_AC3]: 'ESST_AC3',\n    [WaveFormat.DRM]: 'DRM',\n    [WaveFormat.DTS2]: 'DTS2',\n    [WaveFormat.MPEG]: 'MPEG'\n};\n/**\n * format chunk; chunk-id is \"fmt \"\n * http://soundfile.sapp.org/doc/WaveFormat/\n */\nexport class Format {\n    constructor(header) {\n        if (header.chunkSize < 16)\n            throw new WaveContentError('Invalid chunk size');\n        this.len = header.chunkSize;\n    }\n    get(buf, off) {\n        return {\n            wFormatTag: Token.UINT16_LE.get(buf, off),\n            nChannels: Token.UINT16_LE.get(buf, off + 2),\n            nSamplesPerSec: Token.UINT32_LE.get(buf, off + 4),\n            nAvgBytesPerSec: Token.UINT32_LE.get(buf, off + 8),\n            nBlockAlign: Token.UINT16_LE.get(buf, off + 12),\n            wBitsPerSample: Token.UINT16_LE.get(buf, off + 14)\n        };\n    }\n}\n/**\n * Fact chunk; chunk-id is \"fact\"\n * http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/WAVE/WAVE.html\n * http://www.recordingblogs.com/wiki/fact-chunk-of-a-wave-file\n */\nexport class FactChunk {\n    constructor(header) {\n        if (header.chunkSize < 4) {\n            throw new WaveContentError('Invalid fact chunk size.');\n        }\n        this.len = header.chunkSize;\n    }\n    get(buf, off) {\n        return {\n            dwSampleLength: Token.UINT32_LE.get(buf, off)\n        };\n    }\n}\n", "import * as Token from 'token-types';\nimport { stripNulls } from '../common/Util.js';\n/**\n * Broadcast Audio Extension Chunk\n * Ref: https://tech.ebu.ch/docs/tech/tech3285.pdf\n */\nexport const BroadcastAudioExtensionChunk = {\n    len: 420,\n    get: (uint8array, off) => {\n        return {\n            description: stripNulls(new Token.StringType(256, 'ascii').get(uint8array, off)).trim(),\n            originator: stripNulls(new Token.StringType(32, 'ascii').get(uint8array, off + 256)).trim(),\n            originatorReference: stripNulls(new Token.StringType(32, 'ascii').get(uint8array, off + 288)).trim(),\n            originationDate: stripNulls(new Token.StringType(10, 'ascii').get(uint8array, off + 320)).trim(),\n            originationTime: stripNulls(new Token.StringType(8, 'ascii').get(uint8array, off + 330)).trim(),\n            timeReferenceLow: Token.UINT32_LE.get(uint8array, off + 338),\n            timeReferenceHigh: Token.UINT32_LE.get(uint8array, off + 342),\n            version: Token.UINT16_LE.get(uint8array, off + 346),\n            umid: new Token.Uint8ArrayType(64).get(uint8array, off + 348),\n            loudnessValue: Token.UINT16_LE.get(uint8array, off + 412),\n            maxTruePeakLevel: Token.UINT16_LE.get(uint8array, off + 414),\n            maxMomentaryLoudness: Token.UINT16_LE.get(uint8array, off + 416),\n            maxShortTermLoudness: Token.UINT16_LE.get(uint8array, off + 418)\n        };\n    }\n};\n", "import * as strtok3 from 'strtok3';\nimport * as Token from 'token-types';\nimport initDebug from 'debug';\nimport * as riff from '../riff/RiffChunk.js';\nimport * as WaveChunk from './WaveChunk.js';\nimport { ID3v2Parser } from '../id3v2/ID3v2Parser.js';\nimport * as util from '../common/Util.js';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { BroadcastAudioExtensionChunk } from './BwfChunk.js';\nimport { WaveContentError } from './WaveChunk.js';\nconst debug = initDebug('music-metadata:parser:RIFF');\n/**\n * Resource Interchange File Format (RIFF) Parser\n *\n * WAVE PCM soundfile format\n *\n * Ref:\n * - http://www.johnloomis.org/cpe102/asgn/asgn1/riff.html\n * - http://soundfile.sapp.org/doc/WaveFormat\n *\n * ToDo: Split WAVE part from RIFF parser\n */\nexport class WaveParser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.blockAlign = 0;\n    }\n    async parse() {\n        const riffHeader = await this.tokenizer.readToken(riff.Header);\n        debug(`pos=${this.tokenizer.position}, parse: chunkID=${riffHeader.chunkID}`);\n        if (riffHeader.chunkID !== 'RIFF')\n            return; // Not RIFF format\n        this.metadata.setAudioOnly();\n        return this.parseRiffChunk(riffHeader.chunkSize).catch(err => {\n            if (!(err instanceof strtok3.EndOfStreamError)) {\n                throw err;\n            }\n        });\n    }\n    async parseRiffChunk(chunkSize) {\n        const type = await this.tokenizer.readToken(FourCcToken);\n        this.metadata.setFormat('container', type);\n        switch (type) {\n            case 'WAVE':\n                return this.readWaveChunk(chunkSize - FourCcToken.len);\n            default:\n                throw new WaveContentError(`Unsupported RIFF format: RIFF/${type}`);\n        }\n    }\n    async readWaveChunk(remaining) {\n        while (remaining >= riff.Header.len) {\n            const header = await this.tokenizer.readToken(riff.Header);\n            remaining -= riff.Header.len + header.chunkSize;\n            if (header.chunkSize > remaining) {\n                this.metadata.addWarning('Data chunk size exceeds file size');\n            }\n            this.header = header;\n            debug(`pos=${this.tokenizer.position}, readChunk: chunkID=RIFF/WAVE/${header.chunkID}`);\n            switch (header.chunkID) {\n                case 'LIST':\n                    await this.parseListTag(header);\n                    break;\n                case 'fact': // extended Format chunk,\n                    this.metadata.setFormat('lossless', false);\n                    this.fact = await this.tokenizer.readToken(new WaveChunk.FactChunk(header));\n                    break;\n                case 'fmt ': { // The Util Chunk, non-PCM Formats\n                    const fmt = await this.tokenizer.readToken(new WaveChunk.Format(header));\n                    let subFormat = WaveChunk.WaveFormatNameMap[fmt.wFormatTag];\n                    if (!subFormat) {\n                        debug(`WAVE/non-PCM format=${fmt.wFormatTag}`);\n                        subFormat = `non-PCM (${fmt.wFormatTag})`;\n                    }\n                    this.metadata.setFormat('codec', subFormat);\n                    this.metadata.setFormat('bitsPerSample', fmt.wBitsPerSample);\n                    this.metadata.setFormat('sampleRate', fmt.nSamplesPerSec);\n                    this.metadata.setFormat('numberOfChannels', fmt.nChannels);\n                    this.metadata.setFormat('bitrate', fmt.nBlockAlign * fmt.nSamplesPerSec * 8);\n                    this.blockAlign = fmt.nBlockAlign;\n                    break;\n                }\n                case 'id3 ': // The way Picard, FooBar currently stores, ID3 meta-data\n                case 'ID3 ': { // The way Mp3Tags stores ID3 meta-data\n                    const id3_data = await this.tokenizer.readToken(new Token.Uint8ArrayType(header.chunkSize));\n                    const rst = strtok3.fromBuffer(id3_data);\n                    await new ID3v2Parser().parse(this.metadata, rst, this.options);\n                    break;\n                }\n                case 'data': { // PCM-data\n                    if (this.metadata.format.lossless !== false) {\n                        this.metadata.setFormat('lossless', true);\n                    }\n                    let chunkSize = header.chunkSize;\n                    if (this.tokenizer.fileInfo.size) {\n                        const calcRemaining = this.tokenizer.fileInfo.size - this.tokenizer.position;\n                        if (calcRemaining < chunkSize) {\n                            this.metadata.addWarning('data chunk length exceeding file length');\n                            chunkSize = calcRemaining;\n                        }\n                    }\n                    const numberOfSamples = this.fact ? this.fact.dwSampleLength : (chunkSize === 0xffffffff ? undefined : chunkSize / this.blockAlign);\n                    if (numberOfSamples) {\n                        this.metadata.setFormat('numberOfSamples', numberOfSamples);\n                        if (this.metadata.format.sampleRate) {\n                            this.metadata.setFormat('duration', numberOfSamples / this.metadata.format.sampleRate);\n                        }\n                    }\n                    if (this.metadata.format.codec === 'ADPCM') { // ADPCM is 4 bits lossy encoding resulting in 352kbps\n                        this.metadata.setFormat('bitrate', 352000);\n                    }\n                    else if (this.metadata.format.sampleRate) {\n                        this.metadata.setFormat('bitrate', this.blockAlign * this.metadata.format.sampleRate * 8);\n                    }\n                    await this.tokenizer.ignore(header.chunkSize);\n                    break;\n                }\n                case 'bext': { // Broadcast Audio Extension chunk\thttps://tech.ebu.ch/docs/tech/tech3285.pdf\n                    const bext = await this.tokenizer.readToken(BroadcastAudioExtensionChunk);\n                    Object.keys(bext).forEach(key => {\n                        this.metadata.addTag('exif', `bext.${key}`, bext[key]);\n                    });\n                    const bextRemaining = header.chunkSize - BroadcastAudioExtensionChunk.len;\n                    await this.tokenizer.ignore(bextRemaining);\n                    break;\n                }\n                case '\\x00\\x00\\x00\\x00': // padding ??\n                    debug(`Ignore padding chunk: RIFF/${header.chunkID} of ${header.chunkSize} bytes`);\n                    this.metadata.addWarning(`Ignore chunk: RIFF/${header.chunkID}`);\n                    await this.tokenizer.ignore(header.chunkSize);\n                    break;\n                default:\n                    debug(`Ignore chunk: RIFF/${header.chunkID} of ${header.chunkSize} bytes`);\n                    this.metadata.addWarning(`Ignore chunk: RIFF/${header.chunkID}`);\n                    await this.tokenizer.ignore(header.chunkSize);\n            }\n            if (this.header.chunkSize % 2 === 1) {\n                debug('Read odd padding byte'); // https://wiki.multimedia.cx/index.php/RIFF\n                await this.tokenizer.ignore(1);\n            }\n        }\n    }\n    async parseListTag(listHeader) {\n        const listType = await this.tokenizer.readToken(new Token.StringType(4, 'latin1'));\n        debug('pos=%s, parseListTag: chunkID=RIFF/WAVE/LIST/%s', this.tokenizer.position, listType);\n        switch (listType) {\n            case 'INFO':\n                return this.parseRiffInfoTags(listHeader.chunkSize - 4);\n            default:\n                this.metadata.addWarning(`Ignore chunk: RIFF/WAVE/LIST/${listType}`);\n                debug(`Ignoring chunkID=RIFF/WAVE/LIST/${listType}`);\n                return this.tokenizer.ignore(listHeader.chunkSize - 4).then();\n        }\n    }\n    async parseRiffInfoTags(chunkSize) {\n        while (chunkSize >= 8) {\n            const header = await this.tokenizer.readToken(riff.Header);\n            const valueToken = new riff.ListInfoTagValue(header);\n            const value = await this.tokenizer.readToken(valueToken);\n            this.addTag(header.chunkID, util.stripNulls(value));\n            chunkSize -= (8 + valueToken.len);\n        }\n        if (chunkSize !== 0) {\n            throw new WaveContentError(`Illegal remaining size: ${chunkSize}`);\n        }\n    }\n    addTag(id, value) {\n        this.metadata.addTag('exif', id, value);\n    }\n}\n", "// src/deskthing.ts\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport { Worker } from \"worker_threads\";\n\n// node_modules/@deskthing/types/dist/apps/appSettings.js\nvar SETTING_TYPES;\n(function(SETTING_TYPES2) {\n  SETTING_TYPES2[\"BOOLEAN\"] = \"boolean\";\n  SETTING_TYPES2[\"NUMBER\"] = \"number\";\n  SETTING_TYPES2[\"STRING\"] = \"string\";\n  SETTING_TYPES2[\"RANGE\"] = \"range\";\n  SETTING_TYPES2[\"SELECT\"] = \"select\";\n  SETTING_TYPES2[\"MULTISELECT\"] = \"multiselect\";\n  SETTING_TYPES2[\"LIST\"] = \"list\";\n  SETTING_TYPES2[\"RANKED\"] = \"ranked\";\n  SETTING_TYPES2[\"COLOR\"] = \"color\";\n  SETTING_TYPES2[\"FILE\"] = \"file\";\n})(SETTING_TYPES || (SETTING_TYPES = {}));\n\n// node_modules/@deskthing/types/dist/apps/appTasks.js\nvar STEP_TYPES;\n(function(STEP_TYPES2) {\n  STEP_TYPES2[\"ACTION\"] = \"action\";\n  STEP_TYPES2[\"SHORTCUT\"] = \"shortcut\";\n  STEP_TYPES2[\"SETTING\"] = \"setting\";\n  STEP_TYPES2[\"TASK\"] = \"task\";\n  STEP_TYPES2[\"EXTERNAL\"] = \"external\";\n  STEP_TYPES2[\"STEP\"] = \"step\";\n})(STEP_TYPES || (STEP_TYPES = {}));\n\n// node_modules/@deskthing/types/dist/apps/appTransit.js\nvar APP_REQUESTS;\n(function(APP_REQUESTS2) {\n  APP_REQUESTS2[\"DEFAULT\"] = \"default\";\n  APP_REQUESTS2[\"GET\"] = \"get\";\n  APP_REQUESTS2[\"SET\"] = \"set\";\n  APP_REQUESTS2[\"DELETE\"] = \"delete\";\n  APP_REQUESTS2[\"OPEN\"] = \"open\";\n  APP_REQUESTS2[\"SEND\"] = \"send\";\n  APP_REQUESTS2[\"TOAPP\"] = \"toApp\";\n  APP_REQUESTS2[\"LOG\"] = \"log\";\n  APP_REQUESTS2[\"KEY\"] = \"key\";\n  APP_REQUESTS2[\"ACTION\"] = \"action\";\n  APP_REQUESTS2[\"TASK\"] = \"task\";\n  APP_REQUESTS2[\"STEP\"] = \"step\";\n  APP_REQUESTS2[\"SONG\"] = \"song\";\n})(APP_REQUESTS || (APP_REQUESTS = {}));\n\n// node_modules/@deskthing/types/dist/deskthing/deskthingTransit.js\nvar DESKTHING_DEVICE;\n(function(DESKTHING_DEVICE2) {\n  DESKTHING_DEVICE2[\"GLOBAL_SETTINGS\"] = \"global_settings\";\n  DESKTHING_DEVICE2[\"MAPPINGS\"] = \"button_mappings\";\n  DESKTHING_DEVICE2[\"CONFIG\"] = \"configuration\";\n  DESKTHING_DEVICE2[\"GET\"] = \"get\";\n  DESKTHING_DEVICE2[\"ERROR\"] = \"error\";\n  DESKTHING_DEVICE2[\"PONG\"] = \"pong\";\n  DESKTHING_DEVICE2[\"PING\"] = \"ping\";\n  DESKTHING_DEVICE2[\"SETTINGS\"] = \"settings\";\n  DESKTHING_DEVICE2[\"APPS\"] = \"apps\";\n  DESKTHING_DEVICE2[\"TIME\"] = \"time\";\n  DESKTHING_DEVICE2[\"HEARTBEAT\"] = \"heartbeat\";\n  DESKTHING_DEVICE2[\"META_DATA\"] = \"meta_data\";\n  DESKTHING_DEVICE2[\"MUSIC\"] = \"music\";\n  DESKTHING_DEVICE2[\"ICON\"] = \"icon\";\n})(DESKTHING_DEVICE || (DESKTHING_DEVICE = {}));\nvar DESKTHING_EVENTS;\n(function(DESKTHING_EVENTS2) {\n  DESKTHING_EVENTS2[\"MESSAGE\"] = \"message\";\n  DESKTHING_EVENTS2[\"DATA\"] = \"data\";\n  DESKTHING_EVENTS2[\"APPDATA\"] = \"appdata\";\n  DESKTHING_EVENTS2[\"CALLBACK_DATA\"] = \"callback-data\";\n  DESKTHING_EVENTS2[\"START\"] = \"start\";\n  DESKTHING_EVENTS2[\"STOP\"] = \"stop\";\n  DESKTHING_EVENTS2[\"PURGE\"] = \"purge\";\n  DESKTHING_EVENTS2[\"INPUT\"] = \"input\";\n  DESKTHING_EVENTS2[\"ACTION\"] = \"action\";\n  DESKTHING_EVENTS2[\"CONFIG\"] = \"config\";\n  DESKTHING_EVENTS2[\"SETTINGS\"] = \"settings\";\n  DESKTHING_EVENTS2[\"TASKS\"] = \"tasks\";\n  DESKTHING_EVENTS2[\"CLIENT_STATUS\"] = \"client_status\";\n})(DESKTHING_EVENTS || (DESKTHING_EVENTS = {}));\n\n// node_modules/@deskthing/types/dist/deskthing/mappings.js\nvar EventFlavor;\n(function(EventFlavor2) {\n  EventFlavor2[EventFlavor2[\"KeyUp\"] = 0] = \"KeyUp\";\n  EventFlavor2[EventFlavor2[\"KeyDown\"] = 1] = \"KeyDown\";\n  EventFlavor2[EventFlavor2[\"ScrollUp\"] = 2] = \"ScrollUp\";\n  EventFlavor2[EventFlavor2[\"ScrollDown\"] = 3] = \"ScrollDown\";\n  EventFlavor2[EventFlavor2[\"ScrollLeft\"] = 4] = \"ScrollLeft\";\n  EventFlavor2[EventFlavor2[\"ScrollRight\"] = 5] = \"ScrollRight\";\n  EventFlavor2[EventFlavor2[\"SwipeUp\"] = 6] = \"SwipeUp\";\n  EventFlavor2[EventFlavor2[\"SwipeDown\"] = 7] = \"SwipeDown\";\n  EventFlavor2[EventFlavor2[\"SwipeLeft\"] = 8] = \"SwipeLeft\";\n  EventFlavor2[EventFlavor2[\"SwipeRight\"] = 9] = \"SwipeRight\";\n  EventFlavor2[EventFlavor2[\"PressShort\"] = 10] = \"PressShort\";\n  EventFlavor2[EventFlavor2[\"PressLong\"] = 11] = \"PressLong\";\n})(EventFlavor || (EventFlavor = {}));\nvar EventMode;\n(function(EventMode3) {\n  EventMode3[EventMode3[\"KeyUp\"] = 0] = \"KeyUp\";\n  EventMode3[EventMode3[\"KeyDown\"] = 1] = \"KeyDown\";\n  EventMode3[EventMode3[\"ScrollUp\"] = 2] = \"ScrollUp\";\n  EventMode3[EventMode3[\"ScrollDown\"] = 3] = \"ScrollDown\";\n  EventMode3[EventMode3[\"ScrollLeft\"] = 4] = \"ScrollLeft\";\n  EventMode3[EventMode3[\"ScrollRight\"] = 5] = \"ScrollRight\";\n  EventMode3[EventMode3[\"SwipeUp\"] = 6] = \"SwipeUp\";\n  EventMode3[EventMode3[\"SwipeDown\"] = 7] = \"SwipeDown\";\n  EventMode3[EventMode3[\"SwipeLeft\"] = 8] = \"SwipeLeft\";\n  EventMode3[EventMode3[\"SwipeRight\"] = 9] = \"SwipeRight\";\n  EventMode3[EventMode3[\"PressShort\"] = 10] = \"PressShort\";\n  EventMode3[EventMode3[\"PressLong\"] = 11] = \"PressLong\";\n})(EventMode || (EventMode = {}));\n\n// src/actions/actionUtils.ts\nvar isValidAction = (action) => {\n  if (!action || typeof action !== \"object\") throw new Error(\"Action must be an object\");\n  const actionObj = action;\n  if (typeof actionObj.id !== \"string\") throw new Error(\"Action id must be a string\");\n  if (typeof actionObj.version !== \"string\") {\n    throw new Error(\"Action version must be a string\");\n  }\n  if (typeof actionObj.enabled !== \"boolean\") {\n    throw new Error(\"Action enabled must be a boolean\");\n  }\n  if (typeof actionObj.name !== \"string\") {\n    throw new Error(\"Action name must be a string\");\n  }\n  if (typeof actionObj.version_code !== \"number\") {\n    throw new Error(\"Action version_code must be a number\");\n  }\n  if (actionObj.description !== void 0 && typeof actionObj.description !== \"string\") {\n    throw new Error(\"Action description must be a string\");\n  }\n  if (actionObj.value !== void 0 && typeof actionObj.value !== \"string\") {\n    throw new Error(\"Action value must be a string\");\n  }\n  if (actionObj.value_options !== void 0 && !Array.isArray(actionObj.value_options)) {\n    throw new Error(\"Action value_options must be an array of strings\");\n  }\n  if (actionObj.value_instructions !== void 0 && typeof actionObj.value_instructions !== \"string\") {\n    throw new Error(\"Action value_instructions must be a string\");\n  }\n  if (actionObj.icon !== void 0 && typeof actionObj.icon !== \"string\") {\n    throw new Error(\"Action icon must be a string\");\n  }\n  if (actionObj.tag !== void 0 && ![\"nav\", \"media\", \"basic\"].includes(actionObj.tag)) {\n    throw new Error(\"Action tag must be one of: nav, media, basic\");\n  }\n};\nvar isValidActionReference = (action) => {\n  if (typeof action !== \"object\" || !action) {\n    throw new Error(\"validateActionReference: action is not a valid object\");\n  }\n  const actionRef = action;\n  if (typeof actionRef.id !== \"string\") {\n    throw new Error(\"validateActionReference: id is not a valid string\");\n  }\n  if (typeof actionRef.enabled !== \"boolean\") {\n    action.enabled = true;\n    console.warn(\n      \"validateActionReference: enabled was not set to a boolean value\"\n    );\n  }\n};\n\n// src/tasks/taskUtils.ts\nfunction isValidTask(task) {\n  if (!task || typeof task !== \"object\")\n    throw new Error(\"Task must be an object\");\n  const t = task;\n  if (!t.id) {\n    throw new Error(\"[ValidateTask] Tasks must have an ID\");\n  }\n  if (!t.source) {\n    throw new Error(`[ValidateTask] Task ${t.id} does not have a source`);\n  }\n  if (!t.version) {\n    throw new Error(\n      `[ValidateTask] Task ${t.id} from ${t.source} must have a specified version`\n    );\n  }\n  if (!t.steps || typeof t.steps !== \"object\" || Object.values(t.steps).length === 0) {\n    throw new Error(\n      `[ValidateTask] Task ${t.id} from ${t.source} must have at least one specified step`\n    );\n  }\n  for (const step of Object.values(t.steps)) {\n    isValidStep(step);\n  }\n}\nfunction isValidStep(step) {\n  if (!step || typeof step !== \"object\")\n    throw new Error(\"Step must be an object\");\n  const s = step;\n  if (!s.id) {\n    throw new Error(\"[ValidateStep] Step must have an ID\");\n  }\n  if (!s.type) {\n    throw new Error(`[ValidateStep] Step ${s.id} does not have a type`);\n  }\n  switch (s.type) {\n    case STEP_TYPES.ACTION:\n      isValidTaskAction(s);\n      break;\n    case STEP_TYPES.SHORTCUT:\n      isValidTaskShortcut(s);\n      break;\n    case STEP_TYPES.SETTING:\n      isValidTaskSetting(s);\n      break;\n    case STEP_TYPES.TASK:\n      isValidTaskTask(s);\n      break;\n    case STEP_TYPES.EXTERNAL:\n      isValidTaskExternal(s);\n      break;\n    case STEP_TYPES.STEP:\n      isValidTaskStep(s);\n      break;\n    default:\n      throw new Error(`[ValidateStep] Step ${s.id} has invalid type ${s.type}`);\n  }\n}\nfunction validateStepBase(step, expectedType) {\n  if (!step || typeof step !== \"object\")\n    throw new Error(\"Step must be an object\");\n  const s = step;\n  if (!s.type) {\n    throw new Error(\"[ValidateStep] Step must have a type\");\n  }\n  if (s.type !== expectedType) {\n    throw new Error(`[ValidateStep] Step ${s.id} is not a ${expectedType}`);\n  }\n}\nfunction isValidTaskAction(step) {\n  validateStepBase(step, STEP_TYPES.ACTION);\n  const s = step;\n  if (!s.action) {\n    throw new Error(\n      `[ValidateTaskAction] Step ${s.id} does not have an action`\n    );\n  }\n  const action = s.action;\n  if (typeof action === \"string\") {\n    return;\n  }\n  try {\n    if (typeof action === \"object\" && \"version\" in action) {\n      isValidAction(action);\n    } else {\n      isValidActionReference(action);\n    }\n  } catch (error) {\n    console.error(`There was an error validating the task action`, error);\n  }\n}\nfunction isValidTaskShortcut(step) {\n  validateStepBase(step, STEP_TYPES.SHORTCUT);\n  const s = step;\n  if (!s.destination) {\n    throw new Error(\n      `[ValidateTaskShortcut] Step ${s.id} does not have a destination`\n    );\n  }\n}\nfunction isValidTaskSetting(step) {\n  validateStepBase(step, STEP_TYPES.SETTING);\n  const s = step;\n  if (!s.setting) {\n    throw new Error(\n      `[ValidateTaskSetting] Step ${s.id} does not have a setting`\n    );\n  }\n  if (!(\"type\" in s.setting)) {\n    if (!s.setting.id) throw new Error(`[ValidateTaskSetting] Setting reference does not have an id`);\n    return;\n  }\n  const validTypes = Object.values(SETTING_TYPES);\n  if (!s.setting.type || !validTypes.includes(s.setting.type)) {\n    throw new Error(\n      `[ValidateTaskSetting] Step ${s.id} has invalid setting type`\n    );\n  }\n  if (!s.setting.label) {\n    throw new Error(\n      `[ValidateTaskSetting] Step ${s.id} setting does not have a label`\n    );\n  }\n}\nfunction isValidTaskTask(step) {\n  validateStepBase(step, STEP_TYPES.TASK);\n  const s = step;\n  if (!s.taskReference?.id) {\n    throw new Error(`[ValidateTaskTask] Step ${s.id} does not have a taskId`);\n  }\n}\nfunction isValidTaskExternal(step) {\n  validateStepBase(step, STEP_TYPES.EXTERNAL);\n}\nfunction isValidTaskStep(step) {\n  validateStepBase(step, STEP_TYPES.STEP);\n}\n\n// src/settings/settingsUtils.ts\nvar isValidSettings = (setting) => {\n  if (!setting) {\n    throw new Error(\"[isValidSetting] Setting must be a valid object\");\n  }\n  if (typeof setting !== \"object\") {\n    throw new Error(\"[isValidSetting] Setting must be an object\");\n  }\n  if (\"type\" in setting && typeof setting.type !== \"string\") {\n    throw new Error(\"[isValidSetting] Setting type must be a string\");\n  }\n  if (\"label\" in setting && typeof setting.label !== \"string\") {\n    throw new Error(\"[isValidSetting] Setting label must be a string\");\n  }\n  const typedSetting = setting;\n  switch (typedSetting.type) {\n    case SETTING_TYPES.NUMBER:\n      if (typeof typedSetting.value !== \"number\") throw new Error(\"[isValidSetting] Number setting value must be a number\");\n      if (typedSetting.min && typeof typedSetting.min !== \"number\") throw new Error(\"[isValidSetting] Number setting min must be a number\");\n      if (typedSetting.max && typeof typedSetting.max !== \"number\") throw new Error(\"[isValidSetting] Number setting max must be a number\");\n      if (typedSetting.step && typeof typedSetting.step !== \"number\") throw new Error(\"[isValidSetting] Number setting max must be a number\");\n      break;\n    case SETTING_TYPES.BOOLEAN:\n      if (typeof typedSetting.value !== \"boolean\") throw new Error(\"[isValidSetting] Boolean setting value must be a boolean\");\n      break;\n    case SETTING_TYPES.STRING:\n      if (typeof typedSetting.value !== \"string\") throw new Error(\"[isValidSetting] String setting value must be a string\");\n      if (typedSetting.maxLength && typeof typedSetting.maxLength !== \"number\") throw new Error(\"[isValidSetting] String setting maxLength must be a number\");\n      break;\n    case SETTING_TYPES.SELECT:\n    case SETTING_TYPES.MULTISELECT:\n    case SETTING_TYPES.RANKED:\n    case SETTING_TYPES.LIST:\n      if (!Array.isArray(typedSetting.options)) throw new Error(`[isValidSetting] ${typedSetting.type} setting must have options array`);\n      typedSetting.options.forEach((option) => {\n        if (typeof option.label !== \"string\") throw new Error(\"[isValidSetting] Option label must be a string\");\n        if (typeof option.value !== \"string\") throw new Error(\"[isValidSetting] Option value must be a string\");\n      });\n      break;\n    case SETTING_TYPES.RANGE:\n      if (typeof typedSetting.value !== \"number\") throw new Error(\"[isValidSetting] Range setting value must be a number\");\n      if (typedSetting.min && typeof typedSetting.min !== \"number\") throw new Error(\"[isValidSetting] Range setting min must be a number\");\n      if (typedSetting.max && typeof typedSetting.max !== \"number\") throw new Error(\"[isValidSetting] Range setting max must be a number\");\n      if (typedSetting.step && typeof typedSetting.step !== \"number\") throw new Error(\"[isValidSetting] Range setting max must be a number\");\n      break;\n    case SETTING_TYPES.COLOR:\n      if (typedSetting.value && typeof typedSetting.value !== \"string\") throw new Error(\"[isValidSetting] Color setting value must be a string\");\n      break;\n    case SETTING_TYPES.FILE:\n      break;\n    // nothing is needed technically speaking\n    default:\n      throw new Error(`[isValidSetting] Invalid setting type: ${JSON.stringify(typedSetting)}`);\n  }\n};\nvar sanitizeSettings = (setting) => {\n  isValidSettings(setting);\n  const commonSettings = {\n    ...setting,\n    disabled: setting.disabled,\n    id: setting.id,\n    label: setting.label || setting.id || \"\",\n    value: setting.value,\n    source: setting.source,\n    description: setting.description || \"No Description\"\n  };\n  switch (setting.type) {\n    case SETTING_TYPES.SELECT:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.SELECT,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\",\n        placeholder: setting.placeholder,\n        options: setting.options\n      };\n      break;\n    case SETTING_TYPES.MULTISELECT:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.MULTISELECT,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\",\n        placeholder: setting.placeholder,\n        options: setting.options\n      };\n      break;\n    case SETTING_TYPES.NUMBER:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.NUMBER,\n        value: setting.value,\n        label: setting.label,\n        min: setting.min,\n        max: setting.max,\n        description: setting.description || \"\"\n      };\n      break;\n    case SETTING_TYPES.BOOLEAN:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.BOOLEAN,\n        value: setting.value,\n        description: setting.description || \"\",\n        label: setting.label\n      };\n      break;\n    case SETTING_TYPES.STRING:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.STRING,\n        description: setting.description || \"\",\n        value: setting.value,\n        label: setting.label\n      };\n      break;\n    case SETTING_TYPES.RANGE:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.RANGE,\n        value: setting.value,\n        label: setting.label,\n        min: setting.min,\n        max: setting.max,\n        step: setting.step || 1,\n        description: setting.description || \"\"\n      };\n      break;\n    case SETTING_TYPES.RANKED:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.RANKED,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\",\n        options: setting.options\n      };\n      break;\n    case SETTING_TYPES.LIST:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.LIST,\n        value: setting.value,\n        label: setting.label,\n        unique: setting.unique,\n        orderable: setting.orderable,\n        placeholder: setting.placeholder,\n        maxValues: setting.maxValues,\n        description: setting.description || \"\",\n        options: setting.options || []\n      };\n      break;\n    case SETTING_TYPES.COLOR:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.COLOR,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\"\n      };\n      break;\n    case SETTING_TYPES.FILE:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.FILE,\n        value: setting.value,\n        label: setting.label,\n        fileTypes: setting.fileTypes || [],\n        placeholder: setting.placeholder || \"\"\n      };\n      break;\n    default:\n      throw new Error(`[isValidSetting] Unknown setting type: ${setting}`);\n  }\n  return setting;\n};\nvar settingHasOptions = (setting) => {\n  if (!setting) throw new Error(\"[settingHasOptions] Setting must be defined\");\n  if (!setting.type) throw new Error(\"[settingHasOptions] Setting type must be defined\");\n  return setting.type === SETTING_TYPES.RANKED || setting.type === SETTING_TYPES.LIST || setting.type === SETTING_TYPES.SELECT || setting.type === SETTING_TYPES.MULTISELECT;\n};\n\n// src/deskthing.ts\nimport { parentPort } from \"worker_threads\";\n\n// src/utils/validators.ts\nvar isValidAppDataInterface = (app) => {\n  if (!app) {\n    throw new Error(\"App data interface is undefined\");\n  }\n  if (typeof app !== \"object\") {\n    throw new Error(\"App data interface is not an object\");\n  }\n  if (!app.version) {\n    throw new Error(\"App data interface version is undefined\");\n  }\n  if (app.settings) {\n    isValidAppSettings(app.settings);\n  }\n  if (app.tasks) {\n    Object.values(app.tasks).forEach((task) => {\n      isValidTask(task);\n    });\n  }\n  if (app.actions) {\n    Object.values(app.actions).forEach((action) => {\n      isValidAction2(action);\n    });\n  }\n  if (app.keys) {\n    Object.values(app.keys).forEach((key) => {\n      isValidKey(key);\n    });\n  }\n};\nvar isValidAction2 = (action) => {\n  if (!action || typeof action !== \"object\") throw new Error(\"Action must be an object\");\n  const actionObj = action;\n  if (typeof actionObj.id !== \"string\") throw new Error(\"Action id must be a string\");\n  if (typeof actionObj.source !== \"string\") throw new Error(\"Action source must be a string\");\n  if (typeof actionObj.version !== \"string\") {\n    actionObj.version = \"0.0.0\";\n    console.warn(\"WARNING_MISSING_ACTION_VERSION\");\n  }\n  if (typeof actionObj.enabled !== \"boolean\") {\n    actionObj.enabled = true;\n    console.warn(\"WARNING_MISSING_ACTION_ENABLED\");\n  }\n};\nvar isValidKey = (key) => {\n  if (!key || typeof key !== \"object\") throw new Error(\"Key must be an object\");\n  const keyObj = key;\n  if (typeof keyObj.id !== \"string\") throw new Error(\"Key id must be a string\");\n  if (typeof keyObj.source !== \"string\")\n    throw new Error(\"Key source must be a string\");\n  if (typeof keyObj.version !== \"string\")\n    throw new Error(\"Key version must be a string\");\n  if (typeof keyObj.enabled !== \"boolean\")\n    throw new Error(\"Key enabled must be a boolean\");\n  if (!Array.isArray(keyObj.modes))\n    throw new Error(\"Key modes must be an array\");\n  if (!keyObj.modes.every((Mode) => Object.values(EventMode).includes(Mode))) {\n    throw new Error(\"Key modes must all be valid EventMode values\");\n  }\n};\nvar isValidAppSettings = (appSettings) => {\n  if (typeof appSettings !== \"object\") {\n    throw new Error(\"[sanitizeAppSettings] App settings must be an object\");\n  }\n  Object.entries(appSettings).forEach(([key, setting]) => {\n    if (typeof setting !== \"object\") {\n      throw new Error(\"[sanitizeAppSettings] App settings must be an object\");\n    }\n    try {\n      isValidSettings(setting);\n    } catch (error) {\n      console.error(`Failed to validate settings!`, error);\n    }\n  });\n};\n\n// src/deskthing.ts\nvar DeskThingClass = class _DeskThingClass {\n  constructor() {\n    // Context\n    this.manifest = null;\n    // Communication with the server\n    this.imageUrls = {};\n    // Listener data\n    this.Listeners = {};\n    this.sysListeners = [];\n    this.backgroundTasks = [];\n    this.stopRequested = false;\n    /**\n     * Either just sends data, sends and listens for data, or sends - listens - and provides a callback hook\n     * @param requestData\n     * @param listenData\n     * @param callback\n     */\n    this.fetch = async (requestData, listenData, callback, timeoutMs = 500) => {\n      if (!requestData.type) {\n        console.warn(`[fetch]: Request Data doesn't have a \"type\" field`);\n        return void 0;\n      }\n      this.sendToServer(requestData);\n      if (!listenData) return void 0;\n      try {\n        const dataPromise = new Promise(\n          (resolve2) => {\n            let timeoutId = null;\n            let isResolved = false;\n            const handleResolve = (data) => {\n              if (isResolved) return;\n              isResolved = true;\n              if (timeoutId) {\n                clearTimeout(timeoutId);\n                timeoutId = null;\n              }\n              resolve2(data);\n            };\n            timeoutId = setTimeout(() => {\n              console.debug(`[fetch]: Request timed out after ${timeoutMs}ms for type: ${listenData.type}`);\n              handleResolve(void 0);\n            }, timeoutMs);\n            try {\n              this.once(\n                listenData.type,\n                (data) => handleResolve(data),\n                listenData.request\n              ).catch((error) => {\n                console.warn(`[fetch]: Error during fetch listener! ${error}`);\n                handleResolve(void 0);\n              });\n            } catch (error) {\n              console.warn(`[fetch]: Error during fetch listener setup! ${error}`);\n              handleResolve(void 0);\n            }\n          }\n        );\n        const response = await dataPromise;\n        if (callback) {\n          try {\n            await callback(response);\n          } catch (error) {\n            console.warn(\n              `[fetch]: Error during fetch callback! ${error instanceof Error ? error.message : error}`\n            );\n          }\n        }\n        return response;\n      } catch (error) {\n        console.warn(\n          `[fetch]: Error during deskthing fetch! ${error instanceof Error ? error.message : error}`\n        );\n        if (callback) {\n          try {\n            await callback(void 0);\n          } catch (error2) {\n            console.warn(\n              `[fetch]: Error during errored callback! ${error2 instanceof Error ? error2.message : error2}`\n            );\n          }\n        }\n        return void 0;\n      }\n    };\n    /**\n     * Adds a new setting or overwrites an existing one. Automatically saves the new setting to the server to be persisted.\n     *\n     * @param settings - An object containing the settings to add or update.\n     * @param notifyServer - Leave true. Otherwise the settings will not be saved to the server.\n     * @remarks Use {@link DeskThing.initSettings} for the first settings call. Only use this to update settings or add them later.\n     *\n     * @example\n     * // Adding a boolean setting\n     * deskThing.setSettings({\n     *   darkMode: {\n     *     type: 'boolean',\n     *     label: 'Dark Mode',\n     *     value: false,\n     *     description: 'Enable dark mode theme'\n     *   }\n     * })\n     * @example\n     * // Adding a select setting\n     * deskThing.setSettings({\n     *   theme: {\n     *     type: 'select',\n     *     label: 'Theme',\n     *     value: 'light',\n     *     description: 'Choose your theme',\n     *     options: [\n     *       { label: 'Light', value: 'light' },\n     *       { label: 'Dark', value: 'dark' },\n     *       { label: 'System', value: 'system' }\n     *     ]\n     *   }\n     * })\n     * @example\n     * // Adding a multiselect setting\n     * deskThing.setSettings({\n     *   notifications: {\n     *     type: 'multiselect',\n     *     label: 'Notifications',\n     *     value: ['email'],\n     *     description: 'Choose notification methods',\n     *     options: [\n     *       { label: 'Email', value: 'email' },\n     *       { label: 'SMS', value: 'sms' },\n     *       { label: 'Push', value: 'push' }\n     *     ]\n     *   }\n     * })\n     * @example\n     * // Adding a number setting\n     * deskThing.setSettings({\n     *   fontSize: {\n     *     type: 'number',\n     *     label: 'Font Size',\n     *     value: 16,\n     *     description: 'Set the font size in pixels',\n     *     min: 12,\n     *     max: 24\n     *   }\n     * })\n     * @example\n     * // Adding a string setting\n     * deskThing.setSettings({\n     *   username: {\n     *     type: 'string',\n     *     label: 'Username',\n     *     value: '',\n     *     description: 'Enter your username'\n     *   }\n     * })\n     * @example\n     * // Adding a range setting\n     * deskThing.setSettings({\n     *   volume: {\n     *     type: 'range',\n     *     label: 'Volume',\n     *     value: 50,\n     *     description: 'Adjust the volume level',\n     *     min: 0,\n     *     max: 100,\n     *     step: 1\n     *   }\n     * })\n     * @example\n     * // Adding an order setting\n     * deskThing.setSettings({\n     *   displayOrder: {\n     *     type: 'order',\n     *     label: 'Display Order',\n     *     value: ['section1', 'section2', 'section3'],\n     *     description: 'Arrange the display order of sections',\n     *     options: [\n     *       { label: 'Section 1', value: 'section1' },\n     *       { label: 'Section 2', value: 'section2' },\n     *       { label: 'Section 3', value: 'section3' }\n     *     ]\n     *   }\n     * })\n     * @example\n     * // Adding a list setting\n     * deskThing.setSettings({\n     *   settingsList: {\n     *      label: \"Settings List\",\n     *      description: \"Select multiple items from the list\",\n     *      type: 'list',\n     *      value: ['item1', 'item2'],\n     *      options: [\n     *          { label: 'Item1', value: 'item1' },\n     *          { label: 'Item2', value: 'item2' },\n     *          { label: 'Item3', value: 'item3' },\n     *          { label: 'Item4', value: 'item4' }\n     *      ]\n     *    }\n     * })\n     * @example\n     * // Adding a color setting\n     * deskThing.setSettings({\n     *   settingsColor: {\n     *      label: \"Settings Color\",\n     *      description: \"Prompt the user to select a color\",\n     *      type: 'color',\n     *      value: '#1ed760'\n     *    }\n     * })\n     */\n    this.setSettings = async (settings) => {\n      const existingSettings = await this.getSettings() || {};\n      if (!settings || typeof settings !== \"object\") {\n        throw new Error(\"Settings must be a valid object\");\n      }\n      Object.entries(settings).forEach(([id, setting]) => {\n        if (!setting.type || !setting.label) {\n          throw new Error(`Setting ${id} must have a type and label`);\n        }\n        try {\n          existingSettings[id] = { ...sanitizeSettings(setting), id };\n        } catch (error) {\n          if (error instanceof Error) {\n            console.error(\n              `Error sanitizing setting with label \"${setting.label}\": ${error.message}`\n            );\n          } else {\n            console.error(\n              `Error sanitizing setting with label \"${setting.label}\": ${error}`\n            );\n          }\n        }\n      });\n      this.saveSettings(existingSettings);\n    };\n    /**\n     * Updates the options for a specific setting\n     */\n    this.setSettingOptions = async (settingId, options) => {\n      const existingSettings = await this.getSettings();\n      if (!existingSettings?.[settingId]) {\n        console.error(`Setting with id ${settingId} not found`);\n        return;\n      }\n      try {\n        settingHasOptions(existingSettings[settingId]);\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(`Error setting option of setting: ${settingId}`, error.message);\n        }\n        return;\n      }\n      existingSettings[settingId].options = options;\n      this.saveSettings(existingSettings);\n    };\n    this.tasks = {\n      /**\n       * Adds a new task.\n       * @throws {Error} - when the data is invalid.\n       * @param taskData - The data for the new task.\n       * @example\n       * deskthing.tasks.add({\n       *    id: 'task-id',\n       *    version: '1.0.0',\n       *    available: true,\n       *    completed: false,\n       *    label: 'Task Name',\n       *    started: false,\n       *    currentStep: 'step-1',\n       *    description: 'Task Description',\n       *    steps: {\n       *      'step-1': {\n       *        id: 'step-1',\n       *        type: STEP_TYPES.STEP,\n       *        completed: false,\n       *        label: 'Step 1',\n       *        instructions: 'Step 1 instructions'\n       *      }\n       *    }\n       * });\n       */\n      add: (taskData) => {\n        try {\n          const newTask = {\n            ...taskData,\n            source: this.manifest?.id || \"unknown\"\n          };\n          isValidTask(newTask);\n          this.sendSocketData(APP_REQUESTS.TASK, { task: newTask }, \"add\");\n        } catch (error) {\n          if (error instanceof Error) {\n            console.warn(\"Invalid task data:\" + error.message);\n          }\n          throw error;\n        }\n      },\n      /**\n       * Initializes the tasks\n       * @throws {Error} - when the data is invalid.\n       */\n      initTasks: async (taskData) => {\n        try {\n          const newTasks = Object.entries(taskData).reduce(\n            (validatedTasks, [id, task]) => {\n              try {\n                const newTask = {\n                  ...task,\n                  id,\n                  source: this.manifest?.id || \"unknown\",\n                  steps: Object.fromEntries(Object.entries(task.steps).map(([stepId, step]) => [\n                    stepId,\n                    {\n                      ...step,\n                      id: step.id || stepId,\n                      source: step.source || this.manifest?.id || \"unknown\"\n                    }\n                  ]))\n                };\n                isValidTask(newTask);\n                return { ...validatedTasks, [newTask.id]: newTask };\n              } catch (error) {\n                console.warn(\n                  `Task ${task.label || task.id} failed to be verified: ` + (error instanceof Error && error.message)\n                );\n                return validatedTasks;\n              }\n            },\n            {}\n          );\n          this.sendSocketData(APP_REQUESTS.TASK, { tasks: newTasks }, \"init\");\n        } catch (error) {\n          console.warn(\n            \"Invalid task data:\" + (error instanceof Error && error.message)\n          );\n        }\n      },\n      /**\n       * Updates a specific step within a task\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to update\n       * @param updates - The partial step data to update\n       * @example\n       * deskthing.tasks.update('task-id', 'step-1', {\n       *   completed: true,\n       *   label: 'Updated Step Label',\n       *   instructions: 'New instructions'\n       * });\n       */\n      update: (taskId, task) => {\n        const validStepFields = [\n          \"id\",\n          \"label\",\n          \"completed\",\n          \"currentStep\",\n          \"started\",\n          \"source\",\n          \"version\",\n          \"available\",\n          \"description\",\n          \"steps\"\n        ];\n        const sanitizedUpdates = Object.fromEntries(\n          Object.entries(task).filter(\n            ([key]) => validStepFields.includes(key)\n          )\n        );\n        this.sendSocketData(\n          APP_REQUESTS.TASK,\n          { taskId, task: { ...sanitizedUpdates, id: taskId } },\n          \"update\"\n        );\n      },\n      /**\n       * Deletes a task by its ID\n       * @param taskId - The ID of the task to delete\n       * @example\n       * deskthing.tasks.delete('task-id');\n       */\n      delete: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"delete\");\n      },\n      /**\n       * Marks a task as completed\n       * @param taskId - The ID of the task to complete\n       * @example\n       * deskthing.tasks.complete('task-id');\n       */\n      complete: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"complete\");\n      },\n      /**\n       * Restarts a task, resetting its progress\n       * @param taskId - The ID of the task to restart\n       * @example\n       * deskthing.tasks.restart('task-id');\n       */\n      restart: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"restart\");\n      },\n      /**\n       * Marks a task as started\n       * @param taskId - The ID of the task to start\n       * @example\n       * deskthing.tasks.start('task-id');\n       */\n      start: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"start\");\n      },\n      /**\n       * Ends a task without completing it\n       * @param taskId - The ID of the task to end\n       * @example\n       * deskthing.tasks.end('task-id');\n       */\n      end: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"end\");\n      },\n      /**\n       * Retrieves task information\n       * @param taskId - Optional ID of the specific task to get. If omitted, returns all tasks\n       * @example\n       * // Get all tasks\n       * deskthing.tasks.get();\n       *\n       * // Later, listen for tasks\n       * deskthing.on()\n       */\n      get: () => {\n        this.sendSocketData(APP_REQUESTS.TASK, {}, \"get\");\n      }\n    };\n    this.steps = {\n      /**\n       * Adds a new step to the specified task.\n       * @param taskId - The unique identifier of the task to which the step belongs.\n       * @param stepData - The data for the new step.\n       * @example\n       * // Basic step\n       * deskthing.steps.add('task-id', {\n       *    id: 'step-id',\n       *    type: STEP_TYPES.STEP,\n       *    label: 'Step Name',\n       *    instructions: 'Step Description',\n       *    completed: false,\n       *    debug: false,\n       *    strict: false,\n       *    parentId: 'parent-task-id'\n       * });\n       *\n       * // Action step\n       * deskthing.steps.add('task-id', {\n       *    id: 'action-step',\n       *    type: STEP_TYPES.ACTION,\n       *    label: 'Run Action',\n       *    instructions: 'Execute this action',\n       *    completed: false,\n       *    action: {\n       *      id: 'action-id',\n       *      value: 'example-value',\n       *      enabled: true,\n       *      source: 'system'\n       *    } as ActionReference\n       * });\n       *\n       * // External step\n       * deskthing.steps.add('task-id', {\n       *    id: 'external-step',\n       *    type: STEP_TYPES.EXTERNAL,\n       *    label: 'External Task',\n       *    instructions: 'Complete this external task',\n       *    completed: false,\n       *    url: 'https://example.com'\n       * });\n       *\n       * // Task step\n       * deskthing.steps.add('task-id', {\n       *    id: 'task-step',\n       *    type: STEP_TYPES.TASK,\n       *    label: 'Complete Task',\n       *    instructions: 'Complete the referenced task',\n       *    completed: false,\n       *    taskId: 'referenced-task-id'\n       * });\n       *\n       * // Shortcut step\n       * deskthing.steps.add('task-id', {\n       *    id: 'shortcut-step',\n       *    type: STEP_TYPES.SHORTCUT,\n       *    label: 'Navigate',\n       *    instructions: 'Go to location',\n       *    completed: false,\n       *    destination: 'settings/general'\n       * });\n       *\n       * // Setting step\n       * deskthing.steps.add('task-id', {\n       *    id: 'setting-step',\n       *    type: STEP_TYPES.SETTING,\n       *    label: 'Configure Setting',\n       *    instructions: 'Set up configuration',\n       *    completed: false,\n       *    setting: {\n       *      value: 'example',\n       *      type: 'string',\n       *      label: 'Example Setting',\n       *      description: 'An example string setting'\n       *    } as SettingsString\n       * });\n       * @throws {Error} If the step data is invalid.\n       */\n      add: (taskId, stepData) => {\n        try {\n          isValidStep(stepData);\n          this.sendSocketData(APP_REQUESTS.STEP, { taskId, step: stepData }, \"add\");\n        } catch (error) {\n          if (error instanceof Error) {\n            console.warn(\"Invalid step data:\" + error.message);\n          }\n        }\n      },\n      /**\n       * Updates an existing step with the provided updates.\n       * Only allows updating valid step fields and sanitizes the input.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to update\n       * @param updates - Partial Step object containing the fields to update\n       */\n      update: (taskId, stepId, updates) => {\n        const validStepFields = [\n          \"parentId\",\n          \"id\",\n          \"debug\",\n          \"strict\",\n          \"type\",\n          \"label\",\n          \"instructions\",\n          \"completed\",\n          \"debugging\",\n          \"source\",\n          \"action\",\n          \"url\",\n          \"taskId\",\n          \"taskSource\",\n          \"destination\",\n          \"setting\"\n        ];\n        const sanitizedUpdates = Object.fromEntries(\n          Object.entries(updates).filter(([key]) => validStepFields.includes(key))\n        );\n        this.sendSocketData(\n          APP_REQUESTS.STEP,\n          { taskId, stepId, step: { ...sanitizedUpdates, id: stepId } },\n          \"update\"\n        );\n      },\n      /**\n       * Deletes a step from a task.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to delete\n       */\n      delete: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"delete\");\n      },\n      /**\n       * Marks a step as completed.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to complete\n       */\n      complete: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"complete\");\n      },\n      /**\n       * Restarts a step by resetting its state.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to restart\n       */\n      restart: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"restart\");\n      },\n      /**\n       * Retrieves a specific step from a task.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to retrieve\n       */\n      get: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"get\");\n      }\n    };\n    /**\n     * The updated way to send data to server\n     * Simply wraps postProcessMessage using the correct version\n     * @since v0.11.0\n     */\n    this.sendToServer = async (data) => {\n      this.postProcessMessage({\n        version: _DeskThingClass.version,\n        type: \"data\",\n        payload: data\n      });\n    };\n    this.postProcessMessage = async (data) => {\n      if (parentPort?.postMessage) {\n        parentPort.postMessage(data);\n      } else {\n        console.error(\"Parent port or postmessage is undefined!\");\n      }\n    };\n    this.loadManifest();\n    this.initializeListeners();\n  }\n  static {\n    this.version = \"0.11.0\";\n  }\n  initializeListeners() {\n    parentPort?.on(\"message\", async (data) => {\n      switch (data.type) {\n        case \"data\":\n          this.handleServerMessage(data.payload);\n          break;\n        case \"start\":\n          this.postProcessMessage({\n            version: _DeskThingClass.version,\n            type: \"started\"\n          });\n          this.stopRequested = false;\n          await this.notifyListeners(DESKTHING_EVENTS.START, {\n            type: DESKTHING_EVENTS.START\n          });\n          break;\n        case \"stop\":\n          try {\n            await this.notifyListeners(DESKTHING_EVENTS.STOP, {\n              type: DESKTHING_EVENTS.STOP\n            });\n            this.stopRequested = true;\n            this.backgroundTasks.forEach((cancel) => cancel());\n            this.backgroundTasks = [];\n          } catch (error) {\n            console.error(\"Error in stop:\", error);\n          }\n          this.postProcessMessage({\n            version: _DeskThingClass.version,\n            type: \"stopped\"\n          });\n          break;\n        case \"purge\":\n          await this.purge();\n          break;\n      }\n    });\n  }\n  /**\n   * Singleton pattern: Ensures only one instance of DeskThing exists.\n   *\n   * @since 0.8.0\n   * @example\n   * const deskThing = DeskThing.getInstance();\n   * deskthing.on('start', () => {\n   *   // Your code here\n   * });\n   */\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new _DeskThingClass();\n    }\n    return this.instance;\n  }\n  /**\n   * Notifies all listeners of a particular event.\n   *\n   * @since 0.8.0\n   * @example\n   * deskThing.on('message', (msg) => console.log(msg));\n   * deskThing.notifyListeners('message', 'Hello, World!');\n   */\n  async notifyListeners(event, data) {\n    const callbacks = this.Listeners[event];\n    if (callbacks) {\n      await Promise.all(\n        callbacks.map(async (callback) => {\n          try {\n            await callback(data);\n          } catch (error) {\n            console.log(\n              \"Encountered an error in notifyListeners\" + (error instanceof Error ? error.message : error)\n            );\n          }\n        })\n      );\n    }\n  }\n  /**\n   * Registers an event listener for a specific incoming event. Events are either the \"type\" value of the incoming SocketData object or a special event like \"start\", \"stop\", or \"data\".\n   *\n   * @since 0.8.0\n   * @param event - The event type to listen for.\n   * @param callback - The function to call when the event occurs.\n   * @returns A function to remove the listener.\n   *\n   * @example\n   * const removeListener = deskThing.on('data', (data) => console.log(data));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * const removeListener = deskThing.on('start', () => console.log('App is starting'));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * // When {type: 'get'} is received from the server\n   * const removeListener = deskThing.on('get', (socketData) => console.log(socketData.payload));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * // When a setting is updated. Passes the updated settings object\n   * const removeListener = deskThing.on('settings', (settings) => console.log(settings.some_setting.value));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * // Listening to data from the client\n   * // server\n   * deskThing.on('set', async (socketData) => {\n   *    if (socketData.request === 'loremIpsum') {\n   *      handleData(socketData.payload);\n   *    }\n   * })\n   *\n   * // client\n   * deskThing.send({ type: 'set', request: 'loremIpsum', payload: 'lorem ipsum' });\n   *\n   * @example\n   * // Listening to data from the client\n   * // server\n   * deskThing.on('doSomething', async (socketData) => {\n   *    doSomething()\n   * })\n   *\n   * // client\n   * deskThing.send({ type: 'doSomething' });\n   */\n  on(event, callback) {\n    if (!this.Listeners[event]) {\n      this.Listeners[event] = [];\n    }\n    this.Listeners[event].push(callback);\n    return () => this.off(event, callback);\n  }\n  /**\n   * Removes a specific event listener for a particular incoming event.\n   *\n   * @since 0.8.0\n   * @param event - The event for which to remove the listener.\n   * @param callback - The listener function to remove.\n   *\n   * @example\n   * const dataListener = () => console.log('Data received');\n   * deskthing.on('data', dataListener);\n   * deskthing.off('data', dataListener);\n   */\n  off(event, callback) {\n    if (!this.Listeners[event]) {\n      return;\n    }\n    this.Listeners[event] = this.Listeners[event].filter(\n      (cb) => cb !== callback\n    );\n  }\n  /**\n   * Registers a one-time listener for an incoming event. The listener will be automatically removed after the first occurrence of the event.\n   *\n   * Will destructure the response from the server and just return the \"payload\" field\n   *\n   * @since 0.10.0\n   * @param event - The event to listen for. This is either the 'type' field of SocketData or special cases like 'get' or 'start'\n   * @param callback - Optional callback function. If omitted, returns a promise.\n   * @returns A promise that resolves with the event data if no callback is provided.\n   *\n   * @example\n   * DeskThing.once('message').then(data => console.log('Received data:', data)); // prints 'hello'\n   *\n   * // elsewhere\n   * send({ type: 'message', payload: 'hello' });\n   * @example\n   * const flagType = await DeskThing.once('flagType');\n   * console.log('Flag type:', flagType);\n   * @example\n   * await DeskThing.once('flagType', someFunction);\n   *\n   *\n   * @throws\n   * if something goes wrong\n   */\n  async once(event, callback, request) {\n    try {\n      return new Promise(\n        (resolve2) => {\n          const onceWrapper = async (data) => {\n            if (request && data.request !== request) {\n              return;\n            }\n            this.off(event, onceWrapper);\n            if (callback) {\n              await callback(data);\n            }\n            resolve2(data);\n          };\n          this.on(event, onceWrapper);\n        }\n      );\n    } catch (error) {\n      console.warn(\"Failed to listen for event: \" + event);\n      throw new Error(\n        `Error in once() for app ${this.manifest?.id || \"unset\"}: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n  /**\n   * Sends data to the server with a specified event type.\n   *\n   * @since 0.8.0\n   * @param event - The event type to send.\n   * @param payload - The data to send.\n   * @param request - Optional request string.\n   *\n   * @example\n   * deskThing.sendSocketData('log', { message: 'Logging an event' });\n   */\n  sendSocketData(event, payload, request) {\n    const appData = {\n      type: event,\n      request,\n      payload\n    };\n    this.sendToServer(appData);\n  }\n  /**\n   * Sends data to the client for the client to listen to\n   *\n   * @since 0.10.0\n   * @param payload - { type: string, payload: any, request?: string }\n   *\n   * @example\n   * // Server\n   * deskThing.send({ type: 'message', payload: 'Hello from the Server!' });\n   *\n   * // Client\n   * deskThing.on('message', (data: SocketData) => {\n   *   console.log('Received message:', data.payload); // prints 'Hello from the Server!'\n   * });\n   * @example\n   * // Server\n   * deskThing.send({ type: 'someFancyData', payload: someDataObject });\n   *\n   * // Client\n   * deskThing.on('someFancyData', (data: SocketData) => {\n   *   const someData = data.payload;\n   * });\n   *\n   * @example\n   * // Server\n   * deskThing.send({type: 'songData', payload: musicData });\n   *\n   * // Client\n   * deskThing.on('songData', (data: SocketData) => {\n   *   const musicData = data.payload as SongData;\n   * });\n   */\n  send(payload) {\n    const filledPayload = {\n      app: this.manifest?.id,\n      ...payload\n    };\n    this.sendSocketData(APP_REQUESTS.SEND, filledPayload);\n  }\n  sendSong(songData) {\n    this.sendSocketData(APP_REQUESTS.SONG, songData);\n  }\n  /**\n   * Routes request to another app running on the server.\n   * Ensure that the app you are requesting data from is in your dependency array!\n   *\n   * @param appId - The ID of the target app.\n   * @param data - The data to send to the target app.\n   * @since 0.11.0\n   * @example\n   * deskThing.sendToApp('utility', { type: 'set', request: 'next', payload: { id: '' } });\n   * @example\n   * deskThing.sendToApp('spotify', { type: 'get', request: 'music' });\n   */\n  sendToApp(appId, payload) {\n    this.sendSocketData(APP_REQUESTS.TOAPP, payload, appId);\n  }\n  /**\n   * Requests the server to open a specified URL.\n   *\n   * @param url - The URL to open.\n   *\n   * @example\n   * deskThing.openUrl('https://example.com');\n   */\n  openUrl(url) {\n    this.sendSocketData(APP_REQUESTS.OPEN, url);\n  }\n  /**\n   * Fetches data from the server if not already retrieved, otherwise returns the cached data.\n   * This method also handles queuing requests while data is being fetched.\n   *\n   * @returns A promise that resolves with the data fetched or the cached data, or null if data is not available.\n   *\n   * @example\n   * const data = await deskThing.getData();\n   * console.log('Fetched data:', data);\n   */\n  async getData() {\n    const data = await this.fetch(\n      {\n        type: APP_REQUESTS.GET,\n        request: \"data\"\n      },\n      { type: DESKTHING_EVENTS.DATA }\n    );\n    if (!data) {\n      console.error(\"[getData]: Data not available\");\n      return null;\n    }\n    return data.payload;\n  }\n  /**\n   * Fetches data from the server if not already retrieved, otherwise returns the cached data.\n   * This method also handles queuing requests while data is being fetched.\n   *\n   * @returns A promise that resolves with the data fetched or the cached data, or null if data is not available.\n   *\n   * @example\n   * const data = await deskThing.getData();\n   * console.log('Fetched data:', data);\n   */\n  async getAppData() {\n    const data = await this.fetch(\n      {\n        type: APP_REQUESTS.GET,\n        request: \"appData\"\n      },\n      {\n        type: DESKTHING_EVENTS.APPDATA\n      }\n    );\n    if (!data) {\n      console.error(\"[getAppData]: Data not available\");\n      return null;\n    }\n    return data.payload;\n  }\n  /**\n   * Asynchronously retrieves the current settings. If settings are not defined, it fetches them from the server.\n   *\n   * @returns The current settings or undefined if not set.\n   *\n   * @example\n   * const settings = deskThing.getSettings();\n   * console.log('Current settings:', settings);\n   */\n  async getSettings() {\n    const socketData = await this.fetch(\n      {\n        type: APP_REQUESTS.GET,\n        request: \"settings\"\n      },\n      {\n        type: DESKTHING_EVENTS.SETTINGS\n      },\n      () => {\n      },\n      500\n    );\n    if (!socketData?.payload) {\n      console.error(\"[getSettings]: Settings are not defined!\");\n      return null;\n    }\n    return socketData.payload;\n  }\n  /**\n   * Initializes the settings and assumes the settings provided by the server are preferred over the passed settings.\n   * Should be used for startup settings and only startup settings\n   *\n   * @param settings The settings object\n   */\n  async initSettings(settings) {\n    this.sendSocketData(APP_REQUESTS.SET, settings, \"settings-init\");\n  }\n  /**\n   * Deletes settings from the server\n   *\n   * @example\n   * // Delete a single setting\n   * server.deleteSetting('color');\n   */\n  async deleteSettings(settingIds) {\n    this.sendSocketData(APP_REQUESTS.DELETE, settingIds, \"settings\");\n  }\n  /**\n   * Deletes data from the server\n   *\n   * @example\n   * // Delete a single data item\n   * server.deleteData('client_id');\n   *\n   */\n  async deleteData(dataIds) {\n    this.sendSocketData(APP_REQUESTS.DELETE, dataIds, \"data\");\n  }\n  /**\n   * Registers a new action to the server. This can be mapped to any key on the deskthingserver UI.\n   *\n   * @param action - The action object to register.\n   * @throws {Error} If the action object is invalid.\n   * @example\n   * const action = {\n   *      name: 'Like'\n   *      description: 'Likes the currently playing song'\n   *      id: 'likesong'\n   *      value: 'toggle'\n   *      value_options: ['like', 'dislike', 'toggle']\n   *      value_instructions: 'Determines whether to like, dislike, or toggle the currently liked song'\n   *      icon: 'likesongicon' // overrides \"id\" and instead looks in /public/icons/likesongicon.svg\n   *      version: 'v0.10.1'\n   *      tag: 'media'\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'likesong') {\n   *          DeskThing.sendLog('Like Song value is set to: ', data.value)\n   *      }\n   * })\n   * @example\n   * // Super minimal action\n   * const action = {\n   *      id: 'trigger' // looks for icon in /public/icons/trigger.svg\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'trigger') {\n   *          DeskThing.sendLog('An action was triggered!')\n   *      }\n   * })\n   */\n  registerAction(action) {\n    if (!action || typeof action !== \"object\") {\n      throw new Error(\"Invalid action object\");\n    }\n    if (!action.id || typeof action.id !== \"string\") {\n      throw new Error(\"Action must have a valid id\");\n    }\n    this.sendSocketData(APP_REQUESTS.ACTION, action, \"add\");\n  }\n  /**\n   * Registers a new action to the server. This can be mapped to any key on the deskthingserver UI.\n   *\n   * @param action - The action object to register.\n   * @throws {Error} If the action object is invalid.\n   * @example\n   * const action = {\n   *      name: 'Like'\n   *      description: 'Likes the currently playing song'\n   *      id: 'likesong'\n   *      value: 'toggle'\n   *      value_options: ['like', 'dislike', 'toggle']\n   *      value_instructions: 'Determines whether to like, dislike, or toggle the currently liked song'\n   *      icon: 'likesongicon' // overrides \"id\" and instead looks in /public/icons/likesongicon.svg\n   *      version: 'v0.10.1'\n   *      tag: 'media'\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'likesong') {\n   *          DeskThing.sendLog('Like Song value is set to: ', data.value)\n   *      }\n   * })\n   * @example\n   * // Super minimal action\n   * const action = {\n   *      id: 'trigger' // looks for icon in /public/icons/trigger.svg\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'trigger') {\n   *          DeskThing.sendLog('An action was triggered!')\n   *      }\n   * })\n   */\n  initActions(actions) {\n    if (!actions || !Array.isArray(actions)) {\n      throw new Error(\"Invalid action object\");\n    }\n    this.sendSocketData(APP_REQUESTS.ACTION, actions, \"init\");\n  }\n  /**\n   * Registers a new action to the server. This can be mapped to any key on the deskthingserver UI.\n   *\n   * @param action - The action object to register.\n   * @throws {Error} If the action object is invalid.\n   * @deprecated - Use {@link DeskThing.registerAction} instead.\n   * @example\n   * const action = {\n   *      name: 'Like'\n   *      description: 'Likes the currently playing song'\n   *      id: 'likesong'\n   *      value: 'toggle'\n   *      value_options: ['like', 'dislike', 'toggle']\n   *      value_instructions: 'Determines whether to like, dislike, or toggle the currently liked song'\n   *      icon: 'likesong'\n   *      version: 'v0.10.1'\n   *      tag: 'media'\n   * }\n   * DeskThing.registerActionObject(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'likesong') {\n   *          DeskThing.sendLog('Like Song value is set to: ', data.value)\n   *      }\n   * })\n   */\n  registerActionObject(action) {\n    this.registerAction(action);\n  }\n  /**\n   * Updates the flair of a specified action id. This can be used to update the image of the button. Flair is appended to the end of the action name and thus the end of the SVG path as well\n   * @param id action id\n   * @param flair the updated flair\n   * @example\n   * // Previously using like.svg\n   * deskthing.updateFlair('like', 'active')\n   * // Now using likeactive.svg\n   */\n  updateIcon(actionId, newIcon) {\n    this.sendSocketData(APP_REQUESTS.ACTION, { id: actionId, icon: newIcon }, \"update\");\n  }\n  /**\n   * Registers a new key with the specified identifier. This can be mapped to any action. Use a keycode to map a specific keybind.\n   * Possible keycodes can be found at https://www.toptal.com/developers/keycode and is listening for event.code\n   *\n   * Keys can also be considered \"digital\" like buttons on the screen.\n   * The first number in the key will be passed to the action\n   * @deprecated - Use {@link DeskThing.registerKeyObject} instead.\n   * @throws {Error} If the key object is invalid.\n   * @param id - The unique identifier for the key.\n   * @param description - Description for the key.\n   */\n  registerKey(id, description, modes, version) {\n    this.registerKeyObject({ id, description, modes, version });\n  }\n  /**\n   * Registers a new key with the specified identifier. This can be mapped to any action. Use a keycode to map a specific keybind.\n   * Possible keycodes can be found at https://www.toptal.com/developers/keycode and is listening for event.code\n   *\n   * Keys can also be considered \"digital\" like buttons on the screen.\n   * @throws {Error} If the key object is invalid.\n   * @param key - The key object to register.\n   */\n  registerKeyObject(key) {\n    if (!key || typeof key !== \"object\") {\n      throw new Error(\"Invalid key object\");\n    }\n    if (!key.modes || !Array.isArray(key.modes) || key.modes.length === 0) {\n      throw new Error(\"Key must have valid modes\");\n    }\n    if (typeof key.id !== \"string\") {\n      throw new Error(\"Key must have a valid id\");\n    }\n    const newKey = {\n      ...key,\n      source: this.manifest?.id || \"unknown\",\n      enabled: true\n    };\n    this.sendSocketData(APP_REQUESTS.KEY, newKey, \"add\");\n  }\n  /**\n   * Removes an action with the specified identifier.\n   *\n   * @param id - The unique identifier of the action to be removed.\n   */\n  removeAction(id) {\n    this.sendSocketData(APP_REQUESTS.ACTION, { id }, \"remove\");\n  }\n  /**\n   * Removes a key with the specified identifier.\n   *\n   * @param id - The unique identifier of the key to be removed.\n   */\n  removeKey(id) {\n    this.sendSocketData(APP_REQUESTS.KEY, { id }, \"remove\");\n  }\n  /**\n   * Saves the provided data by merging it with the existing appdata and updating settings.\n   * Sends the updated data to the server and notifies listeners.\n   *\n   * @param data - The data to be saved and merged with existing data.\n   * @param sync - Whether to sync the data with the server.\n   */\n  saveAppData(data, sync = true) {\n    sync && this.sendSocketData(APP_REQUESTS.SET, data, \"appData\");\n    this.notifyListeners(DESKTHING_EVENTS.APPDATA, {\n      type: DESKTHING_EVENTS.APPDATA,\n      payload: data\n    });\n  }\n  /**\n   * Saves the provided data by merging it with the existing data and updating settings.\n   * Sends the updated data to the server and notifies listeners.\n   *\n   * @param data - The data to be saved and merged with existing data.\n   */\n  saveData(data, sync = true) {\n    this.notifyListeners(DESKTHING_EVENTS.DATA, {\n      type: DESKTHING_EVENTS.DATA,\n      payload: data\n    });\n    sync && this.sendSocketData(APP_REQUESTS.SET, data, \"data\");\n  }\n  /**\n   * Saves settings to server - overwriting existing settings\n   */\n  saveSettings(settings) {\n    this.sendSocketData(APP_REQUESTS.SET, settings, \"settings\");\n  }\n  /**\n   * Adds a background task that will loop until either the task is cancelled or the task function returns true.\n   * This is useful for tasks that need to run periodically or continuously in the background.\n   *\n   * Returning TRUE will end the loop and cancel the task\n   * Returning FALSE will start another loop after the timeout is completed\n   *\n   * @param task () => boolean - The background task function to add. This function should return a Promise that resolves to a boolean or void.\n   * @param timeout - Optional timeout in milliseconds between task iterations.\n   * @returns A function to cancel the background task.\n   *\n   * @example\n   * // Add a background task that logs a message every 5 seconds\n   * const cancelTask = deskThing.scheduleTask(async () => {\n   *   console.log('Performing periodic task...');\n   *   await new Promise(resolve => setTimeout(resolve, 5000));\n   *   return false; // Return false to continue the loop\n   * });\n   *\n   * // Later, to stop the task:\n   * cancelTask();\n   *\n   * @example\n   * // Add a background task that runs until a condition is met\n   * let count = 0;\n   * deskThing.scheduleTask(async () => {\n   *   console.log(`Task iteration ${++count}`);\n   *   if (count >= 10) {\n   *     console.log('Task completed');\n   *     return true; // Return true to end the loop\n   *   }\n   *   return false; // Continue the loop\n   * });\n   *\n   * @example\n   * // Add a background task that runs every second\n   * deskThing.scheduleTask(async () => {\n   *   checkForUpdates();\n   * }, 1000);\n   */\n  setInterval(task, timeout) {\n    const cancelToken = { cancelled: false };\n    const wrappedTask = async () => {\n      let endToken = false;\n      while (!cancelToken.cancelled && !endToken) {\n        endToken = await task() || false;\n        if (timeout) {\n          await new Promise((resolve2) => setTimeout(resolve2, timeout));\n        }\n      }\n    };\n    this.backgroundTasks.push(() => {\n      cancelToken.cancelled = true;\n    });\n    wrappedTask();\n    return () => {\n      cancelToken.cancelled = true;\n    };\n  }\n  /**\n   * Sets a timeout that delays the execution of code\n   * The timeout will be cancelled if the app is purged / disabled\n   *\n   * @returns A function that can be called to cancel the timeout\n   */\n  setTimeout(fn, timeout) {\n    const cancelToken = { cancelled: false };\n    const timeoutId = setTimeout(async () => {\n      if (!cancelToken.cancelled) {\n        await fn();\n      }\n    }, timeout);\n    this.backgroundTasks.push(() => {\n      cancelToken.cancelled = true;\n      clearTimeout(timeoutId);\n    });\n    return () => {\n      cancelToken.cancelled = true;\n      clearTimeout(timeoutId);\n    };\n  }\n  /**\n   * @deprecated Use {@link DeskThing.scheduleTask} instead for repeated tasks or {@link DeskThing.addThread} for single-use long-running tasks like websockets\n   * @param task\n   * @param timeout\n   * @returns\n   */\n  addBackgroundTaskLoop(task, timeout) {\n    return this.setInterval(task, timeout);\n  }\n  /**\n   * Creates a new worker thread that runs independently and can be force-killed.\n   * Thread is automatically terminated when app closes.\n   *\n   * @param workerPath - Path to the worker file relative to project root\n   * @returns Object containing terminate function and worker instance\n   *\n   * @example\n   * // Main thread\n   * DeskThing.on('start', async () => {\n   *    const [ remove, worker ] = DeskThing.addThread('./workers/websocket.js');\n   *\n   *    worker.on('message', (data) => {\n   *      DeskThing.log(LOGGING_LEVELS.LOG, `Received message: ${data}`);\n   *    });\n   *\n   *    worker.postMessage({ type: 'send', payload: 'Hello from the main thread!' });\n   * })\n   * // workers/websocket.ts\n   * import { parentPort } from 'worker_threads'\n   * import WebSocket from 'ws'\n   *\n   * const ws = new WebSocket('wss://your-websocket-server.com')\n   *\n   * ws.on('open', () => {\n   *   parentPort?.postMessage({ type: 'connected' })\n   * })\n   *\n   * ws.on('message', (data) => {\n   *   parentPort?.postMessage({ type: 'message', data: data.toString() })\n   * })\n   *\n   * ws.on('error', (error) => {\n   *   parentPort?.postMessage({ type: 'error', error: error.message })\n   * })\n   *\n   * ws.on('close', () => {\n   *   parentPort?.postMessage({ type: 'disconnected' })\n   * })\n   *\n   * // Handle messages from main thread\n   * parentPort?.on('message', (message) => {\n   *   if (message.type === 'send') {\n   *     ws.send(message.payload) // Send message to WebSocket server with content 'Hello from the main thread!'\n   *   }\n   * })\n   *\n   * @example // Ex: How to pass data to worker thread\n   * import { parentPort, workerData } from 'worker_threads';\n   *\n   * // Access passed data\n   * console.log(workerData.someValue);\n   *\n   * // Use the data in your worker logic\n   * parentPort?.postMessage({\n   *     type: 'init',\n   *     config: workerData\n   * });\n   *\n   * // Main thread\n   * const config = {\n   *     interval: 1000,\n   *     url: 'wss://example.com'\n   * };\n   *\n   * const [worker, terminate] = DeskThing.addThread('./workers/websocket.js', config);\n   */\n  addThread(workerPath, workerData) {\n    const resolvedPath = path.resolve(__dirname, workerPath);\n    if (!fs.existsSync(resolvedPath)) {\n      throw new Error(`Worker file not found: ${workerPath}`);\n    }\n    const worker = new Worker(resolvedPath, { workerData });\n    worker.on(\"error\", (error) => {\n      console.error(`Worker error: ${error.message}`);\n    });\n    worker.on(\"exit\", (code) => {\n      if (code !== 0) {\n        console.error(`Worker stopped with exit code ${code}`);\n      }\n      console.log(`Worker terminated`);\n    });\n    const terminate = () => {\n      try {\n        worker.removeAllListeners();\n        worker.terminate();\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(`Failed to terminate worker: ${error.message}`);\n        } else {\n          console.error(`Failed to terminate worker: ${error}`);\n          console.error(\"[addThread - app]: Unknown error: \", error);\n        }\n      }\n    };\n    this.backgroundTasks.push(terminate);\n    return [worker, terminate];\n  }\n  /**\n   * -------------------------------------------------------\n   * Deskthing Server Functions\n   */\n  /**\n   * Fetches the manifest\n   * @returns Manifest | null\n   */\n  loadManifest() {\n    if (this.manifest) {\n      return this.manifest;\n    }\n    const builtManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"../manifest.json\"\n    );\n    const devManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"../deskthing/manifest.json\"\n    );\n    const oldBuiltManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"./manifest.json\"\n    );\n    const oldDevManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"../public/manifest.json\"\n    );\n    const errors = [];\n    if (fs.existsSync(builtManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(builtManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load built manifest:\");\n        errors.push(error);\n      }\n    }\n    if (fs.existsSync(devManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(devManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load dev manifest:\");\n        errors.push(error);\n      }\n    }\n    if (fs.existsSync(oldBuiltManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(oldBuiltManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load old built manifest:\");\n        errors.push(error);\n      }\n    }\n    if (fs.existsSync(oldDevManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(oldDevManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load old dev manifest:\");\n        errors.push(error);\n      }\n    }\n    console.error(\n      \"[loadManifest] Failed to load manifest from any location:\",\n      errors\n    );\n    console.log(\"[loadManifest]: Manifest not found in any location\");\n    return null;\n  }\n  /**\n   * Returns the manifest in a Response structure\n   * If the manifest is not found or fails to load, it returns a 500 status code.\n   * It will attempt to read the manifest from file if the manifest does not exist in cache\n   *\n   * !! This method is not intended for use in client code.\n   *\n   * @example\n   * const manifest = deskThing.getManifest();\n   * console.log(manifest);\n   */\n  getManifest() {\n    if (!this.manifest) {\n      this.loadManifest();\n      if (!this.manifest) {\n        return;\n      } else {\n      }\n    }\n    return this.manifest;\n  }\n  /**\n   * @returns\n   */\n  async purge() {\n    try {\n      await this.notifyListeners(DESKTHING_EVENTS.PURGE, {\n        type: DESKTHING_EVENTS.PURGE,\n        request: void 0\n      });\n      this.stopRequested = true;\n      this.backgroundTasks.forEach((cancel) => cancel());\n      this.clearCache();\n    } catch (error) {\n      console.error(\"Error in Purge:\", error);\n      return {\n        data: { message: `Error in Purge: ${error}` },\n        status: 500,\n        statusText: \"Internal Server Error\",\n        request: []\n      };\n    }\n    return {\n      data: { message: \"App purged successfully!\" },\n      status: 200,\n      statusText: \"OK\",\n      request: []\n    };\n  }\n  // Method to clear cached data\n  clearCache() {\n    this.Listeners = {};\n    this.manifest = null;\n    this.stopRequested = false;\n    this.backgroundTasks = [];\n    this.sysListeners.forEach((removeListener) => removeListener());\n    this.sysListeners = [];\n    Promise.all(\n      Object.entries(this.imageUrls).map(async ([url, id]) => {\n        try {\n          const imagePath = path.join(__dirname, id);\n          await fs.promises.unlink(imagePath);\n          delete this.imageUrls[url];\n        } catch (err) {\n          console.warn(`Failed to delete image ${id}:`, err);\n        }\n      })\n    );\n  }\n  /**\n   * @returns\n   */\n  async handleServerMessage(data) {\n    try {\n      if (!data) return;\n      if (process.env.DESKTHING_ENV == \"development\") {\n      }\n      switch (data.type) {\n        case DESKTHING_EVENTS.APPDATA:\n          try {\n            if (!data.payload) throw new Error(\"No data payload\");\n            isValidAppDataInterface(data.payload);\n            this.saveAppData(data.payload, false);\n          } catch (error) {\n            console.log(\"Received invalid data from server\");\n            console.error(\"Invalid app data interface:\", error);\n            console.debug(\"Data Received: \" + JSON.stringify(data));\n            return;\n          }\n          break;\n        case DESKTHING_EVENTS.DATA:\n          if (data.payload) {\n            this.saveData(data.payload, false);\n          }\n          break;\n        case DESKTHING_EVENTS.MESSAGE:\n          console.log(\"Received message from server:\" + data.payload);\n          break;\n        case DESKTHING_EVENTS.SETTINGS:\n          if (!data.payload) {\n            console.warn(\"Received invalid settings from server:\", data);\n          } else {\n            const settings = data.payload;\n            this.notifyListeners(DESKTHING_EVENTS.SETTINGS, {\n              type: DESKTHING_EVENTS.SETTINGS,\n              payload: settings\n            });\n          }\n          break;\n        default:\n          this.notifyListeners(data.type, data);\n          break;\n      }\n    } catch (error) {\n      console.error(\n        \"Encountered an error in toClient\" + (error instanceof Error ? error.message : error)\n      );\n    }\n  }\n};\nfunction createDeskThing() {\n  return DeskThingClass.getInstance();\n}\nvar DeskThing = DeskThingClass.getInstance();\nexport {\n  DeskThing,\n  DeskThingClass,\n  createDeskThing\n};\n", "import { DeskThing } from '@deskthing/server';\r\nimport { execSync } from 'node:child_process';\r\nimport { readFileSync, existsSync, readdirSync, statSync } from 'node:fs';\r\nimport { join } from 'node:path';\r\nimport { parseFile } from 'music-metadata';\r\n\r\ninterface SongData {\r\n  title: string;\r\n  artist: string;\r\n  album: string;\r\n  state: 'playing' | 'paused';\r\n  albumArt?: string;\r\n  duration?: number;\r\n  position?: number;\r\n  timestamp?: number;\r\n}\r\n\r\ninterface LastSongData extends SongData {\r\n  timestamp: number;\r\n}\r\n\r\ninterface iTunesResult {\r\n  artistName: string;\r\n  collectionName: string;\r\n  artworkUrl100?: string;\r\n}\r\n\r\ninterface iTunesResponse {\r\n  results: iTunesResult[];\r\n  resultCount: number;\r\n}\r\n\r\ninterface LastFmImage {\r\n  size: string;\r\n  '#text': string;\r\n}\r\n\r\ninterface LastFmAlbum {\r\n  name: string;\r\n  artist: string;\r\n  image: LastFmImage[];\r\n}\r\n\r\ninterface LastFmResponse {\r\n  album: LastFmAlbum;\r\n}\r\n\r\nclass AppleMusicNowPlaying {\r\n  private positionIntervalId: ReturnType<typeof setInterval> | null = null;\r\n  private lastSongData: LastSongData | null = null;\r\n  private currentSong: SongData | null = null;\r\n  private lastSongKey: string = '';\r\n\r\n  private log(message: string): void {\r\n    if (typeof DeskThing.sendLog === 'function') {\r\n      DeskThing.sendLog(message);\r\n    } else {\r\n      console.log(message);\r\n    }\r\n  }\r\n\r\n  constructor() {\r\n    this.log('Custom Now Playing app started');\r\n  }\r\n\r\n  public start(): void {\r\n    // Send initial song data\r\n    this.sendCurrentSong();\r\n\r\n    // Check for changes every 2 seconds (less frequent)\r\n    this.positionIntervalId = setInterval(() => {\r\n      this.checkForChanges();\r\n    }, 2000);\r\n  }\r\n\r\n  public stop(): void {\r\n    if (this.positionIntervalId) {\r\n      clearInterval(this.positionIntervalId);\r\n      this.positionIntervalId = null;\r\n    }\r\n    this.log('Custom Now Playing app stopped');\r\n  }\r\n\r\n  private async checkForChanges(): Promise<void> {\r\n    try {\r\n      const basicSong = this.getBasicSongInfo();\r\n      if (!basicSong) return;\r\n\r\n      const currentSongKey = `${basicSong.artist}-${basicSong.title}-${basicSong.album}`;\r\n      const hasSongChanged = currentSongKey !== this.lastSongKey;\r\n      const hasPositionChanged = this.currentSong ?\r\n        Math.abs((this.currentSong.position || 0) - (basicSong.position || 0)) > 1 : true;\r\n      const hasStateChanged = this.currentSong?.state !== basicSong.state;\r\n      \r\n      // Log state changes for debugging\r\n      if (hasStateChanged && this.currentSong) {\r\n        this.log(`\uD83D\uDD04 State changed: ${this.currentSong.state} \u2192 ${basicSong.state}`);\r\n      }\r\n\r\n      // If song changed, fetch album art and reset everything\r\n      if (hasSongChanged) {\r\n        this.log('\uD83C\uDFB5 Song changed, fetching album art...');\r\n        this.lastSongKey = currentSongKey;\r\n\r\n        const albumArt = await this.getAlbumArt();\r\n        const fullSong = { ...basicSong, albumArt: albumArt || undefined };\r\n\r\n        this.currentSong = fullSong;\r\n        this.sendSongToDeskThing(fullSong);\r\n        this.lastSongData = {\r\n          ...fullSong,\r\n          timestamp: Date.now()\r\n        };\r\n        return;\r\n      }\r\n\r\n      // If position changed significantly or state changed, update\r\n      if (hasPositionChanged || hasStateChanged) {\r\n        if (this.currentSong) {\r\n          this.currentSong.position = basicSong.position;\r\n          this.currentSong.duration = basicSong.duration;\r\n          this.currentSong.state = basicSong.state;\r\n          // Send updated song data when state changes (especially when pausing)\r\n          this.sendSongToDeskThing(this.currentSong);\r\n        } else {\r\n          this.currentSong = basicSong;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.log('Error checking changes: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  }\r\n\r\n  private async sendCurrentSong(): Promise<void> {\r\n    try {\r\n      const currentSong = await this.getCurrentSong();\r\n      this.currentSong = currentSong; // Store current song for API access\r\n      if (currentSong) {\r\n        this.sendSongToDeskThing(currentSong);\r\n        this.lastSongData = {\r\n          ...currentSong,\r\n          timestamp: Date.now()\r\n        };\r\n        // Set the lastSongKey to prevent unnecessary album art fetching\r\n        this.lastSongKey = `${currentSong.artist}-${currentSong.title}-${currentSong.album}`;\r\n      }\r\n    } catch (error) {\r\n      this.log('Error sending current song: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  }\r\n\r\n  public getCurrentSongData(): SongData | null {\r\n    return this.currentSong;\r\n  }\r\n\r\n  private getBasicSongInfo(): SongData | null {\r\n    try {\r\n      // Check if Apple Music is running and get player state\r\n      const playerState = this.getPlayerState();\r\n      if (playerState === 'stopped') {\r\n        return null;\r\n      }\r\n\r\n      // Get track information (fast operations)\r\n      const title = this.getTrackTitle();\r\n      const artist = this.getTrackArtist();\r\n      const album = this.getTrackAlbum();\r\n      const duration = this.getSongDuration();\r\n      const position = this.getSongPosition();\r\n\r\n      // If we can't get basic info, assume nothing is playing\r\n      if (!title || !artist) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        title,\r\n        artist,\r\n        album: album || 'Unknown Album',\r\n        state: playerState as 'playing' | 'paused',\r\n        duration: duration > 0 ? duration : undefined,\r\n        position: position > 0 ? position : undefined\r\n      };\r\n    } catch (error) {\r\n      // Apple Music not open or other error\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async getCurrentSong(): Promise<SongData | null> {\r\n    try {\r\n      const basicSong = this.getBasicSongInfo();\r\n      if (!basicSong) return null;\r\n\r\n      const albumArt = await this.getAlbumArt();\r\n      return {\r\n        ...basicSong,\r\n        albumArt: albumArt || undefined\r\n      };\r\n    } catch (error) {\r\n      // Apple Music not open or other error\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private getPlayerState(): string {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              return player state as string\r\n            on error\r\n              return \"stopped\"\r\n            end try\r\n          else\r\n            return \"stopped\"\r\n          end if\r\n        end tell\r\n      `;\r\n      return execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n    } catch {\r\n      return 'stopped';\r\n    }\r\n  }\r\n\r\n  private getTrackTitle(): string {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              return name of current track\r\n            on error\r\n              return \"\"\r\n            end try\r\n          else\r\n            return \"\"\r\n          end if\r\n        end tell\r\n      `;\r\n      return execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private getTrackArtist(): string {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              return artist of current track\r\n            on error\r\n              return \"\"\r\n            end try\r\n          else\r\n            return \"\"\r\n          end if\r\n        end tell\r\n      `;\r\n      return execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private getTrackAlbum(): string {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              return album of current track\r\n            on error\r\n              return \"\"\r\n            end try\r\n          else\r\n            return \"\"\r\n          end if\r\n        end tell\r\n      `;\r\n      return execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private async getAlbumArt(): Promise<string> {\r\n    // Tier 1: Try AppleScript artwork \u2192 base64\r\n    const base64Art = await this.getAppleScriptArtworkBase64();\r\n    if (base64Art) {\r\n      this.log('\u2705 AppleScript artwork found!');\r\n      return base64Art;\r\n    }\r\n\r\n    // Tier 2: Try iTunes API (most reliable for streaming music)\r\n    const itunesArt = await this.getItunesArtwork();\r\n    if (itunesArt) {\r\n      this.log('\u2705 iTunes artwork found!');\r\n      return itunesArt;\r\n    }\r\n\r\n    // Tier 3: Try Last.fm API (comprehensive database)\r\n    const lastfmArt = await this.getLastfmArtwork();\r\n    if (lastfmArt) {\r\n      this.log('\u2705 Last.fm artwork found!');\r\n      return lastfmArt;\r\n    }\r\n\r\n    // Tier 4: Try music-metadata on local file\r\n    const metadataArt = await this.getMetadataArtwork();\r\n    if (metadataArt) {\r\n      this.log('\u2705 Metadata artwork found!');\r\n      return metadataArt;\r\n    }\r\n\r\n    // Tier 5: Try cached artwork from Apple Music container\r\n    const cachedArt = await this.getCachedArtwork();\r\n    if (cachedArt) {\r\n      this.log('\u2705 Cached artwork found!');\r\n      return cachedArt;\r\n    }\r\n\r\n    this.log('\u274C No album art found');\r\n    return '';\r\n  }\r\n\r\n  private async getAppleScriptArtworkBase64(): Promise<string> {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              set currentTrack to current track\r\n              if (count of artworks of currentTrack) > 0 then\r\n                set artworkData to data of artwork 1 of currentTrack\r\n                set tempFile to (POSIX path of (path to temporary items)) & \"album_art_\" & (random number from 1000 to 9999) & \".jpg\"\r\n                set fileRef to open for access file tempFile with write permission\r\n                set eof fileRef to 0\r\n                write artworkData to fileRef\r\n                close access fileRef\r\n                return tempFile\r\n              else\r\n                return \"\"\r\n              end if\r\n            on error\r\n              return \"\"\r\n            end try\r\n          else\r\n            return \"\"\r\n          end if\r\n        end tell\r\n      `;\r\n      const result = execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n\r\n      if (result && existsSync(result)) {\r\n        const imageData = readFileSync(result);\r\n        const base64 = imageData.toString('base64');\r\n        return `data:image/jpeg;base64,${base64}`;\r\n      }\r\n      return '';\r\n    } catch (error) {\r\n      this.log('AppleScript artwork error: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private async getItunesArtwork(): Promise<string> {\r\n    try {\r\n      const title = this.getTrackTitle();\r\n      const artist = this.getTrackArtist();\r\n      const album = this.getTrackAlbum();\r\n\r\n      if (!title || !artist) {\r\n        return '';\r\n      }\r\n\r\n      // Try multiple search strategies\r\n      const searchTerms = [\r\n        `${artist} ${album || title}`,\r\n        `${artist} ${title}`,\r\n        `${title} ${artist}`\r\n      ];\r\n\r\n      for (const searchTerm of searchTerms) {\r\n        const itunesUrl = `https://itunes.apple.com/search?term=${encodeURIComponent(searchTerm)}&entity=album&limit=1`;\r\n        const response = await fetch(itunesUrl, {\r\n          headers: {\r\n            'User-Agent': 'AppleMusicNowPlaying/1.0 (contact@example.com)'\r\n          }\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json() as iTunesResponse;\r\n          \r\n          if (data.results && data.results.length > 0) {\r\n            const result = data.results[0];\r\n            const artworkUrl = result.artworkUrl100?.replace('100x100', '600x600');\r\n            \r\n            if (artworkUrl) {\r\n              const imageResult = await this.fetchAndConvertImage(artworkUrl);\r\n              if (imageResult) {\r\n                return imageResult;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Fallback: Try to find any album by the same artist\r\n      this.log(`\uD83C\uDFA8 No exact match found, trying artist fallback for: ${artist}`);\r\n      const artistUrl = `https://itunes.apple.com/search?term=${encodeURIComponent(artist)}&entity=album&limit=1`;\r\n      this.log(`\uD83D\uDD0D Artist fallback URL: ${artistUrl}`);\r\n      const artistResponse = await fetch(artistUrl);\r\n      \r\n      if (artistResponse.ok) {\r\n        const artistData = await artistResponse.json() as iTunesResponse;\r\n        this.log(`\uD83D\uDD0D Artist fallback response: ${artistData.resultCount} results`);\r\n        \r\n        if (artistData.results && artistData.results.length > 0) {\r\n          const result = artistData.results[0];\r\n          this.log(`\uD83D\uDD0D Artist fallback result: ${result.artistName} - ${result.collectionName}`);\r\n          const artworkUrl = result.artworkUrl100?.replace('100x100', '600x600');\r\n          \r\n          if (artworkUrl) {\r\n            this.log(`\uD83D\uDD0D Artist fallback artwork URL: ${artworkUrl}`);\r\n            const imageResult = await this.fetchAndConvertImage(artworkUrl);\r\n            if (imageResult) {\r\n              this.log(`\uD83C\uDFA8 Artist fallback artwork found for: ${artist}`);\r\n              return imageResult;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.log(`\u274C Artist fallback API error: ${artistResponse.status}`);\r\n      }\r\n\r\n      return '';\r\n    } catch (error) {\r\n      this.log('iTunes artwork error: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private async getLastfmArtwork(): Promise<string> {\r\n    try {\r\n      const title = this.getTrackTitle();\r\n      const artist = this.getTrackArtist();\r\n      const album = this.getTrackAlbum();\r\n\r\n      if (!title || !artist) {\r\n        return '';\r\n      }\r\n\r\n      // Last.fm API key\r\n      const API_KEY = process.env.LASTFM_API_KEY || '15ea39b489ea0fb56936a1573b5f6383';\r\n\r\n      // Try multiple search strategies for Last.fm\r\n      const searchStrategies = [\r\n        // Strategy 1: Album search\r\n        album ? `album=${encodeURIComponent(album)}&artist=${encodeURIComponent(artist)}` : null,\r\n        // Strategy 2: Track search\r\n        `track=${encodeURIComponent(title)}&artist=${encodeURIComponent(artist)}`,\r\n        // Strategy 3: Artist search (fallback)\r\n        `artist=${encodeURIComponent(artist)}`\r\n      ].filter(Boolean);\r\n\r\n      for (const searchParams of searchStrategies) {\r\n        const lastfmUrl = `https://ws.audioscrobbler.com/2.0/?method=album.getinfo&${searchParams}&api_key=${API_KEY}&format=json`;\r\n        this.log(`\uD83D\uDD0D Last.fm search: ${searchParams}`);\r\n        \r\n        const response = await fetch(lastfmUrl, {\r\n          headers: {\r\n            'User-Agent': 'AppleMusicNowPlaying/1.0 (contact@example.com)'\r\n          }\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json() as LastFmResponse;\r\n          \r\n          if (data.album && data.album.image && data.album.image.length > 0) {\r\n            // Get the largest available image\r\n            const images = data.album.image;\r\n            const largeImage = images.find((img: LastFmImage) => img.size === 'large') || \r\n                             images.find((img: LastFmImage) => img.size === 'medium') || \r\n                             images[images.length - 1];\r\n            \r\n            if (largeImage && largeImage['#text']) {\r\n              const imageResult = await this.fetchAndConvertImage(largeImage['#text']);\r\n              if (imageResult) {\r\n                this.log(`\uD83C\uDFA8 Last.fm artwork found: ${data.album.name} by ${data.album.artist}`);\r\n                return imageResult;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return '';\r\n    } catch (error) {\r\n      this.log('Last.fm artwork error: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private async getMetadataArtwork(): Promise<string> {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              set currentTrack to current track\r\n              set trackLocation to location of currentTrack\r\n              return POSIX path of trackLocation\r\n            on error\r\n              return \"\"\r\n            end try\r\n          else\r\n            return \"\"\r\n          end if\r\n        end tell\r\n      `;\r\n      const filePath = execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n\r\n      if (filePath && existsSync(filePath)) {\r\n        const metadata = await parseFile(filePath);\r\n        if (metadata.common.picture && metadata.common.picture.length > 0) {\r\n          const picture = metadata.common.picture[0];\r\n          const base64 = Buffer.from(picture.data).toString('base64');\r\n          return `data:${picture.format};base64,${base64}`;\r\n        }\r\n      }\r\n      return '';\r\n    } catch (error) {\r\n      this.log('Metadata artwork error: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private async getCachedArtwork(): Promise<string> {\r\n    try {\r\n      const artworkPath = join(process.env.HOME || '', 'Library/Containers/com.apple.AMPMusic/Data/Documents/Artwork');\r\n\r\n      if (existsSync(artworkPath)) {\r\n        const files = readdirSync(artworkPath);\r\n        // Get the most recently modified file\r\n        const sortedFiles = files\r\n          .map(file => ({\r\n            name: file,\r\n            path: join(artworkPath, file),\r\n            mtime: statSync(join(artworkPath, file)).mtime\r\n          }))\r\n          .sort((a, b) => b.mtime.getTime() - a.mtime.getTime());\r\n\r\n        if (sortedFiles.length > 0) {\r\n          const latestFile = sortedFiles[0];\r\n          const imageData = readFileSync(latestFile.path);\r\n          const base64 = imageData.toString('base64');\r\n          return `data:image/jpeg;base64,${base64}`;\r\n        }\r\n      }\r\n      return '';\r\n    } catch (error) {\r\n      this.log('Cached artwork error: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private async fetchAndConvertImage(imageUrl: string): Promise<string> {\r\n    try {\r\n      const imageResponse = await fetch(imageUrl);\r\n      \r\n      if (imageResponse.ok) {\r\n        const imageBuffer = await imageResponse.arrayBuffer();\r\n        const base64 = Buffer.from(imageBuffer).toString('base64');\r\n        return `data:image/jpeg;base64,${base64}`;\r\n      }\r\n      return '';\r\n    } catch (error) {\r\n      this.log('Image fetch error: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private getSongDuration(): number {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              return duration of current track\r\n            on error\r\n              return 0\r\n            end try\r\n          else\r\n            return 0\r\n          end if\r\n        end tell\r\n      `;\r\n      const result = execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n      return parseInt(result) || 0;\r\n    } catch {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  private getSongPosition(): number {\r\n    try {\r\n      const script = `\r\n        tell application \"Music\"\r\n          if it is running then\r\n            try\r\n              return player position\r\n            on error\r\n              return 0\r\n            end try\r\n          else\r\n            return 0\r\n          end if\r\n        end tell\r\n      `;\r\n      const result = execSync(`osascript -e '${script}'`, { encoding: 'utf8' }).trim();\r\n      return parseFloat(result) || 0;\r\n    } catch {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  private hasSongChanged(currentSong: SongData): boolean {\r\n    if (!this.lastSongData) {\r\n      return true;\r\n    }\r\n\r\n    return (\r\n      this.lastSongData.title !== currentSong.title ||\r\n      this.lastSongData.artist !== currentSong.artist ||\r\n      this.lastSongData.album !== currentSong.album ||\r\n      this.lastSongData.state !== currentSong.state\r\n    );\r\n  }\r\n\r\n  private sendSongToDeskThing(song: SongData): void {\r\n    try {\r\n      // Send to DeskThing instead of console.log\r\n      const payload = {\r\n        version: 2,\r\n        title: song.title,\r\n        artist: song.artist,\r\n        album: song.album,\r\n        state: song.state,\r\n        timestamp: Date.now(),\r\n        albumArt: song.albumArt,\r\n        duration: song.duration,\r\n        position: song.position\r\n      };\r\n\r\n      DeskThing.send({ type: 'currentSong', payload });\r\n      this.log('\uD83C\uDFB5 Current Song: ' + JSON.stringify(payload, null, 2));\r\n    } catch (error) {\r\n      this.log('Error processing song data: ' + (error instanceof Error ? error.message : 'Unknown error'));\r\n    }\r\n  }\r\n}\r\n\r\n// Create the app instance\r\nconst app = new AppleMusicNowPlaying();\r\n\r\n// DeskThing event handlers\r\nconst startup = () => {\r\n  console.log('\uD83C\uDFB5 Apple Music Now Playing server started!');\r\n  app.start();\r\n}\r\n\r\nconst stop = () => {\r\n  console.log('\uD83D\uDED1 Apple Music Now Playing server stopped');\r\n  app.stop();\r\n}\r\n\r\nconst purge = () => {\r\n  console.log('\uD83E\uDDF9 Apple Music Now Playing server purged');\r\n  app.stop();\r\n}\r\n\r\n// Register DeskThing event handlers\r\nDeskThing.on('start', startup);\r\nDeskThing.on('stop', stop);\r\nDeskThing.on('purge', purge);", "/**\n * Node.js specific entry point.\n */\nimport { fromFile, fromStream } from 'strtok3';\nimport initDebug from 'debug';\nimport { CouldNotDetermineFileTypeError, parseFromTokenizer, UnsupportedFileTypeError } from './core.js';\nimport { ParserFactory } from './ParserFactory.js';\nexport * from './core.js';\nconst debug = initDebug('music-metadata:parser');\n/**\n * Parse audio from Node Stream.Readable\n * @param stream - Stream to read the audio track from\n * @param fileInfo - File information object or MIME-type, e.g.: 'audio/mpeg'\n * @param options - Parsing options\n * @returns Metadata\n */\nexport async function parseStream(stream, fileInfo, options = {}) {\n    const tokenizer = await fromStream(stream, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    try {\n        return await parseFromTokenizer(tokenizer, options);\n    }\n    finally {\n        await tokenizer.close();\n    }\n}\n/**\n * Parse audio from Node file\n * @param filePath - Media file to read meta-data from\n * @param options - Parsing options\n * @returns Metadata\n */\nexport async function parseFile(filePath, options = {}) {\n    debug(`parseFile: ${filePath}`);\n    const fileTokenizer = await fromFile(filePath);\n    const parserFactory = new ParserFactory();\n    try {\n        const parserLoader = parserFactory.findLoaderForExtension(filePath);\n        if (!parserLoader)\n            debug('Parser could not be determined by file extension');\n        try {\n            return await parserFactory.parse(fileTokenizer, parserLoader, options);\n        }\n        catch (error) {\n            if (error instanceof CouldNotDetermineFileTypeError || error instanceof UnsupportedFileTypeError) {\n                error.message += `: ${filePath}`;\n            }\n            throw error;\n        }\n    }\n    finally {\n        await fileTokenizer.close();\n    }\n}\n", "/**\n * Primary entry point, Node.js specific entry point is MusepackParser.ts\n */\nimport { fromWebStream, fromBuffer, fromBlob } from 'strtok3';\nimport { ParserFactory } from './ParserFactory.js';\nimport { APEv2Parser } from './apev2/APEv2Parser.js';\nimport { hasID3v1Header } from './id3v1/ID3v1Parser.js';\nimport { getLyricsHeaderLength } from './lyrics3/Lyrics3.js';\nexport { LyricsContentType, TimestampFormat } from './type.js';\nexport { CouldNotDetermineFileTypeError, UnsupportedFileTypeError } from './ParseError.js';\nexport * from './ParseError.js';\n/**\n * Parse Web API File\n * Requires Blob to be able to stream using a ReadableStreamBYOBReader, only available since Node.js \u2265 20\n * @param blob - Blob to parse\n * @param options - Parsing options\n * @returns Metadata\n */\nexport async function parseBlob(blob, options = {}) {\n    const tokenizer = fromBlob(blob);\n    try {\n        return await parseFromTokenizer(tokenizer, options);\n    }\n    finally {\n        await tokenizer.close();\n    }\n}\n/**\n * Parse audio from Web Stream.Readable\n * @param webStream - WebStream to read the audio track from\n * @param options - Parsing options\n * @param fileInfo - File information object or MIME-type string\n * @returns Metadata\n */\nexport async function parseWebStream(webStream, fileInfo, options = {}) {\n    const tokenizer = fromWebStream(webStream, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    try {\n        return await parseFromTokenizer(tokenizer, options);\n    }\n    finally {\n        await tokenizer.close();\n    }\n}\n/**\n * Parse audio from memory\n * @param uint8Array - Uint8Array holding audio data\n * @param fileInfo - File information object or MIME-type string\n * @param options - Parsing options\n * @returns Metadata\n * Ref: https://github.com/Borewit/strtok3/blob/e6938c81ff685074d5eb3064a11c0b03ca934c1d/src/index.ts#L15\n */\nexport async function parseBuffer(uint8Array, fileInfo, options = {}) {\n    const tokenizer = fromBuffer(uint8Array, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    return parseFromTokenizer(tokenizer, options);\n}\n/**\n * Parse audio from ITokenizer source\n * @param tokenizer - Audio source implementing the tokenizer interface\n * @param options - Parsing options\n * @returns Metadata\n */\nexport function parseFromTokenizer(tokenizer, options) {\n    const parserFactory = new ParserFactory();\n    return parserFactory.parse(tokenizer, undefined, options);\n}\n/**\n * Create a dictionary ordered by their tag id (key)\n * @param nativeTags list of tags\n * @returns tags indexed by id\n */\nexport function orderTags(nativeTags) {\n    const tags = {};\n    for (const { id, value } of nativeTags) {\n        (tags[id] || (tags[id] = [])).push(value);\n    }\n    return tags;\n}\n/**\n * Convert rating to 1-5 star rating\n * @param rating Normalized rating [0..1] (common.rating[n].rating)\n * @returns Number of stars: 1, 2, 3, 4 or 5 stars\n */\nexport function ratingToStars(rating) {\n    return rating === undefined ? 0 : 1 + Math.round(rating * 4);\n}\n/**\n * Select most likely cover image.\n * @param pictures Usually metadata.common.picture\n * @return Cover image, if any, otherwise null\n */\nexport function selectCover(pictures) {\n    return pictures ? pictures.reduce((acc, cur) => {\n        if (cur.name && cur.name.toLowerCase() in ['front', 'cover', 'cover (front)'])\n            return cur;\n        return acc;\n    }) : null;\n}\nexport async function scanAppendingHeaders(tokenizer, options = {}) {\n    let apeOffset = tokenizer.fileInfo.size;\n    if (await hasID3v1Header(tokenizer)) {\n        apeOffset -= 128;\n        const lyricsLen = await getLyricsHeaderLength(tokenizer);\n        apeOffset -= lyricsLen;\n    }\n    options.apeHeader = await APEv2Parser.findApeFooterOffset(tokenizer, apeOffset);\n}\n/**\n * Implementation only available when loaded as Node.js\n * This method will throw an Error, always.\n */\nexport async function parseFile(_filePath, _options = {}) {\n    throw new Error('This function require a Node engine. To load Web API File objects use parseBlob instead.');\n}\n/**\n * Implementation only available when loaded as Node.js\n * This method will throw an Error, always.\n */\nexport async function parseStream(_stream, _fileInfo, _options = {}) {\n    throw new Error('This function require a Node engine.');\n}\n/**\n * Return a list of supported mime-types\n */\nexport function getSupportedMimeTypes() {\n    return new ParserFactory().getSupportedMimeTypes();\n}\n", "/**\nNode.js specific entry point.\n*/\n\nimport {ReadableStream as WebReadableStream} from 'node:stream/web';\nimport {pipeline, PassThrough, Readable} from 'node:stream';\nimport * as strtok3 from 'strtok3';\nimport {FileTypeParser as DefaultFileTypeParser, reasonableDetectionSizeInBytes} from './core.js';\n\nexport class FileTypeParser extends DefaultFileTypeParser {\n\tasync fromStream(stream) {\n\t\tconst tokenizer = await (stream instanceof WebReadableStream ? strtok3.fromWebStream(stream, this.tokenizerOptions) : strtok3.fromStream(stream, this.tokenizerOptions));\n\t\ttry {\n\t\t\treturn await super.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync fromFile(path) {\n\t\tconst tokenizer = await strtok3.fromFile(path);\n\t\ttry {\n\t\t\treturn await super.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync toDetectionStream(readableStream, options = {}) {\n\t\tif (!(readableStream instanceof Readable)) {\n\t\t\treturn super.toDetectionStream(readableStream, options);\n\t\t}\n\n\t\tconst {sampleSize = reasonableDetectionSizeInBytes} = options;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treadableStream.on('error', reject);\n\n\t\t\treadableStream.once('readable', () => {\n\t\t\t\t(async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Set up output stream\n\t\t\t\t\t\tconst pass = new PassThrough();\n\t\t\t\t\t\tconst outputStream = pipeline ? pipeline(readableStream, pass, () => {}) : readableStream.pipe(pass);\n\n\t\t\t\t\t\t// Read the input stream and detect the filetype\n\t\t\t\t\t\tconst chunk = readableStream.read(sampleSize) ?? readableStream.read() ?? new Uint8Array(0);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tpass.fileType = await this.fromBuffer(chunk);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (error instanceof strtok3.EndOfStreamError) {\n\t\t\t\t\t\t\t\tpass.fileType = undefined;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(outputStream);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport async function fileTypeFromFile(path, options) {\n\treturn (new FileTypeParser(options)).fromFile(path, options);\n}\n\nexport async function fileTypeFromStream(stream, options) {\n\treturn (new FileTypeParser(options)).fromStream(stream);\n}\n\nexport async function fileTypeStream(readableStream, options = {}) {\n\treturn new FileTypeParser(options).toDetectionStream(readableStream, options);\n}\n\nexport {\n\tfileTypeFromTokenizer,\n\tfileTypeFromBuffer,\n\tfileTypeFromBlob,\n\tsupportedMimeTypes,\n\tsupportedExtensions,\n} from './core.js';\n", "/**\nPrimary entry point, Node.js specific entry point is index.js\n*/\n\nimport * as Token from 'token-types';\nimport * as strtok3 from 'strtok3/core';\nimport {ZipHandler} from '@tokenizer/inflate';\nimport {getUintBE} from 'uint8array-extras';\nimport {\n\tstringToBytes,\n\ttarHeaderChecksumMatches,\n\tuint32SyncSafeToken,\n} from './util.js';\nimport {extensions, mimeTypes} from './supported.js';\n\nexport const reasonableDetectionSizeInBytes = 4100; // A fair amount of file-types are detectable within this range.\n\nexport async function fileTypeFromStream(stream, options) {\n\treturn new FileTypeParser(options).fromStream(stream);\n}\n\nexport async function fileTypeFromBuffer(input, options) {\n\treturn new FileTypeParser(options).fromBuffer(input);\n}\n\nexport async function fileTypeFromBlob(blob, options) {\n\treturn new FileTypeParser(options).fromBlob(blob);\n}\n\nfunction getFileTypeFromMimeType(mimeType) {\n\tmimeType = mimeType.toLowerCase();\n\tswitch (mimeType) {\n\t\tcase 'application/epub+zip':\n\t\t\treturn {\n\t\t\t\text: 'epub',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text':\n\t\t\treturn {\n\t\t\t\text: 'odt',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text-template':\n\t\t\treturn {\n\t\t\t\text: 'ott',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\treturn {\n\t\t\t\text: 'ods',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet-template':\n\t\t\treturn {\n\t\t\t\text: 'ots',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\treturn {\n\t\t\t\text: 'odp',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation-template':\n\t\t\treturn {\n\t\t\t\text: 'otp',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics':\n\t\t\treturn {\n\t\t\t\text: 'odg',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics-template':\n\t\t\treturn {\n\t\t\t\text: 'otg',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.slideshow':\n\t\t\treturn {\n\t\t\t\text: 'ppsx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n\t\t\treturn {\n\t\t\t\text: 'xlsx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.sheet.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xlsm',\n\t\t\t\tmime: 'application/vnd.ms-excel.sheet.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.template':\n\t\t\treturn {\n\t\t\t\text: 'xltx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xltm',\n\t\t\t\tmime: 'application/vnd.ms-excel.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.slideshow.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'ppsm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n\t\t\treturn {\n\t\t\t\text: 'docx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.document.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'docm',\n\t\t\t\tmime: 'application/vnd.ms-word.document.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.template':\n\t\t\treturn {\n\t\t\t\text: 'dotx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.template.macroenabledtemplate':\n\t\t\treturn {\n\t\t\t\text: 'dotm',\n\t\t\t\tmime: 'application/vnd.ms-word.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.template':\n\t\t\treturn {\n\t\t\t\text: 'potx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'potm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.presentation':\n\t\t\treturn {\n\t\t\t\text: 'pptx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.presentation.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'pptm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-visio.drawing':\n\t\t\treturn {\n\t\t\t\text: 'vsdx',\n\t\t\t\tmime: 'application/vnd.visio',\n\t\t\t};\n\t\tcase 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml':\n\t\t\treturn {\n\t\t\t\text: '3mf',\n\t\t\t\tmime: 'model/3mf',\n\t\t\t};\n\t\tdefault:\n\t}\n}\n\nfunction _check(buffer, headers, options) {\n\toptions = {\n\t\toffset: 0,\n\t\t...options,\n\t};\n\n\tfor (const [index, header] of headers.entries()) {\n\t\t// If a bitmask is set\n\t\tif (options.mask) {\n\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\tif (header !== (options.mask[index] & buffer[index + options.offset])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (header !== buffer[index + options.offset]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport async function fileTypeFromTokenizer(tokenizer, options) {\n\treturn new FileTypeParser(options).fromTokenizer(tokenizer);\n}\n\nexport async function fileTypeStream(webStream, options) {\n\treturn new FileTypeParser(options).toDetectionStream(webStream, options);\n}\n\nexport class FileTypeParser {\n\tconstructor(options) {\n\t\tthis.options = {\n\t\t\tmpegOffsetTolerance: 0,\n\t\t\t...options,\n\t\t};\n\n\t\tthis.detectors = [...(options?.customDetectors ?? []),\n\t\t\t{id: 'core', detect: this.detectConfident},\n\t\t\t{id: 'core.imprecise', detect: this.detectImprecise}];\n\t\tthis.tokenizerOptions = {\n\t\t\tabortSignal: options?.signal,\n\t\t};\n\t}\n\n\tasync fromTokenizer(tokenizer) {\n\t\tconst initialPosition = tokenizer.position;\n\n\t\t// Iterate through all file-type detectors\n\t\tfor (const detector of this.detectors) {\n\t\t\tconst fileType = await detector.detect(tokenizer);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\n\t\t\tif (initialPosition !== tokenizer.position) {\n\t\t\t\treturn undefined; // Cannot proceed scanning of the tokenizer is at an arbitrary position\n\t\t\t}\n\t\t}\n\t}\n\n\tasync fromBuffer(input) {\n\t\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer)) {\n\t\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t\t}\n\n\t\tconst buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\t\tif (!(buffer?.length > 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.fromTokenizer(strtok3.fromBuffer(buffer, this.tokenizerOptions));\n\t}\n\n\tasync fromBlob(blob) {\n\t\treturn this.fromStream(blob.stream());\n\t}\n\n\tasync fromStream(stream) {\n\t\tconst tokenizer = await strtok3.fromWebStream(stream, this.tokenizerOptions);\n\t\ttry {\n\t\t\treturn await this.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync toDetectionStream(stream, options) {\n\t\tconst {sampleSize = reasonableDetectionSizeInBytes} = options;\n\t\tlet detectedFileType;\n\t\tlet firstChunk;\n\n\t\tconst reader = stream.getReader({mode: 'byob'});\n\t\ttry {\n\t\t\t// Read the first chunk from the stream\n\t\t\tconst {value: chunk, done} = await reader.read(new Uint8Array(sampleSize));\n\t\t\tfirstChunk = chunk;\n\t\t\tif (!done && chunk) {\n\t\t\t\ttry {\n\t\t\t\t\t// Attempt to detect the file type from the chunk\n\t\t\t\t\tdetectedFileType = await this.fromBuffer(chunk.subarray(0, sampleSize));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\t\tthrow error; // Re-throw non-EndOfStreamError\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedFileType = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfirstChunk = chunk;\n\t\t} finally {\n\t\t\treader.releaseLock(); // Ensure the reader is released\n\t\t}\n\n\t\t// Create a new ReadableStream to manage locking issues\n\t\tconst transformStream = new TransformStream({\n\t\t\tasync start(controller) {\n\t\t\t\tcontroller.enqueue(firstChunk); // Enqueue the initial chunk\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\t// Pass through the chunks without modification\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t});\n\n\t\tconst newStream = stream.pipeThrough(transformStream);\n\t\tnewStream.fileType = detectedFileType;\n\n\t\treturn newStream;\n\t}\n\n\tcheck(header, options) {\n\t\treturn _check(this.buffer, header, options);\n\t}\n\n\tcheckString(header, options) {\n\t\treturn this.check(stringToBytes(header), options);\n\t}\n\n\t// Detections with a high degree of certainty in identifying the correct file type\n\tdetectConfident = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Keep reading until EOF if the file size is unknown.\n\t\tif (tokenizer.fileInfo.size === undefined) {\n\t\t\ttokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n\t\t}\n\n\t\tthis.tokenizer = tokenizer;\n\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: 12, mayBeLess: true});\n\n\t\t// -- 2-byte signatures --\n\n\t\tif (this.check([0x42, 0x4D])) {\n\t\t\treturn {\n\t\t\t\text: 'bmp',\n\t\t\t\tmime: 'image/bmp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x0B, 0x77])) {\n\t\t\treturn {\n\t\t\t\text: 'ac3',\n\t\t\t\tmime: 'audio/vnd.dolby.dd-raw',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x78, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'dmg',\n\t\t\t\tmime: 'application/x-apple-diskimage',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4D, 0x5A])) {\n\t\t\treturn {\n\t\t\t\text: 'exe',\n\t\t\t\tmime: 'application/x-msdownload',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x25, 0x21])) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 24, mayBeLess: true});\n\n\t\t\tif (\n\t\t\t\tthis.checkString('PS-Adobe-', {offset: 2})\n\t\t\t\t&& this.checkString(' EPSF-', {offset: 14})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'eps',\n\t\t\t\t\tmime: 'application/eps',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ps',\n\t\t\t\tmime: 'application/postscript',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x1F, 0xA0])\n\t\t\t|| this.check([0x1F, 0x9D])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'Z',\n\t\t\t\tmime: 'application/x-compress',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC7, 0x71])) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x60, 0xEA])) {\n\t\t\treturn {\n\t\t\t\text: 'arj',\n\t\t\t\tmime: 'application/x-arj',\n\t\t\t};\n\t\t}\n\n\t\t// -- 3-byte signatures --\n\n\t\tif (this.check([0xEF, 0xBB, 0xBF])) { // UTF-8-BOM\n\t\t\t// Strip off UTF-8-BOM\n\t\t\tthis.tokenizer.ignore(3);\n\t\t\treturn this.detectConfident(tokenizer);\n\t\t}\n\n\t\tif (this.check([0x47, 0x49, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'gif',\n\t\t\t\tmime: 'image/gif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0xBC])) {\n\t\t\treturn {\n\t\t\t\text: 'jxr',\n\t\t\t\tmime: 'image/vnd.ms-photo',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x1F, 0x8B, 0x8])) {\n\t\t\treturn {\n\t\t\t\text: 'gz',\n\t\t\t\tmime: 'application/gzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x5A, 0x68])) {\n\t\t\treturn {\n\t\t\t\text: 'bz2',\n\t\t\t\tmime: 'application/x-bzip2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ID3')) {\n\t\t\tawait tokenizer.ignore(6); // Skip ID3 header until the header size\n\t\t\tconst id3HeaderLength = await tokenizer.readToken(uint32SyncSafeToken);\n\t\t\tif (tokenizer.position + id3HeaderLength > tokenizer.fileInfo.size) {\n\t\t\t\t// Guess file type based on ID3 header for backward compatibility\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(id3HeaderLength);\n\t\t\treturn this.fromTokenizer(tokenizer); // Skip ID3 header, recursion\n\t\t}\n\n\t\t// Musepack, SV7\n\t\tif (this.checkString('MP+')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\t(this.buffer[0] === 0x43 || this.buffer[0] === 0x46)\n\t\t\t&& this.check([0x57, 0x53], {offset: 1})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'swf',\n\t\t\t\tmime: 'application/x-shockwave-flash',\n\t\t\t};\n\t\t}\n\n\t\t// -- 4-byte signatures --\n\n\t\t// Requires a sample size of 4 bytes\n\t\tif (this.check([0xFF, 0xD8, 0xFF])) {\n\t\t\tif (this.check([0xF7], {offset: 3})) { // JPG7/SOF55, indicating a ISO/IEC 14495 / JPEG-LS file\n\t\t\t\treturn {\n\t\t\t\t\text: 'jls',\n\t\t\t\t\tmime: 'image/jls',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'jpg',\n\t\t\t\tmime: 'image/jpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4F, 0x62, 0x6A, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'avro',\n\t\t\t\tmime: 'application/avro',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FLIF')) {\n\t\t\treturn {\n\t\t\t\text: 'flif',\n\t\t\t\tmime: 'image/flif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('8BPS')) {\n\t\t\treturn {\n\t\t\t\text: 'psd',\n\t\t\t\tmime: 'image/vnd.adobe.photoshop',\n\t\t\t};\n\t\t}\n\n\t\t// Musepack, SV8\n\t\tif (this.checkString('MPCK')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FORM')) {\n\t\t\treturn {\n\t\t\t\text: 'aif',\n\t\t\t\tmime: 'audio/aiff',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('icns', {offset: 0})) {\n\t\t\treturn {\n\t\t\t\text: 'icns',\n\t\t\t\tmime: 'image/icns',\n\t\t\t};\n\t\t}\n\n\t\t// Zip-based file formats\n\t\t// Need to be before the `zip` check\n\t\tif (this.check([0x50, 0x4B, 0x3, 0x4])) { // Local file header signature\n\t\t\tlet fileType;\n\t\t\tawait new ZipHandler(tokenizer).unzip(zipHeader => {\n\t\t\t\tswitch (zipHeader.filename) {\n\t\t\t\t\tcase 'META-INF/mozilla.rsa':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'xpi',\n\t\t\t\t\t\t\tmime: 'application/x-xpinstall',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'META-INF/MANIFEST.MF':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'jar',\n\t\t\t\t\t\t\tmime: 'application/java-archive',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'mimetype':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tconst mimeType = new TextDecoder('utf-8').decode(fileData).trim();\n\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase '[Content_Types].xml':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tlet xmlContent = new TextDecoder('utf-8').decode(fileData);\n\t\t\t\t\t\t\t\tconst endPos = xmlContent.indexOf('.main+xml\"');\n\t\t\t\t\t\t\t\tif (endPos === -1) {\n\t\t\t\t\t\t\t\t\tconst mimeType = 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml';\n\t\t\t\t\t\t\t\t\tif (xmlContent.includes(`ContentType=\"${mimeType}\"`)) {\n\t\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\txmlContent = xmlContent.slice(0, Math.max(0, endPos));\n\t\t\t\t\t\t\t\t\tconst firstPos = xmlContent.lastIndexOf('\"');\n\t\t\t\t\t\t\t\t\tconst mimeType = xmlContent.slice(Math.max(0, firstPos + 1));\n\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (/classes\\d*\\.dex/.test(zipHeader.filename)) {\n\t\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\t\text: 'apk',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.android.package-archive',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn {stop: true};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('OggS')) {\n\t\t\t// This is an OGG container\n\t\t\tawait tokenizer.ignore(28);\n\t\t\tconst type = new Uint8Array(8);\n\t\t\tawait tokenizer.readBuffer(type);\n\n\t\t\t// Needs to be before `ogg` check\n\t\t\tif (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'opus',\n\t\t\t\t\tmime: 'audio/ogg; codecs=opus',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' theora' in header.\n\t\t\tif (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogv',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01video' in header.\n\t\t\tif (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogm',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\t\tif (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'oga',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\t\tif (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'spx',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01vorbis' in header\n\t\t\tif (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogg',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\t\treturn {\n\t\t\t\text: 'ogx',\n\t\t\t\tmime: 'application/ogg',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x50, 0x4B])\n\t\t\t&& (this.buffer[2] === 0x3 || this.buffer[2] === 0x5 || this.buffer[2] === 0x7)\n\t\t\t&& (this.buffer[3] === 0x4 || this.buffer[3] === 0x6 || this.buffer[3] === 0x8)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('MThd')) {\n\t\t\treturn {\n\t\t\t\text: 'mid',\n\t\t\t\tmime: 'audio/midi',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOFF')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff',\n\t\t\t\tmime: 'font/woff',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOF2')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff2',\n\t\t\t\tmime: 'font/woff2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD4, 0xC3, 0xB2, 0xA1]) || this.check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\t\treturn {\n\t\t\t\text: 'pcap',\n\t\t\t\tmime: 'application/vnd.tcpdump.pcap',\n\t\t\t};\n\t\t}\n\n\t\t// Sony DSD Stream File (DSF)\n\t\tif (this.checkString('DSD ')) {\n\t\t\treturn {\n\t\t\t\text: 'dsf',\n\t\t\t\tmime: 'audio/x-dsf', // Non-standard\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('LZIP')) {\n\t\t\treturn {\n\t\t\t\text: 'lz',\n\t\t\t\tmime: 'application/x-lzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('fLaC')) {\n\t\t\treturn {\n\t\t\t\text: 'flac',\n\t\t\t\tmime: 'audio/flac',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x50, 0x47, 0xFB])) {\n\t\t\treturn {\n\t\t\t\text: 'bpg',\n\t\t\t\tmime: 'image/bpg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('wvpk')) {\n\t\t\treturn {\n\t\t\t\text: 'wv',\n\t\t\t\tmime: 'audio/wavpack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('%PDF')) {\n\t\t\t// Assume this is just a normal PDF\n\t\t\treturn {\n\t\t\t\text: 'pdf',\n\t\t\t\tmime: 'application/pdf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x61, 0x73, 0x6D])) {\n\t\t\treturn {\n\t\t\t\text: 'wasm',\n\t\t\t\tmime: 'application/wasm',\n\t\t\t};\n\t\t}\n\n\t\t// TIFF, little-endian type\n\t\tif (this.check([0x49, 0x49])) {\n\t\t\tconst fileType = await this.readTiffHeader(false);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\t// TIFF, big-endian type\n\t\tif (this.check([0x4D, 0x4D])) {\n\t\t\tconst fileType = await this.readTiffHeader(true);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MAC ')) {\n\t\t\treturn {\n\t\t\t\text: 'ape',\n\t\t\t\tmime: 'audio/ape',\n\t\t\t};\n\t\t}\n\n\t\t// https://github.com/file/file/blob/master/magic/Magdir/matroska\n\t\tif (this.check([0x1A, 0x45, 0xDF, 0xA3])) { // Root element: EBML\n\t\t\tasync function readField() {\n\t\t\t\tconst msb = await tokenizer.peekNumber(Token.UINT8);\n\t\t\t\tlet mask = 0x80;\n\t\t\t\tlet ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n\t\t\t\twhile ((msb & mask) === 0 && mask !== 0) {\n\t\t\t\t\t++ic;\n\t\t\t\t\tmask >>= 1;\n\t\t\t\t}\n\n\t\t\t\tconst id = new Uint8Array(ic + 1);\n\t\t\t\tawait tokenizer.readBuffer(id);\n\t\t\t\treturn id;\n\t\t\t}\n\n\t\t\tasync function readElement() {\n\t\t\t\tconst idField = await readField();\n\t\t\t\tconst lengthField = await readField();\n\n\t\t\t\tlengthField[0] ^= 0x80 >> (lengthField.length - 1);\n\t\t\t\tconst nrLength = Math.min(6, lengthField.length); // JavaScript can max read 6 bytes integer\n\n\t\t\t\tconst idView = new DataView(idField.buffer);\n\t\t\t\tconst lengthView = new DataView(lengthField.buffer, lengthField.length - nrLength, nrLength);\n\n\t\t\t\treturn {\n\t\t\t\t\tid: getUintBE(idView),\n\t\t\t\t\tlen: getUintBE(lengthView),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tasync function readChildren(children) {\n\t\t\t\twhile (children > 0) {\n\t\t\t\t\tconst element = await readElement();\n\t\t\t\t\tif (element.id === 0x42_82) {\n\t\t\t\t\t\tconst rawValue = await tokenizer.readToken(new Token.StringType(element.len));\n\t\t\t\t\t\treturn rawValue.replaceAll(/\\00.*$/g, ''); // Return DocType\n\t\t\t\t\t}\n\n\t\t\t\t\tawait tokenizer.ignore(element.len); // ignore payload\n\t\t\t\t\t--children;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst re = await readElement();\n\t\t\tconst documentType = await readChildren(re.len);\n\n\t\t\tswitch (documentType) {\n\t\t\t\tcase 'webm':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'webm',\n\t\t\t\t\t\tmime: 'video/webm',\n\t\t\t\t\t};\n\n\t\t\t\tcase 'matroska':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mkv',\n\t\t\t\t\t\tmime: 'video/matroska',\n\t\t\t\t\t};\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('SQLi')) {\n\t\t\treturn {\n\t\t\t\text: 'sqlite',\n\t\t\t\tmime: 'application/x-sqlite3',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\t\treturn {\n\t\t\t\text: 'nes',\n\t\t\t\tmime: 'application/x-nintendo-nes-rom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Cr24')) {\n\t\t\treturn {\n\t\t\t\text: 'crx',\n\t\t\t\tmime: 'application/x-google-chrome-extension',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('MSCF')\n\t\t\t|| this.checkString('ISc(')\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'cab',\n\t\t\t\tmime: 'application/vnd.ms-cab-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\t\treturn {\n\t\t\t\text: 'rpm',\n\t\t\t\tmime: 'application/x-rpm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC5, 0xD0, 0xD3, 0xC6])) {\n\t\t\treturn {\n\t\t\t\text: 'eps',\n\t\t\t\tmime: 'application/eps',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x28, 0xB5, 0x2F, 0xFD])) {\n\t\t\treturn {\n\t\t\t\text: 'zst',\n\t\t\t\tmime: 'application/zstd',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x7F, 0x45, 0x4C, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'elf',\n\t\t\t\tmime: 'application/x-elf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x21, 0x42, 0x44, 0x4E])) {\n\t\t\treturn {\n\t\t\t\text: 'pst',\n\t\t\t\tmime: 'application/vnd.ms-outlook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('PAR1') || this.checkString('PARE')) {\n\t\t\treturn {\n\t\t\t\text: 'parquet',\n\t\t\t\tmime: 'application/vnd.apache.parquet',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ttcf')) {\n\t\t\treturn {\n\t\t\t\text: 'ttc',\n\t\t\t\tmime: 'font/collection',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCF, 0xFA, 0xED, 0xFE])) {\n\t\t\treturn {\n\t\t\t\text: 'macho',\n\t\t\t\tmime: 'application/x-mach-binary',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x22, 0x4D, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'lz4',\n\t\t\t\tmime: 'application/x-lz4', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'otf',\n\t\t\t\tmime: 'font/otf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('#!AMR')) {\n\t\t\treturn {\n\t\t\t\text: 'amr',\n\t\t\t\tmime: 'audio/amr',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('{\\\\rtf')) {\n\t\t\treturn {\n\t\t\t\text: 'rtf',\n\t\t\t\tmime: 'application/rtf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x46, 0x4C, 0x56, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'flv',\n\t\t\t\tmime: 'video/x-flv',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('IMPM')) {\n\t\t\treturn {\n\t\t\t\text: 'it',\n\t\t\t\tmime: 'audio/x-it',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('-lh0-', {offset: 2})\n\t\t\t|| this.checkString('-lh1-', {offset: 2})\n\t\t\t|| this.checkString('-lh2-', {offset: 2})\n\t\t\t|| this.checkString('-lh3-', {offset: 2})\n\t\t\t|| this.checkString('-lh4-', {offset: 2})\n\t\t\t|| this.checkString('-lh5-', {offset: 2})\n\t\t\t|| this.checkString('-lh6-', {offset: 2})\n\t\t\t|| this.checkString('-lh7-', {offset: 2})\n\t\t\t|| this.checkString('-lzs-', {offset: 2})\n\t\t\t|| this.checkString('-lz4-', {offset: 2})\n\t\t\t|| this.checkString('-lz5-', {offset: 2})\n\t\t\t|| this.checkString('-lhd-', {offset: 2})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'lzh',\n\t\t\t\tmime: 'application/x-lzh-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// MPEG program stream (PS or MPEG-PS)\n\t\tif (this.check([0x00, 0x00, 0x01, 0xBA])) {\n\t\t\t//  MPEG-PS, MPEG-1 Part 1\n\t\t\tif (this.check([0x21], {offset: 4, mask: [0xF1]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .ps, .mpeg\n\t\t\t\t\tmime: 'video/MP1S',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG-PS, MPEG-2 Part 1\n\t\t\tif (this.check([0x44], {offset: 4, mask: [0xC4]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .mpg, .m2p, .vob or .sub\n\t\t\t\t\tmime: 'video/MP2P',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('ITSF')) {\n\t\t\treturn {\n\t\t\t\text: 'chm',\n\t\t\t\tmime: 'application/vnd.ms-htmlhelp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCA, 0xFE, 0xBA, 0xBE])) {\n\t\t\treturn {\n\t\t\t\text: 'class',\n\t\t\t\tmime: 'application/java-vm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('.RMF')) {\n\t\t\treturn {\n\t\t\t\text: 'rm',\n\t\t\t\tmime: 'application/vnd.rn-realmedia',\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.checkString('DRACO')) {\n\t\t\treturn {\n\t\t\t\text: 'drc',\n\t\t\t\tmime: 'application/vnd.google.draco', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 6-byte signatures --\n\n\t\tif (this.check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'xz',\n\t\t\t\tmime: 'application/x-xz',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('<?xml ')) {\n\t\t\treturn {\n\t\t\t\text: 'xml',\n\t\t\t\tmime: 'application/xml',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\t\treturn {\n\t\t\t\text: '7z',\n\t\t\t\tmime: 'application/x-7z-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7])\n\t\t\t&& (this.buffer[6] === 0x0 || this.buffer[6] === 0x1)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'rar',\n\t\t\t\tmime: 'application/x-rar-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('solid ')) {\n\t\t\treturn {\n\t\t\t\text: 'stl',\n\t\t\t\tmime: 'model/stl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('AC')) {\n\t\t\tconst version = new Token.StringType(4, 'latin1').get(this.buffer, 2);\n\t\t\tif (version.match('^d*') && version >= 1000 && version <= 1050) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'dwg',\n\t\t\t\t\tmime: 'image/vnd.dwg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('070707')) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\t// -- 7-byte signatures --\n\n\t\tif (this.checkString('BLENDER')) {\n\t\t\treturn {\n\t\t\t\text: 'blend',\n\t\t\t\tmime: 'application/x-blender',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('!<arch>')) {\n\t\t\tawait tokenizer.ignore(8);\n\t\t\tconst string = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\t\t\tif (string === 'debian-binary') {\n\t\t\t\treturn {\n\t\t\t\t\text: 'deb',\n\t\t\t\t\tmime: 'application/x-deb',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ar',\n\t\t\t\tmime: 'application/x-unix-archive',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('WEBVTT')\n\t\t\t&&\t(\n\t\t\t\t// One of LF, CR, tab, space, or end of file must follow \"WEBVTT\" per the spec (see `fixture/fixture-vtt-*.vtt` for examples). Note that `\\0` is technically the null character (there is no such thing as an EOF character). However, checking for `\\0` gives us the same result as checking for the end of the stream.\n\t\t\t\t(['\\n', '\\r', '\\t', ' ', '\\0'].some(char7 => this.checkString(char7, {offset: 6}))))\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'vtt',\n\t\t\t\tmime: 'text/vtt',\n\t\t\t};\n\t\t}\n\n\t\t// -- 8-byte signatures --\n\n\t\tif (this.check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\t// APNG format (https://wiki.mozilla.org/APNG_Specification)\n\t\t\t// 1. Find the first IDAT (image data) chunk (49 44 41 54)\n\t\t\t// 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n\t\t\t// Offset calculated as follows:\n\t\t\t// - 8 bytes: PNG signature\n\t\t\t// - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n\t\t\tawait tokenizer.ignore(8); // ignore PNG signature\n\n\t\t\tasync function readChunkHeader() {\n\t\t\t\treturn {\n\t\t\t\t\tlength: await tokenizer.readToken(Token.INT32_BE),\n\t\t\t\t\ttype: await tokenizer.readToken(new Token.StringType(4, 'latin1')),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tconst chunk = await readChunkHeader();\n\t\t\t\tif (chunk.length < 0) {\n\t\t\t\t\treturn; // Invalid chunk length\n\t\t\t\t}\n\n\t\t\t\tswitch (chunk.type) {\n\t\t\t\t\tcase 'IDAT':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'png',\n\t\t\t\t\t\t\tmime: 'image/png',\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'acTL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'apng',\n\t\t\t\t\t\t\tmime: 'image/apng',\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tawait tokenizer.ignore(chunk.length + 4); // Ignore chunk-data + CRC\n\t\t\t\t}\n\t\t\t} while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n\n\t\t\treturn {\n\t\t\t\text: 'png',\n\t\t\t\tmime: 'image/png',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'arrow',\n\t\t\t\tmime: 'application/vnd.apache.arrow.file',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'glb',\n\t\t\t\tmime: 'model/gltf-binary',\n\t\t\t};\n\t\t}\n\n\t\t// `mov` format variants\n\t\tif (\n\t\t\tthis.check([0x66, 0x72, 0x65, 0x65], {offset: 4}) // `free`\n\t\t\t|| this.check([0x6D, 0x64, 0x61, 0x74], {offset: 4}) // `mdat` MJPEG\n\t\t\t|| this.check([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) // `moov`\n\t\t\t|| this.check([0x77, 0x69, 0x64, 0x65], {offset: 4}) // `wide`\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mov',\n\t\t\t\tmime: 'video/quicktime',\n\t\t\t};\n\t\t}\n\n\t\t// -- 9-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'orf',\n\t\t\t\tmime: 'image/x-olympus-orf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('gimp xcf ')) {\n\t\t\treturn {\n\t\t\t\text: 'xcf',\n\t\t\t\tmime: 'image/x-xcf',\n\t\t\t};\n\t\t}\n\n\t\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\t\t// It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n\t\t// `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n\t\t// Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\t\tif (\n\t\t\tthis.checkString('ftyp', {offset: 4})\n\t\t\t&& (this.buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n\t\t) {\n\t\t\t// They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n\t\t\t// For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n\t\t\tconst brandMajor = new Token.StringType(4, 'latin1').get(this.buffer, 8).replace('\\0', ' ').trim();\n\t\t\tswitch (brandMajor) {\n\t\t\t\tcase 'avif':\n\t\t\t\tcase 'avis':\n\t\t\t\t\treturn {ext: 'avif', mime: 'image/avif'};\n\t\t\t\tcase 'mif1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif'};\n\t\t\t\tcase 'msf1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif-sequence'};\n\t\t\t\tcase 'heic':\n\t\t\t\tcase 'heix':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic'};\n\t\t\t\tcase 'hevc':\n\t\t\t\tcase 'hevx':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic-sequence'};\n\t\t\t\tcase 'qt':\n\t\t\t\t\treturn {ext: 'mov', mime: 'video/quicktime'};\n\t\t\t\tcase 'M4V':\n\t\t\t\tcase 'M4VH':\n\t\t\t\tcase 'M4VP':\n\t\t\t\t\treturn {ext: 'm4v', mime: 'video/x-m4v'};\n\t\t\t\tcase 'M4P':\n\t\t\t\t\treturn {ext: 'm4p', mime: 'video/mp4'};\n\t\t\t\tcase 'M4B':\n\t\t\t\t\treturn {ext: 'm4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'M4A':\n\t\t\t\t\treturn {ext: 'm4a', mime: 'audio/x-m4a'};\n\t\t\t\tcase 'F4V':\n\t\t\t\t\treturn {ext: 'f4v', mime: 'video/mp4'};\n\t\t\t\tcase 'F4P':\n\t\t\t\t\treturn {ext: 'f4p', mime: 'video/mp4'};\n\t\t\t\tcase 'F4A':\n\t\t\t\t\treturn {ext: 'f4a', mime: 'audio/mp4'};\n\t\t\t\tcase 'F4B':\n\t\t\t\t\treturn {ext: 'f4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'crx':\n\t\t\t\t\treturn {ext: 'cr3', mime: 'image/x-canon-cr3'};\n\t\t\t\tdefault:\n\t\t\t\t\tif (brandMajor.startsWith('3g')) {\n\t\t\t\t\t\tif (brandMajor.startsWith('3g2')) {\n\t\t\t\t\t\t\treturn {ext: '3g2', mime: 'video/3gpp2'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {ext: '3gp', mime: 'video/3gpp'};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ext: 'mp4', mime: 'video/mp4'};\n\t\t\t}\n\t\t}\n\n\t\t// -- 12-byte signatures --\n\n\t\t// RIFF file format which might be AVI, WAV, QCP, etc\n\t\tif (this.check([0x52, 0x49, 0x46, 0x46])) {\n\t\t\tif (this.checkString('WEBP', {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'webp',\n\t\t\t\t\tmime: 'image/webp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'avi',\n\t\t\t\t\tmime: 'video/vnd.avi',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'wav',\n\t\t\t\t\tmime: 'audio/wav',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// QLCM, QCP file\n\t\t\tif (this.check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'qcp',\n\t\t\t\t\tmime: 'audio/qcelp',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n\t\t\treturn {\n\t\t\t\text: 'rw2',\n\t\t\t\tmime: 'image/x-panasonic-rw2',\n\t\t\t};\n\t\t}\n\n\t\t// ASF_Header_Object first 80 bytes\n\t\tif (this.check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t\tasync function readHeader() {\n\t\t\t\tconst guid = new Uint8Array(16);\n\t\t\t\tawait tokenizer.readBuffer(guid);\n\t\t\t\treturn {\n\t\t\t\t\tid: guid,\n\t\t\t\t\tsize: Number(await tokenizer.readToken(Token.UINT64_LE)),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(30);\n\t\t\t// Search for header should be in first 1KB of file.\n\t\t\twhile (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n\t\t\t\tconst header = await readHeader();\n\t\t\t\tlet payload = header.size - 24;\n\t\t\t\tif (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n\t\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\t\tconst typeId = new Uint8Array(16);\n\t\t\t\t\tpayload -= await tokenizer.readBuffer(typeId);\n\n\t\t\t\t\tif (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found audio:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'audio/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found video:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'video/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait tokenizer.ignore(payload);\n\t\t\t}\n\n\t\t\t// Default to ASF generic extension\n\t\t\treturn {\n\t\t\t\text: 'asf',\n\t\t\t\tmime: 'application/vnd.ms-asf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\treturn {\n\t\t\t\text: 'ktx',\n\t\t\t\tmime: 'image/ktx',\n\t\t\t};\n\t\t}\n\n\t\tif ((this.check([0x7E, 0x10, 0x04]) || this.check([0x7E, 0x18, 0x04])) && this.check([0x30, 0x4D, 0x49, 0x45], {offset: 4})) {\n\t\t\treturn {\n\t\t\t\text: 'mie',\n\t\t\t\tmime: 'application/x-mie',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {offset: 2})) {\n\t\t\treturn {\n\t\t\t\text: 'shp',\n\t\t\t\tmime: 'application/x-esri-shape',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0x4F, 0xFF, 0x51])) {\n\t\t\treturn {\n\t\t\t\text: 'j2c',\n\t\t\t\tmime: 'image/j2c',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t\t// JPEG-2000 family\n\n\t\t\tawait tokenizer.ignore(20);\n\t\t\tconst type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\t\t\tswitch (type) {\n\t\t\t\tcase 'jp2 ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jp2',\n\t\t\t\t\t\tmime: 'image/jp2',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpx ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpx',\n\t\t\t\t\t\tmime: 'image/jpx',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpm ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpm',\n\t\t\t\t\t\tmime: 'image/jpm',\n\t\t\t\t\t};\n\t\t\t\tcase 'mjp2':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mj2',\n\t\t\t\t\t\tmime: 'image/mj2',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0xFF, 0x0A])\n\t\t\t|| this.check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'jxl',\n\t\t\t\tmime: 'image/jxl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFE, 0xFF])) { // UTF-16-BOM-LE\n\t\t\tif (this.check([0, 60, 0, 63, 0, 120, 0, 109, 0, 108], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some unknown text based format\n\t\t}\n\n\t\tif (this.check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\t\t// Detected Microsoft Compound File Binary File (MS-CFB) Format.\n\t\t\treturn {\n\t\t\t\text: 'cfb',\n\t\t\t\tmime: 'application/x-cfb',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 12 to 256.\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(256, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (this.check([0x61, 0x63, 0x73, 0x70], {offset: 36})) {\n\t\t\treturn {\n\t\t\t\text: 'icc',\n\t\t\t\tmime: 'application/vnd.iccprofile',\n\t\t\t};\n\t\t}\n\n\t\t// ACE: requires 14 bytes in the buffer\n\t\tif (this.checkString('**ACE', {offset: 7}) && this.checkString('**', {offset: 12})) {\n\t\t\treturn {\n\t\t\t\text: 'ace',\n\t\t\t\tmime: 'application/x-ace-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// -- 15-byte signatures --\n\n\t\tif (this.checkString('BEGIN:')) {\n\t\t\tif (this.checkString('VCARD', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'vcf',\n\t\t\t\t\tmime: 'text/vcard',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.checkString('VCALENDAR', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ics',\n\t\t\t\t\tmime: 'text/calendar',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `raf` is here just to keep all the raw image detectors together.\n\t\tif (this.checkString('FUJIFILMCCD-RAW')) {\n\t\t\treturn {\n\t\t\t\text: 'raf',\n\t\t\t\tmime: 'image/x-fujifilm-raf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Extended Module:')) {\n\t\t\treturn {\n\t\t\t\text: 'xm',\n\t\t\t\tmime: 'audio/x-xm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Creative Voice File')) {\n\t\t\treturn {\n\t\t\t\text: 'voc',\n\t\t\t\tmime: 'audio/x-voc',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x00, 0x00, 0x00]) && this.buffer.length >= 16) { // Rough & quick check Pickle/ASAR\n\t\t\tconst jsonSize = new DataView(this.buffer.buffer).getUint32(12, true);\n\n\t\t\tif (jsonSize > 12 && this.buffer.length >= jsonSize + 16) {\n\t\t\t\ttry {\n\t\t\t\t\tconst header = new TextDecoder().decode(this.buffer.subarray(16, jsonSize + 16));\n\t\t\t\t\tconst json = JSON.parse(header);\n\t\t\t\t\t// Check if Pickle is ASAR\n\t\t\t\t\tif (json.files) { // Final check, assuring Pickle/ASAR format\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asar',\n\t\t\t\t\t\t\tmime: 'application/x-asar',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\t\treturn {\n\t\t\t\text: 'mxf',\n\t\t\t\tmime: 'application/mxf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('SCRM', {offset: 44})) {\n\t\t\treturn {\n\t\t\t\text: 's3m',\n\t\t\t\tmime: 'audio/x-s3m',\n\t\t\t};\n\t\t}\n\n\t\t// Raw MPEG-2 transport stream (188-byte packets)\n\t\tif (this.check([0x47]) && this.check([0x47], {offset: 188})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\t// Blu-ray Disc Audio-Video (BDAV) MPEG-2 transport stream has 4-byte TP_extra_header before each 188-byte packet\n\t\tif (this.check([0x47], {offset: 4}) && this.check([0x47], {offset: 196})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\t\treturn {\n\t\t\t\text: 'mobi',\n\t\t\t\tmime: 'application/x-mobipocket-ebook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\t\treturn {\n\t\t\t\text: 'dcm',\n\t\t\t\tmime: 'application/dicom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'lnk',\n\t\t\t\tmime: 'application/x.ms.shortcut', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'alias',\n\t\t\t\tmime: 'application/x.apple.alias', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Kaydara FBX Binary  \\u0000')) {\n\t\t\treturn {\n\t\t\t\text: 'fbx',\n\t\t\t\tmime: 'application/x.autodesk.fbx', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x4C, 0x50], {offset: 34})\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x00, 0x01], {offset: 8})\n\t\t\t\t|| this.check([0x01, 0x00, 0x02], {offset: 8})\n\t\t\t\t|| this.check([0x02, 0x00, 0x02], {offset: 8})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'eot',\n\t\t\t\tmime: 'application/vnd.ms-fontobject',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n\t\t\treturn {\n\t\t\t\text: 'indd',\n\t\t\t\tmime: 'application/x-indesign',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 256 to 512\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(512, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Requires a buffer size of 512 bytes\n\t\tif ((this.checkString('ustar', {offset: 257}) && (this.checkString('\\0', {offset: 262}) || this.checkString(' ', {offset: 262})))\n\t\t\t|| (this.check([0, 0, 0, 0, 0, 0], {offset: 257}) && tarHeaderChecksumMatches(this.buffer))) {\n\t\t\treturn {\n\t\t\t\text: 'tar',\n\t\t\t\tmime: 'application/x-tar',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0xFE])) { // UTF-16-BOM-BE\n\t\t\tif (this.check([60, 0, 63, 0, 120, 0, 109, 0, 108, 0], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'skp',\n\t\t\t\t\tmime: 'application/vnd.sketchup.skp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some text based format\n\t\t}\n\n\t\tif (this.checkString('-----BEGIN PGP MESSAGE-----')) {\n\t\t\treturn {\n\t\t\t\text: 'pgp',\n\t\t\t\tmime: 'application/pgp-encrypted',\n\t\t\t};\n\t\t}\n\t};\n\t// Detections with limited supporting data, resulting in a higher likelihood of false positives\n\tdetectImprecise = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Read initial sample size of 8 bytes\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(8, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (\n\t\t\tthis.check([0x0, 0x0, 0x1, 0xBA])\n\t\t\t|| this.check([0x0, 0x0, 0x1, 0xB3])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mpg',\n\t\t\t\tmime: 'video/mpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ttf',\n\t\t\t\tmime: 'font/ttf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x01, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ico',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x02, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'cur',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\t// Adjust buffer to `mpegOffsetTolerance`\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(2 + this.options.mpegOffsetTolerance, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n\t\tif (this.buffer.length >= (2 + this.options.mpegOffsetTolerance)) {\n\t\t\tfor (let depth = 0; depth <= this.options.mpegOffsetTolerance; ++depth) {\n\t\t\t\tconst type = this.scanMpeg(depth);\n\t\t\t\tif (type) {\n\t\t\t\t\treturn type;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tasync readTiffTag(bigEndian) {\n\t\tconst tagId = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tthis.tokenizer.ignore(10);\n\t\tswitch (tagId) {\n\t\t\tcase 50_341:\n\t\t\t\treturn {\n\t\t\t\t\text: 'arw',\n\t\t\t\t\tmime: 'image/x-sony-arw',\n\t\t\t\t};\n\t\t\tcase 50_706:\n\t\t\t\treturn {\n\t\t\t\t\text: 'dng',\n\t\t\t\t\tmime: 'image/x-adobe-dng',\n\t\t\t\t};\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync readTiffIFD(bigEndian) {\n\t\tconst numberOfTags = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tfor (let n = 0; n < numberOfTags; ++n) {\n\t\t\tconst fileType = await this.readTiffTag(bigEndian);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffHeader(bigEndian) {\n\t\tconst version = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 2);\n\t\tconst ifdOffset = (bigEndian ? Token.UINT32_BE : Token.UINT32_LE).get(this.buffer, 4);\n\n\t\tif (version === 42) {\n\t\t\t// TIFF file header\n\t\t\tif (ifdOffset >= 6) {\n\t\t\t\tif (this.checkString('CR', {offset: 8})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'cr2',\n\t\t\t\t\t\tmime: 'image/x-canon-cr2',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (ifdOffset >= 8) {\n\t\t\t\t\tconst someId1 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 8);\n\t\t\t\t\tconst someId2 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 10);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(someId1 === 0x1C && someId2 === 0xFE)\n\t\t\t\t\t\t|| (someId1 === 0x1F && someId2 === 0x0B)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'nef',\n\t\t\t\t\t\t\tmime: 'image/x-nikon-nef',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.tokenizer.ignore(ifdOffset);\n\t\t\tconst fileType = await this.readTiffIFD(bigEndian);\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\n\t\tif (version === 43) {\t// Big TIFF file header\n\t\t\treturn {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\tScan check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE).\n\n\t@param offset - Offset to scan for sync-preamble.\n\t@returns {{ext: string, mime: string}}\n\t*/\n\tscanMpeg(offset) {\n\t\tif (this.check([0xFF, 0xE0], {offset, mask: [0xFF, 0xE0]})) {\n\t\t\tif (this.check([0x10], {offset: offset + 1, mask: [0x16]})) {\n\t\t\t\t// Check for (ADTS) MPEG-2\n\t\t\t\tif (this.check([0x08], {offset: offset + 1, mask: [0x08]})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'aac',\n\t\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Must be (ADTS) MPEG-4\n\t\t\t\treturn {\n\t\t\t\t\text: 'aac',\n\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG 1 or 2 Layer 3 header\n\t\t\t// Check for MPEG layer 3\n\t\t\tif (this.check([0x02], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 2\n\t\t\tif (this.check([0x04], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp2',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 1\n\t\t\tif (this.check([0x06], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp1',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport const supportedExtensions = new Set(extensions);\nexport const supportedMimeTypes = new Set(mimeTypes);\n", "import { StringType, UINT32_LE } from 'token-types';\nimport { decompressSync } from 'fflate';\nimport initDebug from 'debug';\nimport { DataDescriptor, EndOfCentralDirectoryRecordToken, FileHeader, LocalFileHeaderToken, Signature } from \"./ZipToken.js\";\nfunction signatureToArray(signature) {\n    const signatureBytes = new Uint8Array(UINT32_LE.len);\n    UINT32_LE.put(signatureBytes, 0, signature);\n    return signatureBytes;\n}\nconst debug = initDebug('tokenizer:inflate');\nconst syncBufferSize = 256 * 1024;\nconst ddSignatureArray = signatureToArray(Signature.DataDescriptor);\nconst eocdSignatureBytes = signatureToArray(Signature.EndOfCentralDirectory);\nexport class ZipHandler {\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n        this.syncBuffer = new Uint8Array(syncBufferSize);\n    }\n    async isZip() {\n        return await this.peekSignature() === Signature.LocalFileHeader;\n    }\n    peekSignature() {\n        return this.tokenizer.peekToken(UINT32_LE);\n    }\n    async findEndOfCentralDirectoryLocator() {\n        const randomReadTokenizer = this.tokenizer;\n        const chunkLength = Math.min(16 * 1024, randomReadTokenizer.fileInfo.size);\n        const buffer = this.syncBuffer.subarray(0, chunkLength);\n        await this.tokenizer.readBuffer(buffer, { position: randomReadTokenizer.fileInfo.size - chunkLength });\n        // Search the buffer from end to beginning for EOCD signature\n        // const signature = 0x06054b50;\n        for (let i = buffer.length - 4; i >= 0; i--) {\n            // Compare 4 bytes directly without calling readUInt32LE\n            if (buffer[i] === eocdSignatureBytes[0] &&\n                buffer[i + 1] === eocdSignatureBytes[1] &&\n                buffer[i + 2] === eocdSignatureBytes[2] &&\n                buffer[i + 3] === eocdSignatureBytes[3]) {\n                return randomReadTokenizer.fileInfo.size - chunkLength + i;\n            }\n        }\n        return -1;\n    }\n    async readCentralDirectory() {\n        if (!this.tokenizer.supportsRandomAccess()) {\n            debug('Cannot reading central-directory without random-read support');\n            return;\n        }\n        debug('Reading central-directory...');\n        const pos = this.tokenizer.position;\n        const offset = await this.findEndOfCentralDirectoryLocator();\n        if (offset > 0) {\n            debug('Central-directory 32-bit signature found');\n            const eocdHeader = await this.tokenizer.readToken(EndOfCentralDirectoryRecordToken, offset);\n            const files = [];\n            this.tokenizer.setPosition(eocdHeader.offsetOfStartOfCd);\n            for (let n = 0; n < eocdHeader.nrOfEntriesOfSize; ++n) {\n                const entry = await this.tokenizer.readToken(FileHeader);\n                if (entry.signature !== Signature.CentralFileHeader) {\n                    throw new Error('Expected Central-File-Header signature');\n                }\n                entry.filename = await this.tokenizer.readToken(new StringType(entry.filenameLength, 'utf-8'));\n                await this.tokenizer.ignore(entry.extraFieldLength);\n                await this.tokenizer.ignore(entry.fileCommentLength);\n                files.push(entry);\n                debug(`Add central-directory file-entry: n=${n + 1}/${files.length}: filename=${files[n].filename}`);\n            }\n            this.tokenizer.setPosition(pos);\n            return files;\n        }\n        this.tokenizer.setPosition(pos);\n    }\n    async unzip(fileCb) {\n        const entries = await this.readCentralDirectory();\n        if (entries) {\n            // Use Central Directory to iterate over files\n            return this.iterateOverCentralDirectory(entries, fileCb);\n        }\n        // Scan Zip files for local-file-header\n        let stop = false;\n        do {\n            const zipHeader = await this.readLocalFileHeader();\n            if (!zipHeader)\n                break;\n            const next = fileCb(zipHeader);\n            stop = !!next.stop;\n            let fileData = undefined;\n            await this.tokenizer.ignore(zipHeader.extraFieldLength);\n            if (zipHeader.dataDescriptor && zipHeader.compressedSize === 0) {\n                const chunks = [];\n                let len = syncBufferSize;\n                debug('Compressed-file-size unknown, scanning for next data-descriptor-signature....');\n                let nextHeaderIndex = -1;\n                while (nextHeaderIndex < 0 && len === syncBufferSize) {\n                    len = await this.tokenizer.peekBuffer(this.syncBuffer, { mayBeLess: true });\n                    nextHeaderIndex = indexOf(this.syncBuffer.subarray(0, len), ddSignatureArray);\n                    const size = nextHeaderIndex >= 0 ? nextHeaderIndex : len;\n                    if (next.handler) {\n                        const data = new Uint8Array(size);\n                        await this.tokenizer.readBuffer(data);\n                        chunks.push(data);\n                    }\n                    else {\n                        // Move position to the next header if found, skip the whole buffer otherwise\n                        await this.tokenizer.ignore(size);\n                    }\n                }\n                debug(`Found data-descriptor-signature at pos=${this.tokenizer.position}`);\n                if (next.handler) {\n                    await this.inflate(zipHeader, mergeArrays(chunks), next.handler);\n                }\n            }\n            else {\n                if (next.handler) {\n                    debug(`Reading compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    fileData = new Uint8Array(zipHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n                else {\n                    debug(`Ignoring compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    await this.tokenizer.ignore(zipHeader.compressedSize);\n                }\n            }\n            debug(`Reading data-descriptor at pos=${this.tokenizer.position}`);\n            if (zipHeader.dataDescriptor) {\n                // await this.tokenizer.ignore(DataDescriptor.len);\n                const dataDescriptor = await this.tokenizer.readToken(DataDescriptor);\n                if (dataDescriptor.signature !== 0x08074b50) {\n                    throw new Error(`Expected data-descriptor-signature at position ${this.tokenizer.position - DataDescriptor.len}`);\n                }\n            }\n        } while (!stop);\n    }\n    async iterateOverCentralDirectory(entries, fileCb) {\n        for (const fileHeader of entries) {\n            const next = fileCb(fileHeader);\n            if (next.handler) {\n                this.tokenizer.setPosition(fileHeader.relativeOffsetOfLocalHeader);\n                const zipHeader = await this.readLocalFileHeader();\n                if (zipHeader) {\n                    await this.tokenizer.ignore(zipHeader.extraFieldLength);\n                    const fileData = new Uint8Array(fileHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n            }\n            if (next.stop)\n                break;\n        }\n    }\n    inflate(zipHeader, fileData, cb) {\n        if (zipHeader.compressedMethod === 0) {\n            return cb(fileData);\n        }\n        debug(`Decompress filename=${zipHeader.filename}, compressed-size=${fileData.length}`);\n        const uncompressedData = decompressSync(fileData);\n        return cb(uncompressedData);\n    }\n    async readLocalFileHeader() {\n        const signature = await this.tokenizer.peekToken(UINT32_LE);\n        if (signature === Signature.LocalFileHeader) {\n            const header = await this.tokenizer.readToken(LocalFileHeaderToken);\n            header.filename = await this.tokenizer.readToken(new StringType(header.filenameLength, 'utf-8'));\n            return header;\n        }\n        if (signature === Signature.CentralFileHeader) {\n            return false;\n        }\n        if (signature === 0xE011CFD0) {\n            throw new Error('Encrypted ZIP');\n        }\n        throw new Error('Unexpected signature');\n    }\n}\nfunction indexOf(buffer, portion) {\n    const bufferLength = buffer.length;\n    const portionLength = portion.length;\n    // Return -1 if the portion is longer than the buffer\n    if (portionLength > bufferLength)\n        return -1;\n    // Search for the portion in the buffer\n    for (let i = 0; i <= bufferLength - portionLength; i++) {\n        let found = true;\n        for (let j = 0; j < portionLength; j++) {\n            if (buffer[i + j] !== portion[j]) {\n                found = false;\n                break;\n            }\n        }\n        if (found) {\n            return i; // Return the starting offset\n        }\n    }\n    return -1; // Not found\n}\nfunction mergeArrays(chunks) {\n    // Concatenate chunks into a single Uint8Array\n    const totalLength = chunks.reduce((acc, curr) => acc + curr.length, 0);\n    const mergedArray = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const chunk of chunks) {\n        mergedArray.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return mergedArray;\n}\n", "import { createRequire } from 'module';\nvar require = createRequire('/');\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\n// Mediocre shim\nvar Worker;\nvar workerAdd = \";var __w=require('worker_threads');__w.parentPort.on('message',function(m){onmessage({data:m})}),postMessage=function(m,t){__w.parentPort.postMessage(m,t)},close=process.exit;self=global\";\ntry {\n    Worker = require('worker_threads').Worker;\n}\ncatch (e) {\n}\nvar wk = Worker ? function (c, _, msg, transfer, cb) {\n    var done = false;\n    var w = new Worker(c + workerAdd, { eval: true })\n        .on('error', function (e) { return cb(e, null); })\n        .on('message', function (m) { return cb(null, m); })\n        .on('exit', function (c) {\n        if (c && !done)\n            cb(new Error('exited with code ' + c), null);\n    });\n    w.postMessage(msg, transfer);\n    w.terminate = function () {\n        done = true;\n        return Worker.prototype.terminate.call(w);\n    };\n    return w;\n} : function (_, __, ___, ____, cb) {\n    setImmediate(function () { return cb(new Error('async operations unsupported - update to Node 12+ (or Node 10-11 with the --experimental-worker CLI flag)'), null); });\n    var NOP = function () { };\n    return {\n        terminate: NOP,\n        postMessage: NOP\n    };\n};\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "/**\n * Ref https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\n */\nimport { UINT16_LE, UINT32_LE } from \"token-types\";\nexport const Signature = {\n    LocalFileHeader: 0x04034b50,\n    DataDescriptor: 0x08074b50,\n    CentralFileHeader: 0x02014b50,\n    EndOfCentralDirectory: 0x06054b50\n};\nexport const DataDescriptor = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            compressedSize: UINT32_LE.get(array, 8),\n            uncompressedSize: UINT32_LE.get(array, 12),\n        };\n    }, len: 16\n};\n/**\n * First part of the ZIP Local File Header\n * Offset | Bytes| Description\n * -------|------+-------------------------------------------------------------------\n *      0 |    4 | Signature (0x04034b50)\n *      4 |    2 | Minimum version needed to extract\n *      6 |    2 | Bit flag\n *      8 |    2 | Compression method\n *     10 |    2 | File last modification time (MS-DOS format)\n *     12 |    2 | File last modification date (MS-DOS format)\n *     14 |    4 | CRC-32 of uncompressed data\n *     18 |    4 | Compressed size\n *     22 |    4 | Uncompressed size\n *     26 |    2 | File name length (n)\n *     28 |    2 | Extra field length (m)\n *     30 |    n | File name\n * 30 + n |    m | Extra field\n */\nexport const LocalFileHeaderToken = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 4),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 8),\n            compressedSize: UINT32_LE.get(array, 18),\n            uncompressedSize: UINT32_LE.get(array, 22),\n            filenameLength: UINT16_LE.get(array, 26),\n            extraFieldLength: UINT16_LE.get(array, 28),\n            filename: null\n        };\n    }, len: 30\n};\n/**\n * 4.3.16  End of central directory record:\n *  end of central dir signature (0x06064b50)                                      4 bytes\n *  number of this disk                                                            2 bytes\n *  number of the disk with the start of the central directory                     2 bytes\n *  total number of entries in the central directory on this disk                  2 bytes\n *  total number of entries in the size of the central directory                   2 bytes\n *  sizeOfTheCentralDirectory                                                      4 bytes\n *  offset of start of central directory with respect to the starting disk number  4 bytes\n *  .ZIP file comment length                                                       2 bytes\n *  .ZIP file comment       (variable size)\n */\nexport const EndOfCentralDirectoryRecordToken = {\n    get(array) {\n        return {\n            signature: UINT32_LE.get(array, 0),\n            nrOfThisDisk: UINT16_LE.get(array, 4),\n            nrOfThisDiskWithTheStart: UINT16_LE.get(array, 6),\n            nrOfEntriesOnThisDisk: UINT16_LE.get(array, 8),\n            nrOfEntriesOfSize: UINT16_LE.get(array, 10),\n            sizeOfCd: UINT32_LE.get(array, 12),\n            offsetOfStartOfCd: UINT32_LE.get(array, 16),\n            zipFileCommentLength: UINT16_LE.get(array, 20),\n        };\n    }, len: 22\n};\n/**\n * File header:\n *    central file header signature   4 bytes   0 (0x02014b50)\n *    version made by                 2 bytes   4\n *    version needed to extract       2 bytes   6\n *    general purpose bit flag        2 bytes   8\n *    compression method              2 bytes  10\n *    last mod file time              2 bytes  12\n *    last mod file date              2 bytes  14\n *    crc-32                          4 bytes  16\n *    compressed size                 4 bytes  20\n *    uncompressed size               4 bytes  24\n *    file name length                2 bytes  28\n *    extra field length              2 bytes  30\n *    file comment length             2 bytes  32\n *    disk number start               2 bytes  34\n *    internal file attributes        2 bytes  36\n *    external file attributes        4 bytes  38\n *    relative offset of local header 4 bytes  42\n */\nexport const FileHeader = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 8);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 6),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 10),\n            compressedSize: UINT32_LE.get(array, 20),\n            uncompressedSize: UINT32_LE.get(array, 24),\n            filenameLength: UINT16_LE.get(array, 28),\n            extraFieldLength: UINT16_LE.get(array, 30),\n            fileCommentLength: UINT16_LE.get(array, 32),\n            relativeOffsetOfLocalHeader: UINT32_LE.get(array, 42),\n            filename: null\n        };\n    }, len: 46\n};\n", "import {StringType} from 'token-types';\n\nexport function stringToBytes(string) {\n\treturn [...string].map(character => character.charCodeAt(0)); // eslint-disable-line unicorn/prefer-code-point\n}\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Uint8Array} arrayBuffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexport function tarHeaderChecksumMatches(arrayBuffer, offset = 0) {\n\tconst readSum = Number.parseInt(new StringType(6).get(arrayBuffer, 148).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n\tif (Number.isNaN(readSum)) {\n\t\treturn false;\n\t}\n\n\tlet sum = 8 * 0x20; // Initialize signed bit sum\n\n\tfor (let index = offset; index < offset + 148; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\tfor (let index = offset + 156; index < offset + 512; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\treturn readSum === sum;\n}\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexport const uint32SyncSafeToken = {\n\tget: (buffer, offset) => (buffer[offset + 3] & 0x7F) | ((buffer[offset + 2]) << 7) | ((buffer[offset + 1]) << 14) | ((buffer[offset]) << 21),\n\tlen: 4,\n};\n", "export const extensions = [\n\t'jpg',\n\t'png',\n\t'apng',\n\t'gif',\n\t'webp',\n\t'flif',\n\t'xcf',\n\t'cr2',\n\t'cr3',\n\t'orf',\n\t'arw',\n\t'dng',\n\t'nef',\n\t'rw2',\n\t'raf',\n\t'tif',\n\t'bmp',\n\t'icns',\n\t'jxr',\n\t'psd',\n\t'indd',\n\t'zip',\n\t'tar',\n\t'rar',\n\t'gz',\n\t'bz2',\n\t'7z',\n\t'dmg',\n\t'mp4',\n\t'mid',\n\t'mkv',\n\t'webm',\n\t'mov',\n\t'avi',\n\t'mpg',\n\t'mp2',\n\t'mp3',\n\t'm4a',\n\t'oga',\n\t'ogg',\n\t'ogv',\n\t'opus',\n\t'flac',\n\t'wav',\n\t'spx',\n\t'amr',\n\t'pdf',\n\t'epub',\n\t'elf',\n\t'macho',\n\t'exe',\n\t'swf',\n\t'rtf',\n\t'wasm',\n\t'woff',\n\t'woff2',\n\t'eot',\n\t'ttf',\n\t'otf',\n\t'ttc',\n\t'ico',\n\t'flv',\n\t'ps',\n\t'xz',\n\t'sqlite',\n\t'nes',\n\t'crx',\n\t'xpi',\n\t'cab',\n\t'deb',\n\t'ar',\n\t'rpm',\n\t'Z',\n\t'lz',\n\t'cfb',\n\t'mxf',\n\t'mts',\n\t'blend',\n\t'bpg',\n\t'docx',\n\t'pptx',\n\t'xlsx',\n\t'3gp',\n\t'3g2',\n\t'j2c',\n\t'jp2',\n\t'jpm',\n\t'jpx',\n\t'mj2',\n\t'aif',\n\t'qcp',\n\t'odt',\n\t'ods',\n\t'odp',\n\t'xml',\n\t'mobi',\n\t'heic',\n\t'cur',\n\t'ktx',\n\t'ape',\n\t'wv',\n\t'dcm',\n\t'ics',\n\t'glb',\n\t'pcap',\n\t'dsf',\n\t'lnk',\n\t'alias',\n\t'voc',\n\t'ac3',\n\t'm4v',\n\t'm4p',\n\t'm4b',\n\t'f4v',\n\t'f4p',\n\t'f4b',\n\t'f4a',\n\t'mie',\n\t'asf',\n\t'ogm',\n\t'ogx',\n\t'mpc',\n\t'arrow',\n\t'shp',\n\t'aac',\n\t'mp1',\n\t'it',\n\t's3m',\n\t'xm',\n\t'skp',\n\t'avif',\n\t'eps',\n\t'lzh',\n\t'pgp',\n\t'asar',\n\t'stl',\n\t'chm',\n\t'3mf',\n\t'zst',\n\t'jxl',\n\t'vcf',\n\t'jls',\n\t'pst',\n\t'dwg',\n\t'parquet',\n\t'class',\n\t'arj',\n\t'cpio',\n\t'ace',\n\t'avro',\n\t'icc',\n\t'fbx',\n\t'vsdx',\n\t'vtt',\n\t'apk',\n\t'drc',\n\t'lz4',\n\t'potx',\n\t'xltx',\n\t'dotx',\n\t'xltm',\n\t'ott',\n\t'ots',\n\t'otp',\n\t'odg',\n\t'otg',\n\t'xlsm',\n\t'docm',\n\t'dotm',\n\t'potm',\n\t'pptm',\n\t'jar',\n\t'rm',\n\t'ppsm',\n\t'ppsx',\n];\n\nexport const mimeTypes = [\n\t'image/jpeg',\n\t'image/png',\n\t'image/gif',\n\t'image/webp',\n\t'image/flif',\n\t'image/x-xcf',\n\t'image/x-canon-cr2',\n\t'image/x-canon-cr3',\n\t'image/tiff',\n\t'image/bmp',\n\t'image/vnd.ms-photo',\n\t'image/vnd.adobe.photoshop',\n\t'application/x-indesign',\n\t'application/epub+zip',\n\t'application/x-xpinstall',\n\t'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text',\n\t'application/vnd.oasis.opendocument.spreadsheet',\n\t'application/vnd.oasis.opendocument.presentation',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n\t'application/zip',\n\t'application/x-tar',\n\t'application/x-rar-compressed',\n\t'application/gzip',\n\t'application/x-bzip2',\n\t'application/x-7z-compressed',\n\t'application/x-apple-diskimage',\n\t'application/vnd.apache.arrow.file',\n\t'video/mp4',\n\t'audio/midi',\n\t'video/matroska',\n\t'video/webm',\n\t'video/quicktime',\n\t'video/vnd.avi',\n\t'audio/wav',\n\t'audio/qcelp',\n\t'audio/x-ms-asf',\n\t'video/x-ms-asf',\n\t'application/vnd.ms-asf',\n\t'video/mpeg',\n\t'video/3gpp',\n\t'audio/mpeg',\n\t'audio/mp4', // RFC 4337\n\t'video/ogg',\n\t'audio/ogg',\n\t'audio/ogg; codecs=opus',\n\t'application/ogg',\n\t'audio/flac',\n\t'audio/ape',\n\t'audio/wavpack',\n\t'audio/amr',\n\t'application/pdf',\n\t'application/x-elf',\n\t'application/x-mach-binary',\n\t'application/x-msdownload',\n\t'application/x-shockwave-flash',\n\t'application/rtf',\n\t'application/wasm',\n\t'font/woff',\n\t'font/woff2',\n\t'application/vnd.ms-fontobject',\n\t'font/ttf',\n\t'font/otf',\n\t'font/collection',\n\t'image/x-icon',\n\t'video/x-flv',\n\t'application/postscript',\n\t'application/eps',\n\t'application/x-xz',\n\t'application/x-sqlite3',\n\t'application/x-nintendo-nes-rom',\n\t'application/x-google-chrome-extension',\n\t'application/vnd.ms-cab-compressed',\n\t'application/x-deb',\n\t'application/x-unix-archive',\n\t'application/x-rpm',\n\t'application/x-compress',\n\t'application/x-lzip',\n\t'application/x-cfb',\n\t'application/x-mie',\n\t'application/mxf',\n\t'video/mp2t',\n\t'application/x-blender',\n\t'image/bpg',\n\t'image/j2c',\n\t'image/jp2',\n\t'image/jpx',\n\t'image/jpm',\n\t'image/mj2',\n\t'audio/aiff',\n\t'application/xml',\n\t'application/x-mobipocket-ebook',\n\t'image/heif',\n\t'image/heif-sequence',\n\t'image/heic',\n\t'image/heic-sequence',\n\t'image/icns',\n\t'image/ktx',\n\t'application/dicom',\n\t'audio/x-musepack',\n\t'text/calendar',\n\t'text/vcard',\n\t'text/vtt',\n\t'model/gltf-binary',\n\t'application/vnd.tcpdump.pcap',\n\t'audio/x-dsf', // Non-standard\n\t'application/x.ms.shortcut', // Invented by us\n\t'application/x.apple.alias', // Invented by us\n\t'audio/x-voc',\n\t'audio/vnd.dolby.dd-raw',\n\t'audio/x-m4a',\n\t'image/apng',\n\t'image/x-olympus-orf',\n\t'image/x-sony-arw',\n\t'image/x-adobe-dng',\n\t'image/x-nikon-nef',\n\t'image/x-panasonic-rw2',\n\t'image/x-fujifilm-raf',\n\t'video/x-m4v',\n\t'video/3gpp2',\n\t'application/x-esri-shape',\n\t'audio/aac',\n\t'audio/x-it',\n\t'audio/x-s3m',\n\t'audio/x-xm',\n\t'video/MP1S',\n\t'video/MP2P',\n\t'application/vnd.sketchup.skp',\n\t'image/avif',\n\t'application/x-lzh-compressed',\n\t'application/pgp-encrypted',\n\t'application/x-asar',\n\t'model/stl',\n\t'application/vnd.ms-htmlhelp',\n\t'model/3mf',\n\t'image/jxl',\n\t'application/zstd',\n\t'image/jls',\n\t'application/vnd.ms-outlook',\n\t'image/vnd.dwg',\n\t'application/vnd.apache.parquet',\n\t'application/java-vm',\n\t'application/x-arj',\n\t'application/x-cpio',\n\t'application/x-ace-compressed',\n\t'application/avro',\n\t'application/vnd.iccprofile',\n\t'application/x.autodesk.fbx', // Invented by us\n\t'application/vnd.visio',\n\t'application/vnd.android.package-archive',\n\t'application/vnd.google.draco', // Invented by us\n\t'application/x-lz4', // Invented by us\n\t'application/vnd.openxmlformats-officedocument.presentationml.template',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n\t'application/vnd.ms-excel.template.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text-template',\n\t'application/vnd.oasis.opendocument.spreadsheet-template',\n\t'application/vnd.oasis.opendocument.presentation-template',\n\t'application/vnd.oasis.opendocument.graphics',\n\t'application/vnd.oasis.opendocument.graphics-template',\n\t'application/vnd.ms-excel.sheet.macroenabled.12',\n\t'application/vnd.ms-word.document.macroenabled.12',\n\t'application/vnd.ms-word.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t'application/java-archive',\n\t'application/vnd.rn-realmedia',\n];\n", "import { fileTypeFromBuffer } from 'file-type';\nimport ContentType from 'content-type';\nimport { parse as mimeTypeParse } from 'media-typer';\nimport initDebug from 'debug';\nimport { MetadataCollector } from './common/MetadataCollector.js';\nimport { TrackType } from './type.js';\nimport { mpegParserLoader } from './mpeg/MpegLoader.js';\nimport { CouldNotDetermineFileTypeError, UnsupportedFileTypeError } from './ParseError.js';\nimport { apeParserLoader } from './apev2/Apev2Loader.js';\nimport { asfParserLoader } from './asf/AsfLoader.js';\nimport { dsdiffParserLoader } from './dsdiff/DsdiffLoader.js';\nimport { aiffParserLoader } from './aiff/AiffLoader.js';\nimport { dsfParserLoader } from './dsf/DsfLoader.js';\nimport { flacParserLoader } from './flac/FlacLoader.js';\nimport { matroskaParserLoader } from './matroska/MatroskaLoader.js';\nimport { mp4ParserLoader } from './mp4/Mp4Loader.js';\nimport { musepackParserLoader } from './musepack/MusepackLoader.js';\nimport { oggParserLoader } from './ogg/OggLoader.js';\nimport { wavpackParserLoader } from './wavpack/WavPackLoader.js';\nimport { riffParserLoader } from './wav/WaveLoader.js';\nimport { scanAppendingHeaders } from './core.js';\nconst debug = initDebug('music-metadata:parser:factory');\nexport function parseHttpContentType(contentType) {\n    const type = ContentType.parse(contentType);\n    const mime = mimeTypeParse(type.type);\n    return {\n        type: mime.type,\n        subtype: mime.subtype,\n        suffix: mime.suffix,\n        parameters: type.parameters\n    };\n}\nexport class ParserFactory {\n    constructor() {\n        this.parsers = [];\n        [\n            flacParserLoader,\n            mpegParserLoader,\n            apeParserLoader,\n            mp4ParserLoader,\n            matroskaParserLoader,\n            riffParserLoader,\n            oggParserLoader,\n            asfParserLoader,\n            aiffParserLoader,\n            wavpackParserLoader,\n            musepackParserLoader,\n            dsfParserLoader,\n            dsdiffParserLoader\n        ].forEach(parser => { this.registerParser(parser); });\n    }\n    registerParser(parser) {\n        this.parsers.push(parser);\n    }\n    async parse(tokenizer, parserLoader, opts) {\n        if (tokenizer.supportsRandomAccess()) {\n            debug('tokenizer supports random-access, scanning for appending headers');\n            await scanAppendingHeaders(tokenizer, opts);\n        }\n        else {\n            debug('tokenizer does not support random-access, cannot scan for appending headers');\n        }\n        if (!parserLoader) {\n            const buf = new Uint8Array(4100);\n            if (tokenizer.fileInfo.mimeType) {\n                parserLoader = this.findLoaderForContentType(tokenizer.fileInfo.mimeType);\n            }\n            if (!parserLoader && tokenizer.fileInfo.path) {\n                parserLoader = this.findLoaderForExtension(tokenizer.fileInfo.path);\n            }\n            if (!parserLoader) {\n                // Parser could not be determined on MIME-type or extension\n                debug('Guess parser on content...');\n                await tokenizer.peekBuffer(buf, { mayBeLess: true });\n                const guessedType = await fileTypeFromBuffer(buf, { mpegOffsetTolerance: 10 });\n                if (!guessedType || !guessedType.mime) {\n                    throw new CouldNotDetermineFileTypeError('Failed to determine audio format');\n                }\n                debug(`Guessed file type is mime=${guessedType.mime}, extension=${guessedType.ext}`);\n                parserLoader = this.findLoaderForContentType(guessedType.mime);\n                if (!parserLoader) {\n                    throw new UnsupportedFileTypeError(`Guessed MIME-type not supported: ${guessedType.mime}`);\n                }\n            }\n        }\n        // Parser found, execute parser\n        debug(`Loading ${parserLoader.parserType} parser...`);\n        const metadata = new MetadataCollector(opts);\n        const ParserImpl = await parserLoader.load();\n        const parser = new ParserImpl(metadata, tokenizer, opts ?? {});\n        debug(`Parser ${parserLoader.parserType} loaded`);\n        await parser.parse();\n        if (metadata.format.trackInfo) {\n            if (metadata.format.hasAudio === undefined) {\n                metadata.setFormat('hasAudio', !!metadata.format.trackInfo.find(track => track.type === TrackType.audio));\n            }\n            if (metadata.format.hasVideo === undefined) {\n                metadata.setFormat('hasVideo', !!metadata.format.trackInfo.find(track => track.type === TrackType.video));\n            }\n        }\n        return metadata.toCommonMetadata();\n    }\n    /**\n     * @param filePath - Path, filename or extension to audio file\n     * @return Parser submodule name\n     */\n    findLoaderForExtension(filePath) {\n        if (!filePath)\n            return;\n        const extension = getExtension(filePath).toLocaleLowerCase() || filePath;\n        return this.parsers.find(parser => parser.extensions.indexOf(extension) !== -1);\n    }\n    findLoaderForContentType(httpContentType) {\n        let mime;\n        if (!httpContentType)\n            return;\n        try {\n            mime = parseHttpContentType(httpContentType);\n        }\n        catch (_err) {\n            debug(`Invalid HTTP Content-Type header value: ${httpContentType}`);\n            return;\n        }\n        const subType = mime.subtype.indexOf('x-') === 0 ? mime.subtype.substring(2) : mime.subtype;\n        return this.parsers.find(parser => parser.mimeTypes.find(loader => loader.indexOf(`${mime.type}/${subType}`) !== -1));\n    }\n    getSupportedMimeTypes() {\n        const mimeTypeSet = new Set();\n        this.parsers.forEach(loader => {\n            loader.mimeTypes.forEach(mimeType => {\n                mimeTypeSet.add(mimeType);\n                mimeTypeSet.add(mimeType.replace('/', '/x-'));\n            });\n        });\n        return Array.from(mimeTypeSet);\n    }\n}\nfunction getExtension(fname) {\n    const i = fname.lastIndexOf('.');\n    return i === -1 ? '' : fname.substring(i);\n}\n", "import { TrackTypeValueToKeyMap, } from '../type.js';\nimport initDebug from 'debug';\nimport { isSingleton, isUnique } from './GenericTagTypes.js';\nimport { CombinedTagMapper } from './CombinedTagMapper.js';\nimport { CommonTagMapper } from './GenericTagMapper.js';\nimport { toRatio } from './Util.js';\nimport { fileTypeFromBuffer } from 'file-type';\nimport { parseLrc } from '../lrc/LyricsParser.js';\nconst debug = initDebug('music-metadata:collector');\nconst TagPriority = ['matroska', 'APEv2', 'vorbis', 'ID3v2.4', 'ID3v2.3', 'ID3v2.2', 'exif', 'asf', 'iTunes', 'AIFF', 'ID3v1'];\n/**\n * Provided to the parser to uodate the metadata result.\n * Responsible for triggering async updates\n */\nexport class MetadataCollector {\n    constructor(opts) {\n        this.format = {\n            tagTypes: [],\n            trackInfo: []\n        };\n        this.native = {};\n        this.common = {\n            track: { no: null, of: null },\n            disk: { no: null, of: null },\n            movementIndex: { no: null, of: null }\n        };\n        this.quality = {\n            warnings: []\n        };\n        /**\n         * Keeps track of origin priority for each mapped id\n         */\n        this.commonOrigin = {};\n        /**\n         * Maps a tag type to a priority\n         */\n        this.originPriority = {};\n        this.tagMapper = new CombinedTagMapper();\n        this.opts = opts;\n        let priority = 1;\n        for (const tagType of TagPriority) {\n            this.originPriority[tagType] = priority++;\n        }\n        this.originPriority.artificial = 500; // Filled using alternative tags\n        this.originPriority.id3v1 = 600; // Consider as the worst because of the field length limit\n    }\n    /**\n     * @returns {boolean} true if one or more tags have been found\n     */\n    hasAny() {\n        return Object.keys(this.native).length > 0;\n    }\n    addStreamInfo(streamInfo) {\n        debug(`streamInfo: type=${streamInfo.type ? TrackTypeValueToKeyMap[streamInfo.type] : '?'}, codec=${streamInfo.codecName}`);\n        this.format.trackInfo.push(streamInfo);\n    }\n    setFormat(key, value) {\n        debug(`format: ${key} = ${value}`);\n        this.format[key] = value; // as any to override readonly\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'format', id: key, value } });\n        }\n    }\n    setAudioOnly() {\n        this.setFormat('hasAudio', true);\n        this.setFormat('hasVideo', false);\n    }\n    async addTag(tagType, tagId, value) {\n        debug(`tag ${tagType}.${tagId} = ${value}`);\n        if (!this.native[tagType]) {\n            this.format.tagTypes.push(tagType);\n            this.native[tagType] = [];\n        }\n        this.native[tagType].push({ id: tagId, value });\n        await this.toCommon(tagType, tagId, value);\n    }\n    addWarning(warning) {\n        this.quality.warnings.push({ message: warning });\n    }\n    async postMap(tagType, tag) {\n        // Common tag (alias) found\n        // check if we need to do something special with common tag\n        // if the event has been aliased then we need to clean it before\n        // it is emitted to the user. e.g. genre (20) -> Electronic\n        switch (tag.id) {\n            case 'artist':\n                if (this.commonOrigin.artist === this.originPriority[tagType]) {\n                    // Assume the artist field is used as artists\n                    return this.postMap('artificial', { id: 'artists', value: tag.value });\n                }\n                if (!this.common.artists) {\n                    // Fill artists using artist source\n                    this.setGenericTag('artificial', { id: 'artists', value: tag.value });\n                }\n                break;\n            case 'artists':\n                if (!this.common.artist || this.commonOrigin.artist === this.originPriority.artificial) {\n                    if (!this.common.artists || this.common.artists.indexOf(tag.value) === -1) {\n                        // Fill artist using artists source\n                        const artists = (this.common.artists || []).concat([tag.value]);\n                        const value = joinArtists(artists);\n                        const artistTag = { id: 'artist', value };\n                        this.setGenericTag('artificial', artistTag);\n                    }\n                }\n                break;\n            case 'picture':\n                return this.postFixPicture(tag.value).then(picture => {\n                    if (picture !== null) {\n                        tag.value = picture;\n                        this.setGenericTag(tagType, tag);\n                    }\n                });\n            case 'totaltracks':\n                this.common.track.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'totaldiscs':\n                this.common.disk.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'movementTotal':\n                this.common.movementIndex.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'track':\n            case 'disk':\n            case 'movementIndex': {\n                const of = this.common[tag.id].of; // store of value, maybe maybe overwritten\n                this.common[tag.id] = CommonTagMapper.normalizeTrack(tag.value);\n                this.common[tag.id].of = of != null ? of : this.common[tag.id].of;\n                return;\n            }\n            case 'bpm':\n            case 'year':\n            case 'originalyear':\n                tag.value = Number.parseInt(tag.value, 10);\n                break;\n            case 'date': {\n                // ToDo: be more strict on 'YYYY...'\n                const year = Number.parseInt(tag.value.substr(0, 4), 10);\n                if (!Number.isNaN(year)) {\n                    this.common.year = year;\n                }\n                break;\n            }\n            case 'discogs_label_id':\n            case 'discogs_release_id':\n            case 'discogs_master_release_id':\n            case 'discogs_artist_id':\n            case 'discogs_votes':\n                tag.value = typeof tag.value === 'string' ? Number.parseInt(tag.value, 10) : tag.value;\n                break;\n            case 'replaygain_track_gain':\n            case 'replaygain_track_peak':\n            case 'replaygain_album_gain':\n            case 'replaygain_album_peak':\n                tag.value = toRatio(tag.value);\n                break;\n            case 'replaygain_track_minmax':\n                tag.value = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                break;\n            case 'replaygain_undo': {\n                const minMix = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                tag.value = {\n                    leftChannel: minMix[0],\n                    rightChannel: minMix[1]\n                };\n                break;\n            }\n            case 'gapless': // iTunes gap-less flag\n            case 'compilation':\n            case 'podcast':\n            case 'showMovement':\n                tag.value = tag.value === '1' || tag.value === 1; // boolean\n                break;\n            case 'isrc': { // Only keep unique values\n                const commonTag = this.common[tag.id];\n                if (commonTag && commonTag.indexOf(tag.value) !== -1)\n                    return;\n                break;\n            }\n            case 'comment':\n                if (typeof tag.value === 'string') {\n                    tag.value = { text: tag.value };\n                }\n                if (tag.value.descriptor === 'iTunPGAP') {\n                    this.setGenericTag(tagType, { id: 'gapless', value: tag.value.text === '1' });\n                }\n                break;\n            case 'lyrics':\n                if (typeof tag.value === 'string') {\n                    tag.value = parseLrc(tag.value);\n                }\n                break;\n            default:\n            // nothing to do\n        }\n        if (tag.value !== null) {\n            this.setGenericTag(tagType, tag);\n        }\n    }\n    /**\n     * Convert native tags to common tags\n     * @returns {IAudioMetadata} Native + common tags\n     */\n    toCommonMetadata() {\n        return {\n            format: this.format,\n            native: this.native,\n            quality: this.quality,\n            common: this.common\n        };\n    }\n    /**\n     * Fix some common issues with picture object\n     * @param picture Picture\n     */\n    async postFixPicture(picture) {\n        if (picture.data && picture.data.length > 0) {\n            if (!picture.format) {\n                const fileType = await fileTypeFromBuffer(Uint8Array.from(picture.data)); // ToDO: remove Buffer\n                if (fileType) {\n                    picture.format = fileType.mime;\n                }\n                else {\n                    return null;\n                }\n            }\n            picture.format = picture.format.toLocaleLowerCase();\n            switch (picture.format) {\n                case 'image/jpg':\n                    picture.format = 'image/jpeg'; // ToDo: register warning\n            }\n            return picture;\n        }\n        this.addWarning(\"Empty picture tag found\");\n        return null;\n    }\n    /**\n     * Convert native tag to common tags\n     */\n    async toCommon(tagType, tagId, value) {\n        const tag = { id: tagId, value };\n        const genericTag = this.tagMapper.mapTag(tagType, tag, this);\n        if (genericTag) {\n            await this.postMap(tagType, genericTag);\n        }\n    }\n    /**\n     * Set generic tag\n     */\n    setGenericTag(tagType, tag) {\n        debug(`common.${tag.id} = ${tag.value}`);\n        const prio0 = this.commonOrigin[tag.id] || 1000;\n        const prio1 = this.originPriority[tagType];\n        if (isSingleton(tag.id)) {\n            if (prio1 <= prio0) {\n                this.common[tag.id] = tag.value;\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (singleton): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        else {\n            if (prio1 === prio0) {\n                if (!isUnique(tag.id) || this.common[tag.id].indexOf(tag.value) === -1) {\n                    this.common[tag.id].push(tag.value);\n                }\n                else {\n                    debug(`Ignore duplicate value: ${tagType}.${tag.id} = ${tag.value}`);\n                }\n                // no effect? this.commonOrigin[tag.id] = prio1;\n            }\n            else if (prio1 < prio0) {\n                this.common[tag.id] = [tag.value];\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (list): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'common', id: tag.id, value: tag.value } });\n        }\n        // ToDo: trigger metadata event\n    }\n}\nexport function joinArtists(artists) {\n    if (artists.length > 2) {\n        return `${artists.slice(0, artists.length - 1).join(', ')} & ${artists[artists.length - 1]}`;\n    }\n    return artists.join(' & ');\n}\n", "const defaultTagInfo = {\n    multiple: false,\n};\nconst commonTags = {\n    year: defaultTagInfo,\n    track: defaultTagInfo,\n    disk: defaultTagInfo,\n    title: defaultTagInfo,\n    artist: defaultTagInfo,\n    artists: { multiple: true, unique: true },\n    albumartist: defaultTagInfo,\n    album: defaultTagInfo,\n    date: defaultTagInfo,\n    originaldate: defaultTagInfo,\n    originalyear: defaultTagInfo,\n    releasedate: defaultTagInfo,\n    comment: { multiple: true, unique: false },\n    genre: { multiple: true, unique: true },\n    picture: { multiple: true, unique: true },\n    composer: { multiple: true, unique: true },\n    lyrics: { multiple: true, unique: false },\n    albumsort: { multiple: false, unique: true },\n    titlesort: { multiple: false, unique: true },\n    work: { multiple: false, unique: true },\n    artistsort: { multiple: false, unique: true },\n    albumartistsort: { multiple: false, unique: true },\n    composersort: { multiple: false, unique: true },\n    lyricist: { multiple: true, unique: true },\n    writer: { multiple: true, unique: true },\n    conductor: { multiple: true, unique: true },\n    remixer: { multiple: true, unique: true },\n    arranger: { multiple: true, unique: true },\n    engineer: { multiple: true, unique: true },\n    producer: { multiple: true, unique: true },\n    technician: { multiple: true, unique: true },\n    djmixer: { multiple: true, unique: true },\n    mixer: { multiple: true, unique: true },\n    label: { multiple: true, unique: true },\n    grouping: defaultTagInfo,\n    subtitle: { multiple: true },\n    discsubtitle: defaultTagInfo,\n    totaltracks: defaultTagInfo,\n    totaldiscs: defaultTagInfo,\n    compilation: defaultTagInfo,\n    rating: { multiple: true },\n    bpm: defaultTagInfo,\n    mood: defaultTagInfo,\n    media: defaultTagInfo,\n    catalognumber: { multiple: true, unique: true },\n    tvShow: defaultTagInfo,\n    tvShowSort: defaultTagInfo,\n    tvSeason: defaultTagInfo,\n    tvEpisode: defaultTagInfo,\n    tvEpisodeId: defaultTagInfo,\n    tvNetwork: defaultTagInfo,\n    podcast: defaultTagInfo,\n    podcasturl: defaultTagInfo,\n    releasestatus: defaultTagInfo,\n    releasetype: { multiple: true },\n    releasecountry: defaultTagInfo,\n    script: defaultTagInfo,\n    language: defaultTagInfo,\n    copyright: defaultTagInfo,\n    license: defaultTagInfo,\n    encodedby: defaultTagInfo,\n    encodersettings: defaultTagInfo,\n    gapless: defaultTagInfo,\n    barcode: defaultTagInfo,\n    isrc: { multiple: true },\n    asin: defaultTagInfo,\n    musicbrainz_recordingid: defaultTagInfo,\n    musicbrainz_trackid: defaultTagInfo,\n    musicbrainz_albumid: defaultTagInfo,\n    musicbrainz_artistid: { multiple: true },\n    musicbrainz_albumartistid: { multiple: true },\n    musicbrainz_releasegroupid: defaultTagInfo,\n    musicbrainz_workid: defaultTagInfo,\n    musicbrainz_trmid: defaultTagInfo,\n    musicbrainz_discid: defaultTagInfo,\n    acoustid_id: defaultTagInfo,\n    acoustid_fingerprint: defaultTagInfo,\n    musicip_puid: defaultTagInfo,\n    musicip_fingerprint: defaultTagInfo,\n    website: defaultTagInfo,\n    'performer:instrument': { multiple: true, unique: true },\n    averageLevel: defaultTagInfo,\n    peakLevel: defaultTagInfo,\n    notes: { multiple: true, unique: false },\n    key: defaultTagInfo,\n    originalalbum: defaultTagInfo,\n    originalartist: defaultTagInfo,\n    discogs_artist_id: { multiple: true, unique: true },\n    discogs_release_id: defaultTagInfo,\n    discogs_label_id: defaultTagInfo,\n    discogs_master_release_id: defaultTagInfo,\n    discogs_votes: defaultTagInfo,\n    discogs_rating: defaultTagInfo,\n    replaygain_track_peak: defaultTagInfo,\n    replaygain_track_gain: defaultTagInfo,\n    replaygain_album_peak: defaultTagInfo,\n    replaygain_album_gain: defaultTagInfo,\n    replaygain_track_minmax: defaultTagInfo,\n    replaygain_album_minmax: defaultTagInfo,\n    replaygain_undo: defaultTagInfo,\n    description: { multiple: true },\n    longDescription: defaultTagInfo,\n    category: { multiple: true },\n    hdVideo: defaultTagInfo,\n    keywords: { multiple: true },\n    movement: defaultTagInfo,\n    movementIndex: defaultTagInfo,\n    movementTotal: defaultTagInfo,\n    podcastId: defaultTagInfo,\n    showMovement: defaultTagInfo,\n    stik: defaultTagInfo,\n    playCounter: defaultTagInfo\n};\nexport const commonTagsKeys = /* @__PURE__ */ Object.keys(commonTags);\n/**\n * @param alias Name of common tag\n * @returns {boolean|*} true if given alias is mapped as a singleton', otherwise false\n */\nexport function isSingleton(alias) {\n    return commonTags[alias] && !commonTags[alias].multiple;\n}\n/**\n * @param alias Common (generic) tag\n * @returns {boolean|*} true if given alias is a singleton or explicitly marked as unique\n */\nexport function isUnique(alias) {\n    return !commonTags[alias].multiple || commonTags[alias].unique || false;\n}\n", "export class CommonTagMapper {\n    static toIntOrNull(str) {\n        const cleaned = Number.parseInt(str, 10);\n        return Number.isNaN(cleaned) ? null : cleaned;\n    }\n    // TODO: a string of 1of1 would fail to be converted\n    // converts 1/10 to no : 1, of : 10\n    // or 1 to no : 1, of : 0\n    static normalizeTrack(origVal) {\n        const split = origVal.toString().split('/');\n        return {\n            no: Number.parseInt(split[0], 10) || null,\n            of: Number.parseInt(split[1], 10) || null\n        };\n    }\n    constructor(tagTypes, tagMap) {\n        this.tagTypes = tagTypes;\n        this.tagMap = tagMap;\n    }\n    /**\n     * Process and set common tags\n     * write common tags to\n     * @param tag Native tag\n     * @param warnings Register warnings\n     * @return common name\n     */\n    mapGenericTag(tag, warnings) {\n        tag = { id: tag.id, value: tag.value }; // clone object\n        this.postMap(tag, warnings);\n        // Convert native tag event to generic 'alias' tag\n        const id = this.getCommonName(tag.id);\n        return id ? { id, value: tag.value } : null;\n    }\n    /**\n     * Convert native tag key to common tag key\n     * @param tag Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag];\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag Tag e.g. {\"\u00A9alb\", \"Buena Vista Social Club\")\n     * @param warnings Used to register warnings\n     */\n    postMap(_tag, _warnings) {\n        return;\n    }\n}\nCommonTagMapper.maxRatingScore = 1;\n", "import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ID3v1 tag mappings\n */\nconst id3v1TagMap = {\n    title: 'title',\n    artist: 'artist',\n    album: 'album',\n    year: 'year',\n    comment: 'comment',\n    track: 'track',\n    genre: 'genre'\n};\nexport class ID3v1TagMapper extends CommonTagMapper {\n    constructor() {\n        super(['ID3v1'], id3v1TagMap);\n    }\n}\n", "import { UINT32_LE } from 'token-types';\nimport { CommonTagMapper } from '../common/GenericTagMapper.js';\nimport { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\nimport { decodeString } from '../common/Util.js';\n/**\n * ID3v2.3/ID3v2.4 tag mappings\n */\nconst id3v24TagMap = {\n    // id3v2.3\n    TIT2: 'title',\n    TPE1: 'artist',\n    'TXXX:Artists': 'artists',\n    TPE2: 'albumartist',\n    TALB: 'album',\n    TDRV: 'date', // [ 'date', 'year' ] ToDo: improve 'year' mapping\n    /**\n     * Original release year\n     */\n    TORY: 'originalyear',\n    TPOS: 'disk',\n    TCON: 'genre',\n    APIC: 'picture',\n    TCOM: 'composer',\n    USLT: 'lyrics',\n    TSOA: 'albumsort',\n    TSOT: 'titlesort',\n    TOAL: 'originalalbum',\n    TSOP: 'artistsort',\n    TSO2: 'albumartistsort',\n    TSOC: 'composersort',\n    TEXT: 'lyricist',\n    'TXXX:Writer': 'writer',\n    TPE3: 'conductor',\n    // 'IPLS:instrument': 'performer:instrument', // ToDo\n    TPE4: 'remixer',\n    'IPLS:arranger': 'arranger',\n    'IPLS:engineer': 'engineer',\n    'IPLS:producer': 'producer',\n    'IPLS:DJ-mix': 'djmixer',\n    'IPLS:mix': 'mixer',\n    TPUB: 'label',\n    TIT1: 'grouping',\n    TIT3: 'subtitle',\n    TRCK: 'track',\n    TCMP: 'compilation',\n    POPM: 'rating',\n    TBPM: 'bpm',\n    TMED: 'media',\n    'TXXX:CATALOGNUMBER': 'catalognumber',\n    'TXXX:MusicBrainz Album Status': 'releasestatus',\n    'TXXX:MusicBrainz Album Type': 'releasetype',\n    /**\n     * Release country as documented: https://picard.musicbrainz.org/docs/mappings/#cite_note-0\n     */\n    'TXXX:MusicBrainz Album Release Country': 'releasecountry',\n    /**\n     * Release country as implemented // ToDo: report\n     */\n    'TXXX:RELEASECOUNTRY': 'releasecountry',\n    'TXXX:SCRIPT': 'script',\n    TLAN: 'language',\n    TCOP: 'copyright',\n    WCOP: 'license',\n    TENC: 'encodedby',\n    TSSE: 'encodersettings',\n    'TXXX:BARCODE': 'barcode',\n    'TXXX:ISRC': 'isrc',\n    TSRC: 'isrc',\n    'TXXX:ASIN': 'asin',\n    'TXXX:originalyear': 'originalyear',\n    'UFID:http://musicbrainz.org': 'musicbrainz_recordingid',\n    'TXXX:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    'TXXX:MusicBrainz Album Id': 'musicbrainz_albumid',\n    'TXXX:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    'TXXX:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    'TXXX:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    'TXXX:MusicBrainz Work Id': 'musicbrainz_workid',\n    'TXXX:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    'TXXX:MusicBrainz Disc Id': 'musicbrainz_discid',\n    'TXXX:ACOUSTID_ID': 'acoustid_id',\n    'TXXX:Acoustid Id': 'acoustid_id',\n    'TXXX:Acoustid Fingerprint': 'acoustid_fingerprint',\n    'TXXX:MusicIP PUID': 'musicip_puid',\n    'TXXX:MusicMagic Fingerprint': 'musicip_fingerprint',\n    WOAR: 'website',\n    // id3v2.4\n    // ToDo: In same sequence as defined at http://id3.org/id3v2.4.0-frames\n    TDRC: 'date', // date YYYY-MM-DD\n    TYER: 'year',\n    TDOR: 'originaldate',\n    // 'TMCL:instrument': 'performer:instrument',\n    'TIPL:arranger': 'arranger',\n    'TIPL:engineer': 'engineer',\n    'TIPL:producer': 'producer',\n    'TIPL:DJ-mix': 'djmixer',\n    'TIPL:mix': 'mixer',\n    TMOO: 'mood',\n    // additional mappings:\n    SYLT: 'lyrics',\n    TSST: 'discsubtitle',\n    TKEY: 'key',\n    COMM: 'comment',\n    TOPE: 'originalartist',\n    // Windows Media Player\n    'PRIV:AverageLevel': 'averageLevel',\n    'PRIV:PeakLevel': 'peakLevel',\n    // Discogs\n    'TXXX:DISCOGS_ARTIST_ID': 'discogs_artist_id',\n    'TXXX:DISCOGS_ARTISTS': 'artists',\n    'TXXX:DISCOGS_ARTIST_NAME': 'artists',\n    'TXXX:DISCOGS_ALBUM_ARTISTS': 'albumartist',\n    'TXXX:DISCOGS_CATALOG': 'catalognumber',\n    'TXXX:DISCOGS_COUNTRY': 'releasecountry',\n    'TXXX:DISCOGS_DATE': 'originaldate',\n    'TXXX:DISCOGS_LABEL': 'label',\n    'TXXX:DISCOGS_LABEL_ID': 'discogs_label_id',\n    'TXXX:DISCOGS_MASTER_RELEASE_ID': 'discogs_master_release_id',\n    'TXXX:DISCOGS_RATING': 'discogs_rating',\n    'TXXX:DISCOGS_RELEASED': 'date',\n    'TXXX:DISCOGS_RELEASE_ID': 'discogs_release_id',\n    'TXXX:DISCOGS_VOTES': 'discogs_votes',\n    'TXXX:CATALOGID': 'catalognumber',\n    'TXXX:STYLE': 'genre',\n    'TXXX:REPLAYGAIN_TRACK_PEAK': 'replaygain_track_peak',\n    'TXXX:REPLAYGAIN_TRACK_GAIN': 'replaygain_track_gain',\n    'TXXX:REPLAYGAIN_ALBUM_PEAK': 'replaygain_album_peak',\n    'TXXX:REPLAYGAIN_ALBUM_GAIN': 'replaygain_album_gain',\n    'TXXX:MP3GAIN_MINMAX': 'replaygain_track_minmax',\n    'TXXX:MP3GAIN_ALBUM_MINMAX': 'replaygain_album_minmax',\n    'TXXX:MP3GAIN_UNDO': 'replaygain_undo',\n    MVNM: 'movement',\n    MVIN: 'movementIndex',\n    PCST: 'podcast',\n    TCAT: 'category',\n    TDES: 'description',\n    TDRL: 'releasedate',\n    TGID: 'podcastId',\n    TKWD: 'keywords',\n    WFED: 'podcasturl',\n    GRP1: 'grouping',\n    PCNT: 'playCounter',\n};\nexport class ID3v24TagMapper extends CaseInsensitiveTagMap {\n    static toRating(popm) {\n        return {\n            source: popm.email,\n            rating: popm.rating > 0 ? (popm.rating - 1) / 254 * CommonTagMapper.maxRatingScore : undefined\n        };\n    }\n    constructor() {\n        super(['ID3v2.3', 'ID3v2.4'], id3v24TagMap);\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag to post map\n     * @param warnings Wil be used to register (collect) warnings\n     */\n    postMap(tag, warnings) {\n        switch (tag.id) {\n            case 'UFID':\n                {\n                    // decode MusicBrainz Recording Id\n                    const idTag = tag.value;\n                    if (idTag.owner_identifier === 'http://musicbrainz.org') {\n                        tag.id += `:${idTag.owner_identifier}`;\n                        tag.value = decodeString(idTag.identifier, 'latin1'); // latin1 == iso-8859-1\n                    }\n                }\n                break;\n            case 'PRIV':\n                {\n                    const customTag = tag.value;\n                    switch (customTag.owner_identifier) {\n                        // decode Windows Media Player\n                        case 'AverageLevel':\n                        case 'PeakValue':\n                            tag.id += `:${customTag.owner_identifier}`;\n                            tag.value = customTag.data.length === 4 ? UINT32_LE.get(customTag.data, 0) : null;\n                            if (tag.value === null) {\n                                warnings.addWarning('Failed to parse PRIV:PeakValue');\n                            }\n                            break;\n                        default:\n                            warnings.addWarning(`Unknown PRIV owner-identifier: ${customTag.data}`);\n                    }\n                }\n                break;\n            case 'POPM':\n                tag.value = ID3v24TagMapper.toRating(tag.value);\n                break;\n            default:\n                break;\n        }\n    }\n}\n", "import { CommonTagMapper } from './GenericTagMapper.js';\nexport class CaseInsensitiveTagMap extends CommonTagMapper {\n    constructor(tagTypes, tagMap) {\n        const upperCaseMap = {};\n        for (const tag of Object.keys(tagMap)) {\n            upperCaseMap[tag.toUpperCase()] = tagMap[tag];\n        }\n        super(tagTypes, upperCaseMap);\n    }\n    /**\n     * @tag  Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag.toUpperCase()];\n    }\n}\n", "import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ASF Metadata tag mappings.\n * See http://msdn.microsoft.com/en-us/library/ms867702.aspx\n */\nconst asfTagMap = {\n    Title: 'title',\n    Author: 'artist',\n    'WM/AlbumArtist': 'albumartist',\n    'WM/AlbumTitle': 'album',\n    'WM/Year': 'date', // changed to 'year' to 'date' based on Picard mappings; ToDo: check me\n    'WM/OriginalReleaseTime': 'originaldate',\n    'WM/OriginalReleaseYear': 'originalyear',\n    Description: 'comment',\n    'WM/TrackNumber': 'track',\n    'WM/PartOfSet': 'disk',\n    'WM/Genre': 'genre',\n    'WM/Composer': 'composer',\n    'WM/Lyrics': 'lyrics',\n    'WM/AlbumSortOrder': 'albumsort',\n    'WM/TitleSortOrder': 'titlesort',\n    'WM/ArtistSortOrder': 'artistsort',\n    'WM/AlbumArtistSortOrder': 'albumartistsort',\n    'WM/ComposerSortOrder': 'composersort',\n    'WM/Writer': 'lyricist',\n    'WM/Conductor': 'conductor',\n    'WM/ModifiedBy': 'remixer',\n    'WM/Engineer': 'engineer',\n    'WM/Producer': 'producer',\n    'WM/DJMixer': 'djmixer',\n    'WM/Mixer': 'mixer',\n    'WM/Publisher': 'label',\n    'WM/ContentGroupDescription': 'grouping',\n    'WM/SubTitle': 'subtitle',\n    'WM/SetSubTitle': 'discsubtitle',\n    // 'WM/PartOfSet': 'totaldiscs',\n    'WM/IsCompilation': 'compilation',\n    'WM/SharedUserRating': 'rating',\n    'WM/BeatsPerMinute': 'bpm',\n    'WM/Mood': 'mood',\n    'WM/Media': 'media',\n    'WM/CatalogNo': 'catalognumber',\n    'MusicBrainz/Album Status': 'releasestatus',\n    'MusicBrainz/Album Type': 'releasetype',\n    'MusicBrainz/Album Release Country': 'releasecountry',\n    'WM/Script': 'script',\n    'WM/Language': 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    'WM/EncodedBy': 'encodedby',\n    'WM/EncodingSettings': 'encodersettings',\n    'WM/Barcode': 'barcode',\n    'WM/ISRC': 'isrc',\n    'MusicBrainz/Track Id': 'musicbrainz_recordingid',\n    'MusicBrainz/Release Track Id': 'musicbrainz_trackid',\n    'MusicBrainz/Album Id': 'musicbrainz_albumid',\n    'MusicBrainz/Artist Id': 'musicbrainz_artistid',\n    'MusicBrainz/Album Artist Id': 'musicbrainz_albumartistid',\n    'MusicBrainz/Release Group Id': 'musicbrainz_releasegroupid',\n    'MusicBrainz/Work Id': 'musicbrainz_workid',\n    'MusicBrainz/TRM Id': 'musicbrainz_trmid',\n    'MusicBrainz/Disc Id': 'musicbrainz_discid',\n    'Acoustid/Id': 'acoustid_id',\n    'Acoustid/Fingerprint': 'acoustid_fingerprint',\n    'MusicIP/PUID': 'musicip_puid',\n    'WM/ARTISTS': 'artists',\n    'WM/InitialKey': 'key',\n    ASIN: 'asin',\n    'WM/Work': 'work',\n    'WM/AuthorURL': 'website',\n    'WM/Picture': 'picture'\n};\nexport class AsfTagMapper extends CommonTagMapper {\n    static toRating(rating) {\n        return {\n            rating: Number.parseFloat(rating + 1) / 5\n        };\n    }\n    constructor() {\n        super(['asf'], asfTagMap);\n    }\n    postMap(tag) {\n        switch (tag.id) {\n            case 'WM/SharedUserRating': {\n                const keys = tag.id.split(':');\n                tag.value = AsfTagMapper.toRating(tag.value);\n                tag.id = keys[0];\n                break;\n            }\n        }\n    }\n}\n", "import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * ID3v2.2 tag mappings\n */\nexport const id3v22TagMap = {\n    TT2: 'title',\n    TP1: 'artist',\n    TP2: 'albumartist',\n    TAL: 'album',\n    TYE: 'year',\n    COM: 'comment',\n    TRK: 'track',\n    TPA: 'disk',\n    TCO: 'genre',\n    PIC: 'picture',\n    TCM: 'composer',\n    TOR: 'originaldate',\n    TOT: 'originalalbum',\n    TXT: 'lyricist',\n    TP3: 'conductor',\n    TPB: 'label',\n    TT1: 'grouping',\n    TT3: 'subtitle',\n    TLA: 'language',\n    TCR: 'copyright',\n    WCP: 'license',\n    TEN: 'encodedby',\n    TSS: 'encodersettings',\n    WAR: 'website',\n    PCS: 'podcast',\n    TCP: \"compilation\",\n    TDR: 'date',\n    TS2: 'albumartistsort',\n    TSA: 'albumsort',\n    TSC: 'composersort',\n    TSP: 'artistsort',\n    TST: 'titlesort',\n    WFD: 'podcasturl',\n    TBP: 'bpm'\n};\nexport class ID3v22TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['ID3v2.2'], id3v22TagMap);\n    }\n}\n", "import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * ID3v2.2 tag mappings\n */\nconst apev2TagMap = {\n    Title: 'title',\n    Artist: 'artist',\n    Artists: 'artists',\n    'Album Artist': 'albumartist',\n    Album: 'album',\n    Year: 'date',\n    Originalyear: 'originalyear',\n    Originaldate: 'originaldate',\n    Releasedate: 'releasedate',\n    Comment: 'comment',\n    Track: 'track',\n    Disc: 'disk',\n    DISCNUMBER: 'disk', // ToDo: backwards compatibility', valid tag?\n    Genre: 'genre',\n    'Cover Art (Front)': 'picture',\n    'Cover Art (Back)': 'picture',\n    Composer: 'composer',\n    Lyrics: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    Lyricist: 'lyricist',\n    Writer: 'writer',\n    Conductor: 'conductor',\n    // 'Performer=artist\u00A0(instrument)': 'performer:instrument',\n    MixArtist: 'remixer',\n    Arranger: 'arranger',\n    Engineer: 'engineer',\n    Producer: 'producer',\n    DJMixer: 'djmixer',\n    Mixer: 'mixer',\n    Label: 'label',\n    Grouping: 'grouping',\n    Subtitle: 'subtitle',\n    DiscSubtitle: 'discsubtitle',\n    Compilation: 'compilation',\n    BPM: 'bpm',\n    Mood: 'mood',\n    Media: 'media',\n    CatalogNumber: 'catalognumber',\n    MUSICBRAINZ_ALBUMSTATUS: 'releasestatus',\n    MUSICBRAINZ_ALBUMTYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    Script: 'script',\n    Language: 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    EncodedBy: 'encodedby',\n    EncoderSettings: 'encodersettings',\n    Barcode: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    musicbrainz_trackid: 'musicbrainz_recordingid',\n    musicbrainz_releasetrackid: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    Acoustid_Id: 'acoustid_id',\n    ACOUSTID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    Weblink: 'website',\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    MP3GAIN_MINMAX: 'replaygain_track_minmax',\n    MP3GAIN_UNDO: 'replaygain_undo'\n};\nexport class APEv2TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['APEv2'], apev2TagMap);\n    }\n}\n", "import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * Ref: https://github.com/sergiomb2/libmp4v2/wiki/iTunesMetadata\n */\nconst mp4TagMap = {\n    '\u00A9nam': 'title',\n    '\u00A9ART': 'artist',\n    aART: 'albumartist',\n    /**\n     * ToDo: Album artist seems to be stored here while Picard documentation says: aART\n     */\n    '----:com.apple.iTunes:Band': 'albumartist',\n    '\u00A9alb': 'album',\n    '\u00A9day': 'date',\n    '\u00A9cmt': 'comment',\n    '\u00A9com': 'comment',\n    trkn: 'track',\n    disk: 'disk',\n    '\u00A9gen': 'genre',\n    covr: 'picture',\n    '\u00A9wrt': 'composer',\n    '\u00A9lyr': 'lyrics',\n    soal: 'albumsort',\n    sonm: 'titlesort',\n    soar: 'artistsort',\n    soaa: 'albumartistsort',\n    soco: 'composersort',\n    '----:com.apple.iTunes:LYRICIST': 'lyricist',\n    '----:com.apple.iTunes:CONDUCTOR': 'conductor',\n    '----:com.apple.iTunes:REMIXER': 'remixer',\n    '----:com.apple.iTunes:ENGINEER': 'engineer',\n    '----:com.apple.iTunes:PRODUCER': 'producer',\n    '----:com.apple.iTunes:DJMIXER': 'djmixer',\n    '----:com.apple.iTunes:MIXER': 'mixer',\n    '----:com.apple.iTunes:LABEL': 'label',\n    '\u00A9grp': 'grouping',\n    '----:com.apple.iTunes:SUBTITLE': 'subtitle',\n    '----:com.apple.iTunes:DISCSUBTITLE': 'discsubtitle',\n    cpil: 'compilation',\n    tmpo: 'bpm',\n    '----:com.apple.iTunes:MOOD': 'mood',\n    '----:com.apple.iTunes:MEDIA': 'media',\n    '----:com.apple.iTunes:CATALOGNUMBER': 'catalognumber',\n    tvsh: 'tvShow',\n    tvsn: 'tvSeason',\n    tves: 'tvEpisode',\n    sosn: 'tvShowSort',\n    tven: 'tvEpisodeId',\n    tvnn: 'tvNetwork',\n    pcst: 'podcast',\n    purl: 'podcasturl',\n    '----:com.apple.iTunes:MusicBrainz Album Status': 'releasestatus',\n    '----:com.apple.iTunes:MusicBrainz Album Type': 'releasetype',\n    '----:com.apple.iTunes:MusicBrainz Album Release Country': 'releasecountry',\n    '----:com.apple.iTunes:SCRIPT': 'script',\n    '----:com.apple.iTunes:LANGUAGE': 'language',\n    cprt: 'copyright',\n    '\u00A9cpy': 'copyright',\n    '----:com.apple.iTunes:LICENSE': 'license',\n    '\u00A9too': 'encodedby',\n    pgap: 'gapless',\n    '----:com.apple.iTunes:BARCODE': 'barcode',\n    '----:com.apple.iTunes:ISRC': 'isrc',\n    '----:com.apple.iTunes:ASIN': 'asin',\n    '----:com.apple.iTunes:NOTES': 'comment',\n    '----:com.apple.iTunes:MusicBrainz Track Id': 'musicbrainz_recordingid',\n    '----:com.apple.iTunes:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    '----:com.apple.iTunes:MusicBrainz Album Id': 'musicbrainz_albumid',\n    '----:com.apple.iTunes:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    '----:com.apple.iTunes:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    '----:com.apple.iTunes:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    '----:com.apple.iTunes:MusicBrainz Work Id': 'musicbrainz_workid',\n    '----:com.apple.iTunes:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    '----:com.apple.iTunes:MusicBrainz Disc Id': 'musicbrainz_discid',\n    '----:com.apple.iTunes:Acoustid Id': 'acoustid_id',\n    '----:com.apple.iTunes:Acoustid Fingerprint': 'acoustid_fingerprint',\n    '----:com.apple.iTunes:MusicIP PUID': 'musicip_puid',\n    '----:com.apple.iTunes:fingerprint': 'musicip_fingerprint',\n    '----:com.apple.iTunes:replaygain_track_gain': 'replaygain_track_gain',\n    '----:com.apple.iTunes:replaygain_track_peak': 'replaygain_track_peak',\n    '----:com.apple.iTunes:replaygain_album_gain': 'replaygain_album_gain',\n    '----:com.apple.iTunes:replaygain_album_peak': 'replaygain_album_peak',\n    '----:com.apple.iTunes:replaygain_track_minmax': 'replaygain_track_minmax',\n    '----:com.apple.iTunes:replaygain_album_minmax': 'replaygain_album_minmax',\n    '----:com.apple.iTunes:replaygain_undo': 'replaygain_undo',\n    // Additional mappings:\n    gnre: 'genre', // ToDo: check mapping\n    '----:com.apple.iTunes:ALBUMARTISTSORT': 'albumartistsort',\n    '----:com.apple.iTunes:ARTISTS': 'artists',\n    '----:com.apple.iTunes:ORIGINALDATE': 'originaldate',\n    '----:com.apple.iTunes:ORIGINALYEAR': 'originalyear',\n    '----:com.apple.iTunes:RELEASEDATE': 'releasedate',\n    // '----:com.apple.iTunes:PERFORMER': 'performer'\n    desc: 'description',\n    ldes: 'longDescription',\n    '\u00A9mvn': 'movement',\n    '\u00A9mvi': 'movementIndex',\n    '\u00A9mvc': 'movementTotal',\n    '\u00A9wrk': 'work',\n    catg: 'category',\n    egid: 'podcastId',\n    hdvd: 'hdVideo',\n    keyw: 'keywords',\n    shwm: 'showMovement',\n    stik: 'stik',\n    rate: 'rating'\n};\nexport const tagType = 'iTunes';\nexport class MP4TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super([tagType], mp4TagMap);\n    }\n    postMap(tag, _warnings) {\n        switch (tag.id) {\n            case 'rate':\n                tag.value = {\n                    source: undefined,\n                    rating: Number.parseFloat(tag.value) / 100\n                };\n                break;\n        }\n    }\n}\n", "import { CommonTagMapper } from '../../common/GenericTagMapper.js';\n/**\n * Vorbis tag mappings\n *\n * Mapping from native header format to one or possibly more 'common' entries\n * The common entries aim to read the same information from different media files\n * independent of the underlying format\n */\nconst vorbisTagMap = {\n    TITLE: 'title',\n    ARTIST: 'artist',\n    ARTISTS: 'artists',\n    ALBUMARTIST: 'albumartist',\n    'ALBUM ARTIST': 'albumartist',\n    ALBUM: 'album',\n    DATE: 'date',\n    ORIGINALDATE: 'originaldate',\n    ORIGINALYEAR: 'originalyear',\n    RELEASEDATE: 'releasedate',\n    COMMENT: 'comment',\n    TRACKNUMBER: 'track',\n    DISCNUMBER: 'disk',\n    GENRE: 'genre',\n    METADATA_BLOCK_PICTURE: 'picture',\n    COMPOSER: 'composer',\n    LYRICS: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    LYRICIST: 'lyricist',\n    WRITER: 'writer',\n    CONDUCTOR: 'conductor',\n    // 'PERFORMER=artist\u00A0(instrument)': 'performer:instrument', // ToDo\n    REMIXER: 'remixer',\n    ARRANGER: 'arranger',\n    ENGINEER: 'engineer',\n    PRODUCER: 'producer',\n    DJMIXER: 'djmixer',\n    MIXER: 'mixer',\n    LABEL: 'label',\n    GROUPING: 'grouping',\n    SUBTITLE: 'subtitle',\n    DISCSUBTITLE: 'discsubtitle',\n    TRACKTOTAL: 'totaltracks',\n    DISCTOTAL: 'totaldiscs',\n    COMPILATION: 'compilation',\n    RATING: 'rating',\n    BPM: 'bpm',\n    KEY: 'key',\n    MOOD: 'mood',\n    MEDIA: 'media',\n    CATALOGNUMBER: 'catalognumber',\n    RELEASESTATUS: 'releasestatus',\n    RELEASETYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    SCRIPT: 'script',\n    LANGUAGE: 'language',\n    COPYRIGHT: 'copyright',\n    LICENSE: 'license',\n    ENCODEDBY: 'encodedby',\n    ENCODERSETTINGS: 'encodersettings',\n    BARCODE: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    MUSICBRAINZ_TRACKID: 'musicbrainz_recordingid',\n    MUSICBRAINZ_RELEASETRACKID: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    ACOUSTID_ID: 'acoustid_id',\n    ACOUSTID_ID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    // 'FINGERPRINT=MusicMagic Fingerprint\u00A0{fingerprint}': 'musicip_fingerprint', // ToDo\n    WEBSITE: 'website',\n    NOTES: 'notes',\n    TOTALTRACKS: 'totaltracks',\n    TOTALDISCS: 'totaldiscs',\n    // Discogs\n    DISCOGS_ARTIST_ID: 'discogs_artist_id',\n    DISCOGS_ARTISTS: 'artists',\n    DISCOGS_ARTIST_NAME: 'artists',\n    DISCOGS_ALBUM_ARTISTS: 'albumartist',\n    DISCOGS_CATALOG: 'catalognumber',\n    DISCOGS_COUNTRY: 'releasecountry',\n    DISCOGS_DATE: 'originaldate',\n    DISCOGS_LABEL: 'label',\n    DISCOGS_LABEL_ID: 'discogs_label_id',\n    DISCOGS_MASTER_RELEASE_ID: 'discogs_master_release_id',\n    DISCOGS_RATING: 'discogs_rating',\n    DISCOGS_RELEASED: 'date',\n    DISCOGS_RELEASE_ID: 'discogs_release_id',\n    DISCOGS_VOTES: 'discogs_votes',\n    CATALOGID: 'catalognumber',\n    STYLE: 'genre',\n    //\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    REPLAYGAIN_ALBUM_GAIN: 'replaygain_album_gain',\n    REPLAYGAIN_ALBUM_PEAK: 'replaygain_album_peak',\n    // To Sure if these (REPLAYGAIN_MINMAX, REPLAYGAIN_ALBUM_MINMAX & REPLAYGAIN_UNDO) are used for Vorbis:\n    REPLAYGAIN_MINMAX: 'replaygain_track_minmax',\n    REPLAYGAIN_ALBUM_MINMAX: 'replaygain_album_minmax',\n    REPLAYGAIN_UNDO: 'replaygain_undo'\n};\nexport class VorbisTagMapper extends CommonTagMapper {\n    static toRating(email, rating, maxScore) {\n        return {\n            source: email ? email.toLowerCase() : undefined,\n            rating: (Number.parseFloat(rating) / maxScore) * CommonTagMapper.maxRatingScore\n        };\n    }\n    constructor() {\n        super(['vorbis'], vorbisTagMap);\n    }\n    postMap(tag) {\n        if (tag.id === 'RATING') {\n            // The way Winamp 5.666 assigns rating\n            tag.value = VorbisTagMapper.toRating(undefined, tag.value, 100);\n        }\n        else if (tag.id.indexOf('RATING:') === 0) {\n            const keys = tag.id.split(':');\n            tag.value = VorbisTagMapper.toRating(keys[1], tag.value, 1);\n            tag.id = keys[0];\n        }\n    }\n}\n", "import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * RIFF Info Tags; part of the EXIF 2.3\n * Ref: http://owl.phy.queensu.ca/~phil/exiftool/TagNames/RIFF.html#Info\n */\nexport const riffInfoTagMap = {\n    IART: 'artist', // Artist\n    ICRD: 'date', // DateCreated\n    INAM: 'title', // Title\n    TITL: 'title',\n    IPRD: 'album', // Product\n    ITRK: 'track',\n    IPRT: 'track', // Additional tag for track index\n    COMM: 'comment', // Comments\n    ICMT: 'comment', // Country\n    ICNT: 'releasecountry',\n    GNRE: 'genre', // Genre\n    IWRI: 'writer', // WrittenBy\n    RATE: 'rating',\n    YEAR: 'year',\n    ISFT: 'encodedby', // Software\n    CODE: 'encodedby', // EncodedBy\n    TURL: 'website', // URL,\n    IGNR: 'genre', // Genre\n    IENG: 'engineer', // Engineer\n    ITCH: 'technician', // Technician\n    IMED: 'media', // Original Media\n    IRPD: 'album' // Product, where the file was intended for\n};\nexport class RiffInfoTagMapper extends CommonTagMapper {\n    constructor() {\n        super(['exif'], riffInfoTagMap);\n    }\n}\n", "import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * EBML Tag map\n */\nconst ebmlTagMap = {\n    'segment:title': 'title',\n    'album:ARTIST': 'albumartist',\n    'album:ARTISTSORT': 'albumartistsort',\n    'album:TITLE': 'album',\n    'album:DATE_RECORDED': 'originaldate',\n    'album:DATE_RELEASED': 'releasedate',\n    'album:PART_NUMBER': 'disk',\n    'album:TOTAL_PARTS': 'totaltracks',\n    'track:ARTIST': 'artist',\n    'track:ARTISTSORT': 'artistsort',\n    'track:TITLE': 'title',\n    'track:PART_NUMBER': 'track',\n    'track:MUSICBRAINZ_TRACKID': 'musicbrainz_recordingid',\n    'track:MUSICBRAINZ_ALBUMID': 'musicbrainz_albumid',\n    'track:MUSICBRAINZ_ARTISTID': 'musicbrainz_artistid',\n    'track:PUBLISHER': 'label',\n    'track:GENRE': 'genre',\n    'track:ENCODER': 'encodedby',\n    'track:ENCODER_OPTIONS': 'encodersettings',\n    'edition:TOTAL_PARTS': 'totaldiscs',\n    picture: 'picture'\n};\nexport class MatroskaTagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['matroska'], ebmlTagMap);\n    }\n}\n", "import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ID3v1 tag mappings\n */\nconst tagMap = {\n    NAME: 'title',\n    AUTH: 'artist',\n    '(c) ': 'copyright',\n    ANNO: 'comment'\n};\nexport class AiffTagMapper extends CommonTagMapper {\n    constructor() {\n        super(['AIFF'], tagMap);\n    }\n}\n", "import { ID3v1TagMapper } from '../id3v1/ID3v1TagMap.js';\nimport { ID3v24TagMapper } from '../id3v2/ID3v24TagMapper.js';\nimport { AsfTagMapper } from '../asf/AsfTagMapper.js';\nimport { ID3v22TagMapper } from '../id3v2/ID3v22TagMapper.js';\nimport { APEv2TagMapper } from '../apev2/APEv2TagMapper.js';\nimport { MP4TagMapper } from '../mp4/MP4TagMapper.js';\nimport { VorbisTagMapper } from '../ogg/vorbis/VorbisTagMapper.js';\nimport { RiffInfoTagMapper } from '../riff/RiffInfoTagMap.js';\nimport { MatroskaTagMapper } from '../matroska/MatroskaTagMapper.js';\nimport { AiffTagMapper } from '../aiff/AiffTagMap.js';\nimport { InternalParserError } from '../ParseError.js';\nexport class CombinedTagMapper {\n    constructor() {\n        this.tagMappers = {};\n        [\n            new ID3v1TagMapper(),\n            new ID3v22TagMapper(),\n            new ID3v24TagMapper(),\n            new MP4TagMapper(),\n            new MP4TagMapper(),\n            new VorbisTagMapper(),\n            new APEv2TagMapper(),\n            new AsfTagMapper(),\n            new RiffInfoTagMapper(),\n            new MatroskaTagMapper(),\n            new AiffTagMapper()\n        ].forEach(mapper => {\n            this.registerTagMapper(mapper);\n        });\n    }\n    /**\n     * Convert native to generic (common) tags\n     * @param tagType Originating tag format\n     * @param tag     Native tag to map to a generic tag id\n     * @param warnings\n     * @return Generic tag result (output of this function)\n     */\n    mapTag(tagType, tag, warnings) {\n        const tagMapper = this.tagMappers[tagType];\n        if (tagMapper) {\n            return this.tagMappers[tagType].mapGenericTag(tag, warnings);\n        }\n        throw new InternalParserError(`No generic tag mapper defined for tag-format: ${tagType}`);\n    }\n    registerTagMapper(genericTagMapper) {\n        for (const tagType of genericTagMapper.tagTypes) {\n            this.tagMappers[tagType] = genericTagMapper;\n        }\n    }\n}\n", "import { LyricsContentType, TimestampFormat } from '../type.js';\n/**\n * Parse LRC (Lyrics) formatted text\n * Ref: https://en.wikipedia.org/wiki/LRC_(file_format)\n * @param lrcString\n */\nexport function parseLrc(lrcString) {\n    const lines = lrcString.split('\\n');\n    const syncText = [];\n    // Regular expression to match LRC timestamps (e.g., [00:45.52] or [00:45.520])\n    const timestampRegex = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/;\n    for (const line of lines) {\n        const match = line.match(timestampRegex);\n        if (match) {\n            const minutes = Number.parseInt(match[1], 10);\n            const seconds = Number.parseInt(match[2], 10);\n            const millisecondsStr = match[3];\n            let milliseconds;\n            if (millisecondsStr.length === 3) {\n                //  (e.g., .521 = 521 millseconds)\n                milliseconds = Number.parseInt(millisecondsStr, 10);\n            }\n            else {\n                //  (e.g., .52 = 520 millseconds)\n                milliseconds = Number.parseInt(millisecondsStr, 10) * 10;\n            }\n            // Convert the timestamp to milliseconds, as per TimestampFormat.milliseconds\n            const timestamp = (minutes * 60 + seconds) * 1000 + milliseconds;\n            // Get the text portion of the line (e.g., \"\u3042\u306E\u8776\u306F\u81EA\u7531\u306B\u306A\u308C\u305F\u304B\u306A\")\n            const text = line.replace(timestampRegex, '').trim();\n            syncText.push({ timestamp, text });\n        }\n    }\n    // Creating the ILyricsTag object\n    return {\n        contentType: LyricsContentType.lyrics,\n        timeStampFormat: TimestampFormat.milliseconds,\n        syncText,\n    };\n}\n", "export const mpegParserLoader = {\n    parserType: 'mpeg',\n    extensions: ['.mp2', '.mp3', '.m2a', '.aac', 'aacp'],\n    mimeTypes: ['audio/mpeg', 'audio/mp3', 'audio/aacs', 'audio/aacp'],\n    async load() {\n        return (await import('./MpegParser.js')).MpegParser;\n    }\n};\n", "export const apeParserLoader = {\n    parserType: 'apev2',\n    extensions: ['.ape'],\n    mimeTypes: ['audio/ape', 'audio/monkeys-audio'],\n    async load() {\n        return (await import('./APEv2Parser.js')).APEv2Parser;\n    }\n};\n", "export const asfParserLoader = {\n    parserType: 'asf',\n    extensions: ['.asf'],\n    mimeTypes: ['audio/ms-wma', 'video/ms-wmv', 'audio/ms-asf', 'video/ms-asf', 'application/vnd.ms-asf'],\n    async load() {\n        return (await import('./AsfParser.js')).AsfParser;\n    }\n};\n", "export const dsdiffParserLoader = {\n    parserType: 'dsdiff',\n    extensions: ['.dff'],\n    mimeTypes: ['audio/dsf', 'audio/dsd'],\n    async load() {\n        return (await import('./DsdiffParser.js')).DsdiffParser;\n    }\n};\n", "export const aiffParserLoader = {\n    parserType: 'aiff',\n    extensions: ['.aif', 'aiff', 'aifc'],\n    mimeTypes: ['audio/aiff', 'audio/aif', 'audio/aifc', 'application/aiff'],\n    async load() {\n        return (await import('./AiffParser.js')).AIFFParser;\n    }\n};\n", "export const dsfParserLoader = {\n    parserType: 'dsf',\n    extensions: ['.dsf'],\n    mimeTypes: ['audio/dsf'],\n    async load() {\n        return (await import('./DsfParser.js')).DsfParser;\n    }\n};\n", "export const flacParserLoader = {\n    parserType: 'flac',\n    extensions: ['.flac'],\n    mimeTypes: ['audio/flac'],\n    async load() {\n        return (await import('./FlacParser.js')).FlacParser;\n    }\n};\n", "export const matroskaParserLoader = {\n    parserType: 'matroska',\n    extensions: ['.mka', '.mkv', '.mk3d', '.mks', 'webm'],\n    mimeTypes: ['audio/matroska', 'video/matroska', 'audio/webm', 'video/webm'],\n    async load() {\n        return (await import('./MatroskaParser.js')).MatroskaParser;\n    }\n};\n", "export const mp4ParserLoader = {\n    parserType: 'mp4',\n    extensions: ['.mp4', '.m4a', '.m4b', '.m4pa', 'm4v', 'm4r', '3gp'],\n    mimeTypes: ['audio/mp4', 'audio/m4a', 'video/m4v', 'video/mp4'],\n    async load() {\n        return (await import('./MP4Parser.js')).MP4Parser;\n    }\n};\n", "export const musepackParserLoader = {\n    parserType: 'musepack',\n    extensions: ['.mpc'],\n    mimeTypes: ['audio/musepack'],\n    async load() {\n        return (await import('./MusepackParser.js')).MusepackParser;\n    }\n};\n", "export const oggParserLoader = {\n    parserType: 'ogg',\n    extensions: ['.ogg', '.ogv', '.oga', '.ogm', '.ogx', '.opus', '.spx'],\n    mimeTypes: ['audio/ogg', 'audio/opus', 'audio/speex', 'video/ogg'], // RFC 7845, RFC 6716, RFC 5574\n    async load() {\n        return (await import('./OggParser.js')).OggParser;\n    }\n};\n", "export const wavpackParserLoader = {\n    parserType: 'wavpack',\n    extensions: ['.wv', '.wvp'],\n    mimeTypes: ['audio/wavpack'],\n    async load() {\n        return (await import('./WavPackParser.js')).WavPackParser;\n    }\n};\n", "export const riffParserLoader = {\n    parserType: 'riff',\n    extensions: ['.wav', 'wave', '.bwf'],\n    mimeTypes: ['audio/vnd.wave', 'audio/wav', 'audio/wave'],\n    async load() {\n        return (await import('./WaveParser.js')).WaveParser;\n    }\n};\n", "import { textDecode } from '@borewit/text-codec';\nexport const endTag2 = 'LYRICS200';\nexport async function getLyricsHeaderLength(tokenizer) {\n    const fileSize = tokenizer.fileInfo.size;\n    if (fileSize >= 143) {\n        const buf = new Uint8Array(15);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(buf, { position: fileSize - 143 });\n        tokenizer.setPosition(position); // Restore position\n        const txt = textDecode(buf, 'latin1');\n        const tag = txt.substring(6);\n        if (tag === endTag2) {\n            return Number.parseInt(txt.substring(0, 6), 10) + 15;\n        }\n    }\n    return 0;\n}\n"],
  "mappings": "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",
  "names": ["err", "debug", "useColors", "debug", "init_lib", "init_lib", "ContentType", "init_lib", "init_lib", "textDecode", "decodeUTF8", "decodeUTF16LE", "decodeASCII", "decodeLatin1", "decodeWindows1252", "WINDOWS_1252_EXTRA", "WINDOWS_1252_REVERSE", "init_lib", "init_lib", "textDecode", "isBitSet", "init_lib", "import_debug", "debug", "init_lib", "initDebug", "textDecode", "textDecode", "import_debug", "debug", "init_lib", "initDebug", "import_debug", "debug", "init_lib", "initDebug", "makeUnexpectedMajorVersionError", "init_lib", "textDecode", "import_debug", "debug", "initDebug", "err", "init_lib", "init_lib", "import_debug", "debug", "init_lib", "initDebug", "err", "init_lib", "init_lib", "import_debug", "debug", "initDebug", "err", "init_lib", "import_debug", "debug", "init_lib", "initDebug", "init_lib", "Header", "init_lib", "import_debug", "debug", "init_lib", "initDebug", "Header", "err", "init_lib", "import_debug", "debug", "initDebug", "init_lib", "init_lib", "textDecode", "import_debug", "debug", "init_lib", "debugInit", "init_lib", "import_debug", "debug", "init_lib", "initDebug", "DataType", "init_types", "init_types", "DataType", "path", "import_debug", "debug", "init_lib", "init_types", "initDebug", "DataType", "import_debug", "debug", "initDebug", "index", "value", "debug", "import_debug", "Header", "init_lib", "initDebug", "import_debug", "debug", "initDebug", "Header", "import_debug", "debug", "tagFormat", "init_lib", "initDebug", "td", "Header", "textDecode", "import_debug", "debug", "StreamReader", "init_lib", "initDebug", "import_debug", "debug", "initDebug", "StreamReader", "init_lib", "bits", "Header", "init_lib", "textDecode", "import_debug", "debug", "initDebug", "Header", "import_debug", "debug", "init_lib", "initDebug", "init_lib", "init_lib", "Header", "init_lib", "import_debug", "debug", "initDebug", "Header", "IdentificationHeader", "init_lib", "import_debug", "debug", "initDebug", "IdentificationHeader", "init_lib", "dv", "import_debug", "debug", "initDebug", "import_debug", "debug", "init_lib", "initDebug", "stream", "err", "isBitSet", "getBitAllignedNumber", "init_lib", "import_debug", "debug", "init_lib", "initDebug", "Header", "init_lib", "init_lib", "init_lib", "import_debug", "debug", "init_lib", "initDebug", "Header", "err", "app", "err", "readFileSync", "existsSync", "join", "import_debug", "init_lib", "init_lib", "require", "Worker", "Worker", "require", "l", "init_lib", "initDebug", "stop", "init_lib", "import_debug", "import_debug", "tagMap", "init_lib", "tagMap", "tagType", "debug", "initDebug", "tagType", "debug", "initDebug", "ContentType", "mimeTypeParse", "init_lib", "textDecode", "debug", "initDebug", "debug", "existsSync", "readFileSync", "join"]
}
